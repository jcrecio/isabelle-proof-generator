{"file_name": "/home/qj213/afp-2021-10-22/thys/Differential_Game_Logic/Coincidence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Differential_Game_Logic", "problem_names": ["lemma nostatediff: \"x\\<notin>statediff \\<nu> \\<omega> \\<Longrightarrow> \\<nu>(x)=\\<omega>(x)\"", "lemma stateinterpol_empty: \"stateinterpol \\<nu> \\<omega> {} = \\<omega>\"", "lemma stateinterpol_left [simp]: \"x\\<in>S \\<Longrightarrow> (stateinterpol \\<nu> \\<omega> S)(x)=\\<nu>(x)\"", "lemma stateinterpol_right [simp]: \"x\\<notin>S \\<Longrightarrow> (stateinterpol \\<nu> \\<omega> S)(x)=\\<omega>(x)\"", "lemma Vagree_stateinterpol [simp]: \"Vagree (stateinterpol \\<nu> \\<omega> S) \\<nu> S\"\n  and \"Vagree (stateinterpol \\<nu> \\<omega> S) \\<omega> (-S)\"", "lemma Vagree_ror: \"Vagree \\<nu> \\<nu>' (V\\<inter>W) \\<Longrightarrow> (\\<exists>\\<omega>. (Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W))\"", "lemma restrictto_extends [simp]: \"restrictto X V \\<supseteq> X\"", "lemma restrictto_compose [simp]: \"restrictto (restrictto X V) W = restrictto X (V\\<inter>W)\"", "lemma restrictto_antimon [simp]: \"W\\<supseteq>V \\<Longrightarrow> restrictto X W \\<subseteq> restrictto X V\"", "lemma restrictto_empty [simp]: \"X\\<noteq>{} \\<Longrightarrow> restrictto X {} = worlds\"", "lemma selectlike_shrinks [simp]: \"selectlike X \\<nu> V \\<subseteq> X\"", "lemma selectlike_compose [simp]: \"selectlike (selectlike X \\<nu> V) \\<nu> W = selectlike X \\<nu> (V\\<union>W)\"", "lemma selectlike_antimon [simp]: \"W\\<supseteq>V \\<Longrightarrow> selectlike X \\<nu> W \\<subseteq> selectlike X \\<nu> V\"", "lemma selectlike_empty [simp]: \"selectlike X \\<nu> {} = X\"", "lemma selectlike_self [simp]: \"(\\<nu> \\<in> selectlike X \\<nu> V) = (\\<nu>\\<in>X)\"", "lemma selectlike_complement [simp]: \"selectlike (-X) \\<nu> V \\<subseteq> -selectlike X \\<nu> V\"", "lemma selectlike_union: \"selectlike (X\\<union>Y) \\<nu> V = selectlike X \\<nu> V \\<union> selectlike Y \\<nu> V\"", "lemma selectlike_Sup: \"selectlike (Sup M) \\<nu> V = Sup {selectlike X \\<nu> V | X. X\\<in>M}\"", "lemma selectlike_equal_cond: \"(selectlike X \\<nu> V = selectlike Y \\<nu> V) = (\\<forall>\\<mu>. Uvariation \\<mu> \\<nu> (-V) \\<longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\"", "lemma selectlike_equal_cocond: \"(selectlike X \\<nu> (-V) = selectlike Y \\<nu> (-V)) = (\\<forall>\\<mu>. Uvariation \\<mu> \\<nu> V \\<longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\"", "lemma selectlike_equal_cocond_rule: \"(\\<And>\\<mu>. Uvariation \\<mu> \\<nu> (-V) \\<Longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\n  \\<Longrightarrow> (selectlike X \\<nu> V = selectlike Y \\<nu> V)\"", "lemma selectlike_equal_cocond_corule: \"(\\<And>\\<mu>. Uvariation \\<mu> \\<nu> V \\<Longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\n  \\<Longrightarrow> (selectlike X \\<nu> (-V) = selectlike Y \\<nu> (-V))\"", "lemma co_selectlike: \"-(selectlike X \\<nu> V) = (-X) \\<union> {\\<omega>. \\<not>Vagree \\<omega> \\<nu> V}\"", "lemma selectlike_co_selectlike: \"selectlike (-(selectlike X \\<nu> V)) \\<nu> V = selectlike (-X) \\<nu> V\"", "lemma selectlike_Vagree: \"Vagree \\<nu> \\<omega> V \\<Longrightarrow> selectlike X \\<nu> V = selectlike X \\<omega> V\"", "lemma similar_selectlike_mem: \"Vagree \\<nu> \\<omega> V \\<Longrightarrow> (\\<nu>\\<in>selectlike X \\<omega> V) = (\\<nu>\\<in>X)\"", "lemma BVG_nonelem [simp] :\"(x\\<notin>BVG \\<alpha>) = (\\<forall>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x})))\"", "lemma Vagree_statediff [simp]: \"Vagree \\<omega> \\<omega>' S \\<Longrightarrow> statediff \\<omega> \\<omega>' \\<subseteq> -S\"", "lemma stateinterpol_diff [simp]: \"stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) = \\<nu>\"", "lemma stateinterpol_insert: \"Vagree (stateinterpol v w S) (stateinterpol v w (insert z S)) (-{z})\"", "lemma stateinterpol_FVT [simp]: \"z\\<notin>FVT(t) \\<Longrightarrow> term_sem I t (stateinterpol \\<omega> \\<omega>' S) = term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))\"", "theorem coincidence_term: \"Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow> term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'\"", "lemma stateinterpol_FVF [simp]: \"z\\<notin>FVF(e) \\<Longrightarrow> \n  ((stateinterpol \\<omega> \\<omega>' S) \\<in> fml_sem I e \\<longleftrightarrow> (stateinterpol \\<omega> \\<omega>' (insert z S)) \\<in> fml_sem I e)\"", "theorem coincidence_formula: \"Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow> (\\<omega> \\<in> fml_sem I \\<phi> \\<longleftrightarrow> \\<omega>' \\<in> fml_sem I \\<phi>)\"", "lemma Cignorabimus_finite [simp]: \"finite (Cignorabimus \\<alpha> V)\"", "lemma Cignorabimus_equiv [simp]: \"Cignorabimus \\<alpha> V = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>\\<omega>'.\\<forall>X. (Vagree \\<omega> \\<omega>' (-M) \\<longrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) = (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)))}\"", "lemma Cignorabimus_antimon [simp]: \"M \\<in> Cignorabimus \\<alpha> V \\<and> N\\<subseteq>M \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V\"", "lemma coempty: \"-{}=allvars\"", "lemma Cignorabimus_empty [simp]: \"{} \\<in> Cignorabimus \\<alpha> V\"", "lemma Cignorabimus_init: \"V\\<supseteq>FVG(\\<alpha>) \\<Longrightarrow> x\\<notin>V \\<Longrightarrow> {x}\\<in>Cignorabimus \\<alpha> V\"", "lemma Cignorabimus_union: \"M\\<in>Cignorabimus \\<alpha> V \\<Longrightarrow> N\\<in>Cignorabimus \\<alpha> V \\<Longrightarrow> (M\\<union>N)\\<in>Cignorabimus \\<alpha> V\"", "lemma powersetup_induct [case_names Base Cup]:\n   \"\\<And>C. (\\<And>M. M\\<in>C \\<Longrightarrow> P M) \\<Longrightarrow>\n    (\\<And>S. (\\<And>M. M\\<in>S \\<Longrightarrow> P M) \\<Longrightarrow> P (\\<Union>S)) \\<Longrightarrow>\n     P (\\<Union>C)\"", "lemma Union_insert: \"\\<Union>(insert x S) = x\\<union>\\<Union>S\"", "lemma powerset2up_induct [case_names Finite Nonempty Base Cup]:\n   \"(finite C) \\<Longrightarrow> (C\\<noteq>{}) \\<Longrightarrow> (\\<And>M. M\\<in>C \\<Longrightarrow> P M) \\<Longrightarrow>\n    (\\<And>M N. P M \\<Longrightarrow> P N \\<Longrightarrow> P (M\\<union>N)) \\<Longrightarrow>\n     P (\\<Union>C)\"", "lemma Cignorabimus_step: \"(\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Cignorabimus \\<alpha> V) \\<Longrightarrow> (\\<Union>S)\\<in>Cignorabimus \\<alpha> V\"", "theorem coincidence_game: \"Vagree \\<omega> \\<omega>' V \\<Longrightarrow> V\\<supseteq>FVG(\\<alpha>) \\<Longrightarrow> (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) = (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))\"", "lemma Bignorabimus_finite [simp]: \"finite (Bignorabimus \\<alpha>)\"", "lemma Bignorabimus_single [simp]: \"game_sem I \\<alpha> (selectlike X \\<omega> M) \\<subseteq> game_sem I \\<alpha> X\"", "lemma Bignorabimus_equiv [simp]: \"Bignorabimus \\<alpha> = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>X. (\\<omega>\\<in>game_sem I \\<alpha> X \\<longrightarrow> \\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> M))}\"", "lemma Bignorabimus_empty [simp]: \"{} \\<in> Bignorabimus \\<alpha>\"", "lemma Bignorabimus_init: \"x\\<notin>BVG(\\<alpha>) \\<Longrightarrow> {x}\\<in>Bignorabimus \\<alpha>\"", "lemma Bignorabimus_union: \"M\\<in>Bignorabimus \\<alpha> \\<Longrightarrow> N\\<in>Bignorabimus \\<alpha> \\<Longrightarrow> (M\\<union>N)\\<in>Bignorabimus \\<alpha>\"", "lemma Bignorabimus_step: \"(\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Bignorabimus \\<alpha>) \\<Longrightarrow> (\\<Union>S)\\<in>Bignorabimus \\<alpha>\"", "theorem boundeffect: \"(\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (-BVG(\\<alpha>))))\"", "lemma BVG_equiv: \"game_equiv \\<alpha> \\<beta> \\<Longrightarrow> BVG(\\<alpha>) = BVG(\\<beta>)\"", "lemmas union_or = Set.Un_iff", "lemma not_union_or: \"(x\\<notin>A\\<union>B) = (x\\<notin>A \\<and> x\\<notin>B)\"", "lemma repv_selectlike_self: \"(repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) = (d=\\<omega>(x) \\<and> \\<omega> \\<in> X)\"", "lemma repv_selectlike_other: \"x\\<noteq>y \\<Longrightarrow> (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) = (repv \\<omega> x d \\<in> X)\"", "lemma repv_selectlike_other_converse: \"x\\<noteq>y \\<Longrightarrow> (repv \\<omega> x d \\<in> X) = (repv \\<omega> x d \\<in> selectlike X \\<omega> {y})\"", "lemma BVG_assign_other: \"x\\<noteq>y \\<Longrightarrow> y\\<notin>BVG(Assign x \\<theta>)\"", "lemma BVG_assign_meta: \"(\\<And>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x)) \\<Longrightarrow> BVG(Assign x \\<theta>) = {}\"\n  and \"term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> BVG(Assign x \\<theta>) = {x}\"", "lemma BVG_assign: \"BVG(Assign x \\<theta>) = (if (\\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x)) then {} else {x})\"", "lemma BVG_ODE_other: \"y\\<noteq>RVar x \\<Longrightarrow> y\\<noteq>DVar x \\<Longrightarrow> y\\<notin>BVG(ODE x \\<theta>)\"", "lemma BVG_ODE: \"BVG(ODE x \\<theta>) \\<subseteq> {RVar x,DVar x}\"", "lemma BVG_test: \"BVG(Test \\<phi>) = {}\"", "lemma BVG_choice: \"BVG(Choice \\<alpha> \\<beta>) \\<subseteq> BVG(\\<alpha>) \\<union> BVG(\\<beta>)\"", "lemma select_nonBV: \"x\\<notin>BVG(\\<alpha>) \\<Longrightarrow> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x} = selectlike (game_sem I \\<alpha> X) \\<omega> {x}\"", "lemma BVG_compose: \"BVG(Compose \\<alpha> \\<beta>) \\<subseteq> BVG(\\<alpha>) \\<union> BVG(\\<beta>)\"", "lemma \"BVG(Compose (Assign x (Plus (Var x) (Number 1))) (Assign x (Plus (Var x) (Number (-1))))) \n    \\<noteq> BVG(Assign x (Plus (Var x) (Number 1))) \\<union> BVG(Assign x (Plus (Var x) (Number (-1))))\"", "lemma BVG_loop: \"BVG(Loop \\<alpha>) \\<subseteq> BVG(\\<alpha>)\"", "lemma BVG_dual: \"BVG(Dual \\<alpha>) \\<subseteq> BVG(\\<alpha>)\""], "translations": [["", "lemma nostatediff: \"x\\<notin>statediff \\<nu> \\<omega> \\<Longrightarrow> \\<nu>(x)=\\<omega>(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    \\<nu> x = \\<omega> x", "by (simp add: statediff_def)"], ["", "lemma stateinterpol_empty: \"stateinterpol \\<nu> \\<omega> {} = \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stateinterpol \\<nu> \\<omega> {} = \\<omega>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x", "have empty: \"\\<And>x. \\<not>(x\\<in>{})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> {}", "by auto"], ["proof (state)\nthis:\n  ?x \\<notin> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x", "show \"\\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x", "using empty"], ["proof (prove)\nusing this:\n  ?x \\<notin> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. stateinterpol \\<nu> \\<omega> {} x = \\<omega> x", "by (simp add: stateinterpol_def)"], ["proof (state)\nthis:\n  stateinterpol \\<nu> \\<omega> {} ?x1 = \\<omega> ?x1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stateinterpol_left [simp]: \"x\\<in>S \\<Longrightarrow> (stateinterpol \\<nu> \\<omega> S)(x)=\\<nu>(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> S \\<Longrightarrow> stateinterpol \\<nu> \\<omega> S x = \\<nu> x", "by (simp add: stateinterpol_def)"], ["", "lemma stateinterpol_right [simp]: \"x\\<notin>S \\<Longrightarrow> (stateinterpol \\<nu> \\<omega> S)(x)=\\<omega>(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> S \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> S x = \\<omega> x", "by (simp add: stateinterpol_def)"], ["", "lemma Vagree_stateinterpol [simp]: \"Vagree (stateinterpol \\<nu> \\<omega> S) \\<nu> S\"\n  and \"Vagree (stateinterpol \\<nu> \\<omega> S) \\<omega> (-S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (stateinterpol \\<nu> \\<omega> S) \\<nu> S &&&\n    Vagree (stateinterpol \\<nu> \\<omega> S) \\<omega> (- S)", "unfolding Vagree_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       i \\<in> S \\<longrightarrow>\n       stateinterpol \\<nu> \\<omega> S i = \\<nu> i &&&\n    \\<forall>i.\n       i \\<in> - S \\<longrightarrow>\n       stateinterpol \\<nu> \\<omega> S i = \\<omega> i", "by auto"], ["", "lemma Vagree_ror: \"Vagree \\<nu> \\<nu>' (V\\<inter>W) \\<Longrightarrow> (\\<exists>\\<omega>. (Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "assume \"Vagree \\<nu> \\<nu>' (V\\<inter>W)\""], ["proof (state)\nthis:\n  Vagree \\<nu> \\<nu>' (V \\<inter> W)\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "hence \"\\<forall>x. x\\<in>V\\<inter>W \\<longrightarrow> \\<nu>(x)=\\<nu>'(x)\""], ["proof (prove)\nusing this:\n  Vagree \\<nu> \\<nu>' (V \\<inter> W)\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> V \\<inter> W \\<longrightarrow> \\<nu> x = \\<nu>' x", "by (simp add: Vagree_def)"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> V \\<inter> W \\<longrightarrow> \\<nu> x = \\<nu>' x\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "let ?w=\"stateinterpol \\<nu> \\<nu>' V\""], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "have l: \"Vagree \\<nu> ?w V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V", "by (simp add: Vagree_def)"], ["proof (state)\nthis:\n  Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "have r: \"Vagree ?w \\<nu>' W \\<and> Vagree ?w \\<nu>' W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W \\<and>\n    Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W", "by (simp add: Vagree_def stateinterpol_def \\<open>\\<forall>x. x\\<in>V\\<inter>W \\<longrightarrow> \\<nu> x = \\<nu>' x\\<close>)"], ["proof (state)\nthis:\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W \\<and>\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "have \"Vagree \\<nu> ?w V \\<and> Vagree ?w \\<nu>' W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V \\<and>\n    Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W", "using l and r"], ["proof (prove)\nusing this:\n  Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W \\<and>\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V \\<and>\n    Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W", "by blast"], ["proof (state)\nthis:\n  Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V \\<and>\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<nu>' (V \\<inter> W) \\<Longrightarrow>\n    \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "thus ?thesis"], ["proof (prove)\nusing this:\n  Vagree \\<nu> (stateinterpol \\<nu> \\<nu>' V) V \\<and>\n  Vagree (stateinterpol \\<nu> \\<nu>' V) \\<nu>' W\n\ngoal (1 subgoal):\n 1. \\<exists>\\<omega>.\n       Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<omega>. Vagree \\<nu> \\<omega> V \\<and> Vagree \\<omega> \\<nu>' W\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Remark 8 \\<^url>\\<open>https://doi.org/10.1007/978-3-319-94205-6_15\\<close> about simple properties of projections\\<close>"], ["", "lemma restrictto_extends [simp]: \"restrictto X V \\<supseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> restrictto X V", "by (auto simp add: restrictto_def)"], ["", "lemma restrictto_compose [simp]: \"restrictto (restrictto X V) W = restrictto X (V\\<inter>W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrictto (restrictto X V) W = restrictto X (V \\<inter> W)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. restrictto (restrictto X V) W \\<subseteq> restrictto X (V \\<inter> W)\n 2. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "show \"restrictto (restrictto X V) W \\<subseteq> restrictto X (V\\<inter>W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrictto (restrictto X V) W \\<subseteq> restrictto X (V \\<inter> W)", "by (auto simp add: restrictto_def Vagree_def)"], ["proof (state)\nthis:\n  restrictto (restrictto X V) W \\<subseteq> restrictto X (V \\<inter> W)\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "show \"restrictto X (V\\<inter>W) \\<subseteq> restrictto (restrictto X V) W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "(*by (smt Vagree_ror mem_Collect_eq restrictto_def subsetI)*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "(* sledgehammer *)"], ["proof (state)\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "obtain rr :: \"(variable \\<Rightarrow> real) set \\<Rightarrow> (variable \\<Rightarrow> real) set \\<Rightarrow> variable \\<Rightarrow> real\" where\n  \"\\<forall>x0 x1. (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> x0) = (rr x0 x1 \\<in> x1 \\<and> rr x0 x1 \\<notin> x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rr.\n        \\<forall>x0 x1.\n           (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> x0) =\n           (rr x0 x1 \\<in> x1 \\<and> rr x0 x1 \\<notin> x0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> x0) =\n     (rr x0 x1 \\<in> x1 \\<and> rr x0 x1 \\<notin> x0)\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> x0) =\n     (rr x0 x1 \\<in> x1 \\<and> rr x0 x1 \\<notin> x0)", "have f1: \"\\<forall>F Fa. rr Fa F \\<in> F \\<and> rr Fa F \\<notin> Fa \\<or> F \\<subseteq> Fa\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> x0) =\n     (rr x0 x1 \\<in> x1 \\<and> rr x0 x1 \\<notin> x0)\n\ngoal (1 subgoal):\n 1. \\<forall>F Fa.\n       rr Fa F \\<in> F \\<and> rr Fa F \\<notin> Fa \\<or> F \\<subseteq> Fa", "by (meson subsetI)"], ["proof (state)\nthis:\n  \\<forall>F Fa.\n     rr Fa F \\<in> F \\<and> rr Fa F \\<notin> Fa \\<or> F \\<subseteq> Fa\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "obtain rra :: \"(variable \\<Rightarrow> real) \\<Rightarrow> variable set \\<Rightarrow> (variable \\<Rightarrow> real) set \\<Rightarrow> variable \\<Rightarrow> real\" where\n  \"\\<forall>x0 x1 x2. (\\<exists>v3. v3 \\<in> x2 \\<and> Vagree v3 x0 x1) = (rra x0 x1 x2 \\<in> x2 \\<and> Vagree (rra x0 x1 x2) x0 x1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rra.\n        \\<forall>x0 x1 x2.\n           (\\<exists>v3. v3 \\<in> x2 \\<and> Vagree v3 x0 x1) =\n           (rra x0 x1 x2 \\<in> x2 \\<and>\n            Vagree (rra x0 x1 x2) x0 x1) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. v3 \\<in> x2 \\<and> Vagree v3 x0 x1) =\n     (rra x0 x1 x2 \\<in> x2 \\<and> Vagree (rra x0 x1 x2) x0 x1)\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "then"], ["proof (chain)\npicking this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. v3 \\<in> x2 \\<and> Vagree v3 x0 x1) =\n     (rra x0 x1 x2 \\<in> x2 \\<and> Vagree (rra x0 x1 x2) x0 x1)", "have f2: \"\\<forall>F V f. (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or> rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and> (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or> (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\""], ["proof (prove)\nusing this:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. v3 \\<in> x2 \\<and> Vagree v3 x0 x1) =\n     (rra x0 x1 x2 \\<in> x2 \\<and> Vagree (rra x0 x1 x2) x0 x1)\n\ngoal (1 subgoal):\n 1. \\<forall>F V f.\n       (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n        rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n       (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n        (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))", "by blast"], ["proof (state)\nthis:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "moreover"], ["proof (state)\nthis:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "{"], ["proof (state)\nthis:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "assume \"\\<exists>f. f \\<in> X \\<and> Vagree f (v4_1 W V (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (rra (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (V \\<inter> W) X)) V\""], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "moreover"], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "{"], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "assume \"\\<exists>f. f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree f (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) W\""], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "then"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W", "have \"rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<notin> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or> rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<in> {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W}\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W\n\ngoal (1 subgoal):\n 1. rr {f. \\<exists>fa.\n              fa \\<in> {f. \\<exists>fa.\n                              fa \\<in> X \\<and> Vagree fa f V} \\<and>\n              Vagree fa f W}\n     {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<notin> {f. \\<exists>fa.\n                    fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or>\n    rr {f. \\<exists>fa.\n              fa \\<in> {f. \\<exists>fa.\n                              fa \\<in> X \\<and> Vagree fa f V} \\<and>\n              Vagree fa f W}\n     {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<in> {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}", "by blast"], ["proof (state)\nthis:\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<notin> {f. \\<exists>fa.\n                  fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or>\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<in> {f. \\<exists>fa.\n               fa \\<in> {f. \\<exists>fa.\n                               fa \\<in> X \\<and> Vagree fa f V} \\<and>\n               Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "then"], ["proof (chain)\npicking this:\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<notin> {f. \\<exists>fa.\n                  fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or>\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<in> {f. \\<exists>fa.\n               fa \\<in> {f. \\<exists>fa.\n                               fa \\<in> X \\<and> Vagree fa f V} \\<and>\n               Vagree fa f W}", "have \"{f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<subseteq> {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W}\""], ["proof (prove)\nusing this:\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<notin> {f. \\<exists>fa.\n                  fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or>\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<in> {f. \\<exists>fa.\n               fa \\<in> {f. \\<exists>fa.\n                               fa \\<in> X \\<and> Vagree fa f V} \\<and>\n               Vagree fa f W}\n\ngoal (1 subgoal):\n 1. {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "using f1"], ["proof (prove)\nusing this:\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<notin> {f. \\<exists>fa.\n                  fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<or>\n  rr {f. \\<exists>fa.\n            fa \\<in> {f. \\<exists>fa.\n                            fa \\<in> X \\<and> Vagree fa f V} \\<and>\n            Vagree fa f W}\n   {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<in> {f. \\<exists>fa.\n               fa \\<in> {f. \\<exists>fa.\n                               fa \\<in> X \\<and> Vagree fa f V} \\<and>\n               Vagree fa f W}\n  \\<forall>F Fa.\n     rr Fa F \\<in> F \\<and> rr Fa F \\<notin> Fa \\<or> F \\<subseteq> Fa\n\ngoal (1 subgoal):\n 1. {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "by meson"], ["proof (state)\nthis:\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "}"], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W \\<Longrightarrow>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W \\<Longrightarrow>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}", "have \"(\\<not> Vagree (rra (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (V \\<inter> W) X) (v4_1 W V (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (rra (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (V \\<inter> W) X)) V \\<or> \\<not> Vagree (v4_1 W V (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (rra (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) (V \\<inter> W) X)) (rr {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W} {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}) W) \\<or> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<subseteq> {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W}\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W \\<Longrightarrow>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. (\\<not> Vagree\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X)\n             (v4_1 W V\n               (rr {f. \\<exists>fa.\n                          fa \\<in> {f. \\<exists>fa.\n    fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                          Vagree fa f W}\n                 {f. \\<exists>fa.\n                        fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (rra (rr {f. \\<exists>fa.\n                               fa \\<in> {f.\n   \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                               Vagree fa f W}\n                      {f. \\<exists>fa.\n                             fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n                 (V \\<inter> W) X))\n             V \\<or>\n     \\<not> Vagree\n             (v4_1 W V\n               (rr {f. \\<exists>fa.\n                          fa \\<in> {f. \\<exists>fa.\n    fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                          Vagree fa f W}\n                 {f. \\<exists>fa.\n                        fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (rra (rr {f. \\<exists>fa.\n                               fa \\<in> {f.\n   \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                               Vagree fa f W}\n                      {f. \\<exists>fa.\n                             fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n                 (V \\<inter> W) X))\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             W) \\<or>\n    {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "using f2"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V\n  \\<exists>f.\n     f \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n     Vagree f\n      (rr {f. \\<exists>fa.\n                 fa \\<in> {f. \\<exists>fa.\n                                 fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                 Vagree fa f W}\n        {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n      W \\<Longrightarrow>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n\ngoal (1 subgoal):\n 1. (\\<not> Vagree\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X)\n             (v4_1 W V\n               (rr {f. \\<exists>fa.\n                          fa \\<in> {f. \\<exists>fa.\n    fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                          Vagree fa f W}\n                 {f. \\<exists>fa.\n                        fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (rra (rr {f. \\<exists>fa.\n                               fa \\<in> {f.\n   \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                               Vagree fa f W}\n                      {f. \\<exists>fa.\n                             fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n                 (V \\<inter> W) X))\n             V \\<or>\n     \\<not> Vagree\n             (v4_1 W V\n               (rr {f. \\<exists>fa.\n                          fa \\<in> {f. \\<exists>fa.\n    fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                          Vagree fa f W}\n                 {f. \\<exists>fa.\n                        fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (rra (rr {f. \\<exists>fa.\n                               fa \\<in> {f.\n   \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                               Vagree fa f W}\n                      {f. \\<exists>fa.\n                             fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n                 (V \\<inter> W) X))\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             W) \\<or>\n    {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "by meson"], ["proof (state)\nthis:\n  (\\<not> Vagree\n           (rra (rr {f. \\<exists>fa.\n                           fa \\<in> {f. \\<exists>fa.\n     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                           Vagree fa f W}\n                  {f. \\<exists>fa.\n                         fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (V \\<inter> W) X)\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           V \\<or>\n   \\<not> Vagree\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           (rr {f. \\<exists>fa.\n                      fa \\<in> {f. \\<exists>fa.\nfa \\<in> X \\<and> Vagree fa f V} \\<and>\n                      Vagree fa f W}\n             {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n           W) \\<or>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "}"], ["proof (state)\nthis:\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V \\<Longrightarrow>\n  (\\<not> Vagree\n           (rra (rr {f. \\<exists>fa.\n                           fa \\<in> {f. \\<exists>fa.\n     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                           Vagree fa f W}\n                  {f. \\<exists>fa.\n                         fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (V \\<inter> W) X)\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           V \\<or>\n   \\<not> Vagree\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           (rr {f. \\<exists>fa.\n                      fa \\<in> {f. \\<exists>fa.\nfa \\<in> X \\<and> Vagree fa f V} \\<and>\n                      Vagree fa f W}\n             {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n           W) \\<or>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V \\<Longrightarrow>\n  (\\<not> Vagree\n           (rra (rr {f. \\<exists>fa.\n                           fa \\<in> {f. \\<exists>fa.\n     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                           Vagree fa f W}\n                  {f. \\<exists>fa.\n                         fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (V \\<inter> W) X)\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           V \\<or>\n   \\<not> Vagree\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           (rr {f. \\<exists>fa.\n                      fa \\<in> {f. \\<exists>fa.\nfa \\<in> X \\<and> Vagree fa f V} \\<and>\n                      Vagree fa f W}\n             {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n           W) \\<or>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}", "have \"{f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)} \\<subseteq> {f. \\<exists>fa. fa \\<in> {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and> Vagree fa f W}\""], ["proof (prove)\nusing this:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V \\<Longrightarrow>\n  (\\<not> Vagree\n           (rra (rr {f. \\<exists>fa.\n                           fa \\<in> {f. \\<exists>fa.\n     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                           Vagree fa f W}\n                  {f. \\<exists>fa.\n                         fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (V \\<inter> W) X)\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           V \\<or>\n   \\<not> Vagree\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           (rr {f. \\<exists>fa.\n                      fa \\<in> {f. \\<exists>fa.\nfa \\<in> X \\<and> Vagree fa f V} \\<and>\n                      Vagree fa f W}\n             {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n           W) \\<or>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>F V f.\n     (f \\<notin> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      rra f V F \\<in> F \\<and> Vagree (rra f V F) f V) \\<and>\n     (f \\<in> {f. \\<exists>fa. fa \\<in> F \\<and> Vagree fa f V} \\<or>\n      (\\<forall>fa. fa \\<notin> F \\<or> \\<not> Vagree fa f V))\n  \\<exists>f.\n     f \\<in> X \\<and>\n     Vagree f\n      (v4_1 W V\n        (rr {f. \\<exists>fa.\n                   fa \\<in> {f. \\<exists>fa.\n                                   fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                   Vagree fa f W}\n          {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n        (rra (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n          (V \\<inter> W) X))\n      V \\<Longrightarrow>\n  (\\<not> Vagree\n           (rra (rr {f. \\<exists>fa.\n                           fa \\<in> {f. \\<exists>fa.\n     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                           Vagree fa f W}\n                  {f. \\<exists>fa.\n                         fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (V \\<inter> W) X)\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           V \\<or>\n   \\<not> Vagree\n           (v4_1 W V\n             (rr {f. \\<exists>fa.\n                        fa \\<in> {f. \\<exists>fa.\n  fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                        Vagree fa f W}\n               {f. \\<exists>fa.\n                      fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n             (rra (rr {f. \\<exists>fa.\n                             fa \\<in> {f.\n \\<exists>fa. fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                             Vagree fa f W}\n                    {f. \\<exists>fa.\n                           fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n               (V \\<inter> W) X))\n           (rr {f. \\<exists>fa.\n                      fa \\<in> {f. \\<exists>fa.\nfa \\<in> X \\<and> Vagree fa f V} \\<and>\n                      Vagree fa f W}\n             {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)})\n           W) \\<or>\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n  \\<forall>F Fa.\n     rr Fa F \\<in> F \\<and> rr Fa F \\<notin> Fa \\<or> F \\<subseteq> Fa\n\ngoal (1 subgoal):\n 1. {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n    \\<subseteq> {f. \\<exists>fa.\n                       fa \\<in> {f. \\<exists>fa.\n fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                       Vagree fa f W}", "by (meson Vagree_ror)"], ["proof (state)\nthis:\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "then"], ["proof (chain)\npicking this:\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}", "show ?thesis"], ["proof (prove)\nusing this:\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "using restrictto_def"], ["proof (prove)\nusing this:\n  {f. \\<exists>fa. fa \\<in> X \\<and> Vagree fa f (V \\<inter> W)}\n  \\<subseteq> {f. \\<exists>fa.\n                     fa \\<in> {f. \\<exists>fa.\n                                     fa \\<in> X \\<and> Vagree fa f V} \\<and>\n                     Vagree fa f W}\n  restrictto ?X ?V =\n  {\\<nu>.\n   \\<exists>\\<omega>. \\<omega> \\<in> ?X \\<and> Vagree \\<omega> \\<nu> ?V}\n\ngoal (1 subgoal):\n 1. restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W", "by presburger"], ["proof (state)\nthis:\n  restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  restrictto X (V \\<inter> W) \\<subseteq> restrictto (restrictto X V) W\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restrictto_antimon [simp]: \"W\\<supseteq>V \\<Longrightarrow> restrictto X W \\<subseteq> restrictto X V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "assume \"W\\<supseteq>V\""], ["proof (state)\nthis:\n  V \\<subseteq> W\n\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "then"], ["proof (chain)\npicking this:\n  V \\<subseteq> W", "have \"\\<exists>U. V=W\\<inter>U\""], ["proof (prove)\nusing this:\n  V \\<subseteq> W\n\ngoal (1 subgoal):\n 1. \\<exists>U. V = W \\<inter> U", "by auto"], ["proof (state)\nthis:\n  \\<exists>U. V = W \\<inter> U\n\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "then"], ["proof (chain)\npicking this:\n  \\<exists>U. V = W \\<inter> U", "obtain U where \"V=W\\<inter>U\""], ["proof (prove)\nusing this:\n  \\<exists>U. V = W \\<inter> U\n\ngoal (1 subgoal):\n 1. (\\<And>U. V = W \\<inter> U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  V = W \\<inter> U\n\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "hence \"restrictto X V = restrictto (restrictto X W) U\""], ["proof (prove)\nusing this:\n  V = W \\<inter> U\n\ngoal (1 subgoal):\n 1. restrictto X V = restrictto (restrictto X W) U", "by simp"], ["proof (state)\nthis:\n  restrictto X V = restrictto (restrictto X W) U\n\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "hence \"restrictto X V \\<supseteq> restrictto X W\""], ["proof (prove)\nusing this:\n  restrictto X V = restrictto (restrictto X W) U\n\ngoal (1 subgoal):\n 1. restrictto X W \\<subseteq> restrictto X V", "using restrictto_extends"], ["proof (prove)\nusing this:\n  restrictto X V = restrictto (restrictto X W) U\n  ?X \\<subseteq> restrictto ?X ?V\n\ngoal (1 subgoal):\n 1. restrictto X W \\<subseteq> restrictto X V", "by blast"], ["proof (state)\nthis:\n  restrictto X W \\<subseteq> restrictto X V\n\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    restrictto X W \\<subseteq> restrictto X V", "thus ?thesis"], ["proof (prove)\nusing this:\n  restrictto X W \\<subseteq> restrictto X V\n\ngoal (1 subgoal):\n 1. restrictto X W \\<subseteq> restrictto X V", "by auto"], ["proof (state)\nthis:\n  restrictto X W \\<subseteq> restrictto X V\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma restrictto_empty [simp]: \"X\\<noteq>{} \\<Longrightarrow> restrictto X {} = worlds\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow> restrictto X {} = worlds", "by (auto simp add: restrictto_def worlds_def)"], ["", "lemma selectlike_shrinks [simp]: \"selectlike X \\<nu> V \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike X \\<nu> V \\<subseteq> X", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_compose [simp]: \"selectlike (selectlike X \\<nu> V) \\<nu> W = selectlike X \\<nu> (V\\<union>W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (selectlike X \\<nu> V) \\<nu> W =\n    selectlike X \\<nu> (V \\<union> W)", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_antimon [simp]: \"W\\<supseteq>V \\<Longrightarrow> selectlike X \\<nu> W \\<subseteq> selectlike X \\<nu> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> W \\<Longrightarrow>\n    selectlike X \\<nu> W \\<subseteq> selectlike X \\<nu> V", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_empty [simp]: \"selectlike X \\<nu> {} = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike X \\<nu> {} = X", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_self [simp]: \"(\\<nu> \\<in> selectlike X \\<nu> V) = (\\<nu>\\<in>X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> \\<in> selectlike X \\<nu> V) = (\\<nu> \\<in> X)", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_complement [simp]: \"selectlike (-X) \\<nu> V \\<subseteq> -selectlike X \\<nu> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (- X) \\<nu> V \\<subseteq> - selectlike X \\<nu> V", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_union: \"selectlike (X\\<union>Y) \\<nu> V = selectlike X \\<nu> V \\<union> selectlike Y \\<nu> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (X \\<union> Y) \\<nu> V =\n    selectlike X \\<nu> V \\<union> selectlike Y \\<nu> V", "by (auto simp add: selectlike_def)"], ["", "lemma selectlike_Sup: \"selectlike (Sup M) \\<nu> V = Sup {selectlike X \\<nu> V | X. X\\<in>M}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (\\<Union> M) \\<nu> V =\n    \\<Union> {selectlike X \\<nu> V |X. X \\<in> M}", "using selectlike_def"], ["proof (prove)\nusing this:\n  selectlike ?X ?\\<nu> ?V = {\\<omega> \\<in> ?X. Vagree \\<omega> ?\\<nu> ?V}\n\ngoal (1 subgoal):\n 1. selectlike (\\<Union> M) \\<nu> V =\n    \\<Union> {selectlike X \\<nu> V |X. X \\<in> M}", "by auto"], ["", "lemma selectlike_equal_cond: \"(selectlike X \\<nu> V = selectlike Y \\<nu> V) = (\\<forall>\\<mu>. Uvariation \\<mu> \\<nu> (-V) \\<longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (selectlike X \\<nu> V = selectlike Y \\<nu> V) =\n    (\\<forall>\\<mu>.\n        Uvariation \\<mu> \\<nu> (- V) \\<longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y))", "unfolding selectlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({\\<omega> \\<in> X. Vagree \\<omega> \\<nu> V} =\n     {\\<omega> \\<in> Y. Vagree \\<omega> \\<nu> V}) =\n    (\\<forall>\\<mu>.\n        Uvariation \\<mu> \\<nu> (- V) \\<longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y))", "using Uvariation_Vagree"], ["proof (prove)\nusing this:\n  Uvariation ?\\<nu> ?\\<nu>' (- ?V) = Vagree ?\\<nu> ?\\<nu>' ?V\n\ngoal (1 subgoal):\n 1. ({\\<omega> \\<in> X. Vagree \\<omega> \\<nu> V} =\n     {\\<omega> \\<in> Y. Vagree \\<omega> \\<nu> V}) =\n    (\\<forall>\\<mu>.\n        Uvariation \\<mu> \\<nu> (- V) \\<longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y))", "by auto"], ["", "lemma selectlike_equal_cocond: \"(selectlike X \\<nu> (-V) = selectlike Y \\<nu> (-V)) = (\\<forall>\\<mu>. Uvariation \\<mu> \\<nu> V \\<longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (selectlike X \\<nu> (- V) = selectlike Y \\<nu> (- V)) =\n    (\\<forall>\\<mu>.\n        Uvariation \\<mu> \\<nu> V \\<longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y))", "using selectlike_equal_cond[where V=\\<open>-V\\<close>]"], ["proof (prove)\nusing this:\n  (selectlike ?X ?\\<nu> (- V) = selectlike ?Y ?\\<nu> (- V)) =\n  (\\<forall>\\<mu>.\n      Uvariation \\<mu> ?\\<nu> (- (- V)) \\<longrightarrow>\n      (\\<mu> \\<in> ?X) = (\\<mu> \\<in> ?Y))\n\ngoal (1 subgoal):\n 1. (selectlike X \\<nu> (- V) = selectlike Y \\<nu> (- V)) =\n    (\\<forall>\\<mu>.\n        Uvariation \\<mu> \\<nu> V \\<longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y))", "by simp"], ["", "lemma selectlike_equal_cocond_rule: \"(\\<And>\\<mu>. Uvariation \\<mu> \\<nu> (-V) \\<Longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\n  \\<Longrightarrow> (selectlike X \\<nu> V = selectlike Y \\<nu> V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<mu>.\n        Uvariation \\<mu> \\<nu> (- V) \\<Longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y)) \\<Longrightarrow>\n    selectlike X \\<nu> V = selectlike Y \\<nu> V", "using selectlike_equal_cond[where V=\\<open>V\\<close>]"], ["proof (prove)\nusing this:\n  (selectlike ?X ?\\<nu> V = selectlike ?Y ?\\<nu> V) =\n  (\\<forall>\\<mu>.\n      Uvariation \\<mu> ?\\<nu> (- V) \\<longrightarrow>\n      (\\<mu> \\<in> ?X) = (\\<mu> \\<in> ?Y))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<mu>.\n        Uvariation \\<mu> \\<nu> (- V) \\<Longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y)) \\<Longrightarrow>\n    selectlike X \\<nu> V = selectlike Y \\<nu> V", "by simp"], ["", "lemma selectlike_equal_cocond_corule: \"(\\<And>\\<mu>. Uvariation \\<mu> \\<nu> V \\<Longrightarrow> (\\<mu>\\<in>X) = (\\<mu>\\<in>Y))\n  \\<Longrightarrow> (selectlike X \\<nu> (-V) = selectlike Y \\<nu> (-V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<mu>.\n        Uvariation \\<mu> \\<nu> V \\<Longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y)) \\<Longrightarrow>\n    selectlike X \\<nu> (- V) = selectlike Y \\<nu> (- V)", "using selectlike_equal_cond[where V=\\<open>-V\\<close>]"], ["proof (prove)\nusing this:\n  (selectlike ?X ?\\<nu> (- V) = selectlike ?Y ?\\<nu> (- V)) =\n  (\\<forall>\\<mu>.\n      Uvariation \\<mu> ?\\<nu> (- (- V)) \\<longrightarrow>\n      (\\<mu> \\<in> ?X) = (\\<mu> \\<in> ?Y))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<mu>.\n        Uvariation \\<mu> \\<nu> V \\<Longrightarrow>\n        (\\<mu> \\<in> X) = (\\<mu> \\<in> Y)) \\<Longrightarrow>\n    selectlike X \\<nu> (- V) = selectlike Y \\<nu> (- V)", "by simp"], ["", "lemma co_selectlike: \"-(selectlike X \\<nu> V) = (-X) \\<union> {\\<omega>. \\<not>Vagree \\<omega> \\<nu> V}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - selectlike X \\<nu> V =\n    - X \\<union> {\\<omega>. \\<not> Vagree \\<omega> \\<nu> V}", "unfolding selectlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - {\\<omega> \\<in> X. Vagree \\<omega> \\<nu> V} =\n    - X \\<union> {\\<omega>. \\<not> Vagree \\<omega> \\<nu> V}", "by auto"], ["", "lemma selectlike_co_selectlike: \"selectlike (-(selectlike X \\<nu> V)) \\<nu> V = selectlike (-X) \\<nu> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (- selectlike X \\<nu> V) \\<nu> V = selectlike (- X) \\<nu> V", "unfolding selectlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<omega> \\<in> - {\\<omega> \\<in> X. Vagree \\<omega> \\<nu> V}.\n     Vagree \\<omega> \\<nu> V} =\n    {\\<omega> \\<in> - X. Vagree \\<omega> \\<nu> V}", "by auto"], ["", "lemma selectlike_Vagree: \"Vagree \\<nu> \\<omega> V \\<Longrightarrow> selectlike X \\<nu> V = selectlike X \\<omega> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n    selectlike X \\<nu> V = selectlike X \\<omega> V", "using Vagree_def selectlike_def"], ["proof (prove)\nusing this:\n  Vagree ?\\<nu> ?\\<nu>' ?V \\<equiv>\n  \\<forall>i. i \\<in> ?V \\<longrightarrow> ?\\<nu> i = ?\\<nu>' i\n  selectlike ?X ?\\<nu> ?V = {\\<omega> \\<in> ?X. Vagree \\<omega> ?\\<nu> ?V}\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n    selectlike X \\<nu> V = selectlike X \\<omega> V", "by auto"], ["", "lemma similar_selectlike_mem: \"Vagree \\<nu> \\<omega> V \\<Longrightarrow> (\\<nu>\\<in>selectlike X \\<omega> V) = (\\<nu>\\<in>X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n    (\\<nu> \\<in> selectlike X \\<omega> V) = (\\<nu> \\<in> X)", "unfolding selectlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n    (\\<nu> \\<in> {\\<omega>' \\<in> X. Vagree \\<omega>' \\<omega> V}) =\n    (\\<nu> \\<in> X)", "using Vagree_sym_rel"], ["proof (prove)\nusing this:\n  Vagree ?\\<nu> ?\\<nu>' ?V \\<Longrightarrow> Vagree ?\\<nu>' ?\\<nu> ?V\n\ngoal (1 subgoal):\n 1. Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n    (\\<nu> \\<in> {\\<omega>' \\<in> X. Vagree \\<omega>' \\<omega> V}) =\n    (\\<nu> \\<in> X)", "by blast"], ["", "(* also see nonBVG_rule *)"], ["", "lemma BVG_nonelem [simp] :\"(x\\<notin>BVG \\<alpha>) = (\\<forall>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x})))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<notin> BVG \\<alpha>) =\n    (\\<forall>I \\<omega> X.\n        (\\<omega> \\<in> game_sem I \\<alpha> X) =\n        (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x})))", "using BVG_elem monotone selectlike_shrinks"], ["proof (prove)\nusing this:\n  (?x \\<in> BVG ?\\<alpha>) =\n  (\\<exists>I \\<omega> X.\n      \\<omega> \\<in> game_sem I ?\\<alpha> X \\<and>\n      \\<omega> \\<notin> game_sem I ?\\<alpha> (selectlike X \\<omega> {?x}))\n  ?X \\<subseteq> ?Y \\<Longrightarrow>\n  game_sem ?I ?\\<alpha> ?X \\<subseteq> game_sem ?I ?\\<alpha> ?Y\n  selectlike ?X ?\\<nu> ?V \\<subseteq> ?X\n\ngoal (1 subgoal):\n 1. (x \\<notin> BVG \\<alpha>) =\n    (\\<forall>I \\<omega> X.\n        (\\<omega> \\<in> game_sem I \\<alpha> X) =\n        (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x})))", "by (metis subset_iff)"], ["", "text \\<open>\\<open>statediff\\<close> interoperability\\<close>"], ["", "lemma Vagree_statediff [simp]: \"Vagree \\<omega> \\<omega>' S \\<Longrightarrow> statediff \\<omega> \\<omega>' \\<subseteq> -S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' S \\<Longrightarrow>\n    statediff \\<omega> \\<omega>' \\<subseteq> - S", "by (auto simp add: Vagree_def statediff_def)"], ["", "lemma stateinterpol_diff [simp]: \"stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) = \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) = \\<nu>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "show sp: \"(stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>))(x) = \\<nu>(x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "proof (cases \"x\\<in>statediff \\<nu> \\<omega>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x\n 2. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "case True"], ["proof (state)\nthis:\n  x \\<in> statediff \\<nu> \\<omega>\n\ngoal (2 subgoals):\n 1. x \\<in> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x\n 2. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "then"], ["proof (chain)\npicking this:\n  x \\<in> statediff \\<nu> \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> statediff \\<nu> \\<omega>\n\ngoal (1 subgoal):\n 1. stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "by simp"], ["proof (state)\nthis:\n  stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x\n\ngoal (1 subgoal):\n 1. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "case False"], ["proof (state)\nthis:\n  x \\<notin> statediff \\<nu> \\<omega>\n\ngoal (1 subgoal):\n 1. x \\<notin> statediff \\<nu> \\<omega> \\<Longrightarrow>\n    stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "then"], ["proof (chain)\npicking this:\n  x \\<notin> statediff \\<nu> \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> statediff \\<nu> \\<omega>\n\ngoal (1 subgoal):\n 1. stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x", "by (simp add: stateinterpol_def nostatediff)"], ["proof (state)\nthis:\n  stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stateinterpol \\<nu> \\<omega> (statediff \\<nu> \\<omega>) x = \\<nu> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stateinterpol_insert: \"Vagree (stateinterpol v w S) (stateinterpol v w (insert z S)) (-{z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (stateinterpol v w S) (stateinterpol v w (insert z S)) (- {z})", "by (simp add: Vagree_def stateinterpol_def)"], ["", "lemma stateinterpol_FVT [simp]: \"z\\<notin>FVT(t) \\<Longrightarrow> term_sem I t (stateinterpol \\<omega> \\<omega>' S) = term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> FVT t \\<Longrightarrow>\n    term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> FVT t \\<Longrightarrow>\n    term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "assume a: \"z\\<notin>FVT(t)\""], ["proof (state)\nthis:\n  z \\<notin> FVT t\n\ngoal (1 subgoal):\n 1. z \\<notin> FVT t \\<Longrightarrow>\n    term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "have fvc: \"\\<And>v. \\<And>w. Vagree v w (-{z}) \\<Longrightarrow> (term_sem I t v = term_sem I t w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v w.\n       Vagree v w (- {z}) \\<Longrightarrow> term_sem I t v = term_sem I t w", "using a"], ["proof (prove)\nusing this:\n  z \\<notin> FVT t\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       Vagree v w (- {z}) \\<Longrightarrow> term_sem I t v = term_sem I t w", "by (simp add: FVT_def)"], ["proof (state)\nthis:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow> term_sem I t ?v = term_sem I t ?w\n\ngoal (1 subgoal):\n 1. z \\<notin> FVT t \\<Longrightarrow>\n    term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "then"], ["proof (chain)\npicking this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow> term_sem I t ?v = term_sem I t ?w", "show \"term_sem I t (stateinterpol \\<omega> \\<omega>' S) = term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))\""], ["proof (prove)\nusing this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow> term_sem I t ?v = term_sem I t ?w\n\ngoal (1 subgoal):\n 1. term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "using fvc and stateinterpol_insert"], ["proof (prove)\nusing this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow> term_sem I t ?v = term_sem I t ?w\n  Vagree ?v ?w (- {z}) \\<Longrightarrow> term_sem I t ?v = term_sem I t ?w\n  Vagree (stateinterpol ?v ?w ?S) (stateinterpol ?v ?w (insert ?z ?S))\n   (- {?z})\n\ngoal (1 subgoal):\n 1. term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n    term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))", "by blast"], ["proof (state)\nthis:\n  term_sem I t (stateinterpol \\<omega> \\<omega>' S) =\n  term_sem I t (stateinterpol \\<omega> \\<omega>' (insert z S))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Coincidence Lemmas\\<close>"], ["", "paragraph \\<open>Coincidence for Terms\\<close>"], ["", "text \\<open>Lemma 10 \\<^url>\\<open>https://doi.org/10.1007/978-3-319-94205-6_15\\<close>\\<close>"], ["", "theorem coincidence_term: \"Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow> term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "assume a: \"Vagree \\<omega> \\<omega>' (FVT \\<theta>)\""], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' (FVT \\<theta>)\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "have isS: \"statediff \\<omega> \\<omega>' \\<subseteq> -FVT(\\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>", "using a and Vagree_statediff"], ["proof (prove)\nusing this:\n  Vagree \\<omega> \\<omega>' (FVT \\<theta>)\n  Vagree ?\\<omega> ?\\<omega>' ?S \\<Longrightarrow>\n  statediff ?\\<omega> ?\\<omega>' \\<subseteq> - ?S\n\ngoal (1 subgoal):\n 1. statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>", "by simp"], ["proof (state)\nthis:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "have gen: \"S\\<subseteq>-FVT(\\<theta>) \\<Longrightarrow> (term_sem I \\<theta> \\<omega>' = term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' S))\" if \"finite S\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' S)", "using that"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. S \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' S)", "proof (induction S)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n        term_sem I \\<theta> \\<omega>' =\n        term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' F);\n        insert x F \\<subseteq> - FVT \\<theta>\\<rbrakk>\n       \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                         term_sem I \\<theta>\n                          (stateinterpol \\<omega> \\<omega>' (insert x F))", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> - FVT \\<theta>\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n        term_sem I \\<theta> \\<omega>' =\n        term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' F);\n        insert x F \\<subseteq> - FVT \\<theta>\\<rbrakk>\n       \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                         term_sem I \\<theta>\n                          (stateinterpol \\<omega> \\<omega>' (insert x F))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' {})", "by (simp add: stateinterpol_empty)"], ["proof (state)\nthis:\n  term_sem I \\<theta> \\<omega>' =\n  term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' {})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n        term_sem I \\<theta> \\<omega>' =\n        term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' F);\n        insert x F \\<subseteq> - FVT \\<theta>\\<rbrakk>\n       \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                         term_sem I \\<theta>\n                          (stateinterpol \\<omega> \\<omega>' (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n        term_sem I \\<theta> \\<omega>' =\n        term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' F);\n        insert x F \\<subseteq> - FVT \\<theta>\\<rbrakk>\n       \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                         term_sem I \\<theta>\n                          (stateinterpol \\<omega> \\<omega>' (insert x F))", "case (insert z S)"], ["proof (state)\nthis:\n  finite S\n  z \\<notin> S\n  S \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n  term_sem I \\<theta> \\<omega>' =\n  term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' S)\n  insert z S \\<subseteq> - FVT \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n        term_sem I \\<theta> \\<omega>' =\n        term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' F);\n        insert x F \\<subseteq> - FVT \\<theta>\\<rbrakk>\n       \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                         term_sem I \\<theta>\n                          (stateinterpol \\<omega> \\<omega>' (insert x F))", "thus ?case"], ["proof (prove)\nusing this:\n  finite S\n  z \\<notin> S\n  S \\<subseteq> - FVT \\<theta> \\<Longrightarrow>\n  term_sem I \\<theta> \\<omega>' =\n  term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' S)\n  insert z S \\<subseteq> - FVT \\<theta>\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega>' =\n    term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' (insert z S))", "by auto"], ["proof (state)\nthis:\n  term_sem I \\<theta> \\<omega>' =\n  term_sem I \\<theta> (stateinterpol \\<omega> \\<omega>' (insert z S))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?S; ?S \\<subseteq> - FVT \\<theta>\\<rbrakk>\n  \\<Longrightarrow> term_sem I \\<theta> \\<omega>' =\n                    term_sem I \\<theta>\n                     (stateinterpol \\<omega> \\<omega>' ?S)\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "from isS"], ["proof (chain)\npicking this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>", "have finS: \"finite (statediff \\<omega> \\<omega>')\""], ["proof (prove)\nusing this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>\n\ngoal (1 subgoal):\n 1. finite (statediff \\<omega> \\<omega>')", "using allvars_finite"], ["proof (prove)\nusing this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVT \\<theta>\n  finite Denotational_Semantics.allvars\n\ngoal (1 subgoal):\n 1. finite (statediff \\<omega> \\<omega>')", "by (metis FVT_finite UNIV_def finite_compl rev_finite_subset)"], ["proof (state)\nthis:\n  finite (statediff \\<omega> \\<omega>')\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVT \\<theta>) \\<Longrightarrow>\n    term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "using gen[where S=\\<open>statediff \\<omega> \\<omega>'\\<close>, OF finS, OF isS]"], ["proof (prove)\nusing this:\n  term_sem I \\<theta> \\<omega>' =\n  term_sem I \\<theta>\n   (stateinterpol \\<omega> \\<omega>' (statediff \\<omega> \\<omega>'))\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'", "by simp"], ["proof (state)\nthis:\n  term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary coincidence_term_cor: \"Uvariation \\<omega> \\<omega>' U \\<Longrightarrow> (FVT \\<theta>)\\<inter>U={} \\<Longrightarrow> term_sem I \\<theta> \\<omega> = term_sem I \\<theta> \\<omega>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     FVT \\<theta> \\<inter> U = {}\\<rbrakk>\n    \\<Longrightarrow> term_sem I \\<theta> \\<omega> =\n                      term_sem I \\<theta> \\<omega>'", "using coincidence_term Uvariation_Vagree"], ["proof (prove)\nusing this:\n  Vagree ?\\<omega> ?\\<omega>' (FVT ?\\<theta>) \\<Longrightarrow>\n  term_sem ?I ?\\<theta> ?\\<omega> = term_sem ?I ?\\<theta> ?\\<omega>'\n  Uvariation ?\\<nu> ?\\<nu>' (- ?V) = Vagree ?\\<nu> ?\\<nu>' ?V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     FVT \\<theta> \\<inter> U = {}\\<rbrakk>\n    \\<Longrightarrow> term_sem I \\<theta> \\<omega> =\n                      term_sem I \\<theta> \\<omega>'", "by (metis Vagree_antimon disjoint_eq_subset_Compl double_compl)"], ["", "lemma stateinterpol_FVF [simp]: \"z\\<notin>FVF(e) \\<Longrightarrow> \n  ((stateinterpol \\<omega> \\<omega>' S) \\<in> fml_sem I e \\<longleftrightarrow> (stateinterpol \\<omega> \\<omega>' (insert z S)) \\<in> fml_sem I e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "assume a: \"z\\<notin>FVF(e)\""], ["proof (state)\nthis:\n  z \\<notin> FVF e\n\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "have agr: \"Vagree (stateinterpol \\<omega> \\<omega>' S) (stateinterpol \\<omega> \\<omega>' (insert z S)) (-{z})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (stateinterpol \\<omega> \\<omega>' S)\n     (stateinterpol \\<omega> \\<omega>' (insert z S)) (- {z})", "by (simp add: Vagree_def stateinterpol_def)"], ["proof (state)\nthis:\n  Vagree (stateinterpol \\<omega> \\<omega>' S)\n   (stateinterpol \\<omega> \\<omega>' (insert z S)) (- {z})\n\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "have fvc: \"\\<And>v. \\<And>w. (Vagree v w (-{z}) \\<Longrightarrow> (v\\<in>fml_sem I e \\<Longrightarrow> w\\<in>fml_sem I e))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>Vagree v w (- {z}); v \\<in> fml_sem I e\\<rbrakk>\n       \\<Longrightarrow> w \\<in> fml_sem I e", "using a"], ["proof (prove)\nusing this:\n  z \\<notin> FVF e\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       \\<lbrakk>Vagree v w (- {z}); v \\<in> fml_sem I e\\<rbrakk>\n       \\<Longrightarrow> w \\<in> fml_sem I e", "by (simp add: FVF_def)"], ["proof (state)\nthis:\n  \\<lbrakk>Vagree ?v ?w (- {z}); ?v \\<in> fml_sem I e\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> fml_sem I e\n\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Vagree ?v ?w (- {z}); ?v \\<in> fml_sem I e\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> fml_sem I e", "have fvce: \"\\<And>v. \\<And>w. (Vagree v w (-{z}) \\<Longrightarrow> ((v\\<in>fml_sem I e) = (w\\<in>fml_sem I e)))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Vagree ?v ?w (- {z}); ?v \\<in> fml_sem I e\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> fml_sem I e\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       Vagree v w (- {z}) \\<Longrightarrow>\n       (v \\<in> fml_sem I e) = (w \\<in> fml_sem I e)", "using Vagree_sym_rel"], ["proof (prove)\nusing this:\n  \\<lbrakk>Vagree ?v ?w (- {z}); ?v \\<in> fml_sem I e\\<rbrakk>\n  \\<Longrightarrow> ?w \\<in> fml_sem I e\n  Vagree ?\\<nu> ?\\<nu>' ?V \\<Longrightarrow> Vagree ?\\<nu>' ?\\<nu> ?V\n\ngoal (1 subgoal):\n 1. \\<And>v w.\n       Vagree v w (- {z}) \\<Longrightarrow>\n       (v \\<in> fml_sem I e) = (w \\<in> fml_sem I e)", "by blast"], ["proof (state)\nthis:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow>\n  (?v \\<in> fml_sem I e) = (?w \\<in> fml_sem I e)\n\ngoal (1 subgoal):\n 1. z \\<notin> FVF e \\<Longrightarrow>\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "then"], ["proof (chain)\npicking this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow>\n  (?v \\<in> fml_sem I e) = (?w \\<in> fml_sem I e)", "show \"(stateinterpol \\<omega> \\<omega>' S) \\<in> fml_sem I e \\<longleftrightarrow> (stateinterpol \\<omega> \\<omega>' (insert z S)) \\<in> fml_sem I e\""], ["proof (prove)\nusing this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow>\n  (?v \\<in> fml_sem I e) = (?w \\<in> fml_sem I e)\n\ngoal (1 subgoal):\n 1. (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "using agr"], ["proof (prove)\nusing this:\n  Vagree ?v ?w (- {z}) \\<Longrightarrow>\n  (?v \\<in> fml_sem I e) = (?w \\<in> fml_sem I e)\n  Vagree (stateinterpol \\<omega> \\<omega>' S)\n   (stateinterpol \\<omega> \\<omega>' (insert z S)) (- {z})\n\ngoal (1 subgoal):\n 1. (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)", "by simp"], ["proof (state)\nthis:\n  (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I e) =\n  (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I e)\n\ngoal:\nNo subgoals!", "qed"], ["", "paragraph \\<open>Coincidence for Formulas\\<close>"], ["", "text \\<open>Lemma 11 \\<^url>\\<open>https://doi.org/10.1007/978-3-319-94205-6_15\\<close>\\<close>"], ["", "theorem coincidence_formula: \"Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow> (\\<omega> \\<in> fml_sem I \\<phi> \\<longleftrightarrow> \\<omega>' \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "assume a: \"Vagree \\<omega> \\<omega>' (FVF \\<phi>)\""], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' (FVF \\<phi>)\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "have isS: \"statediff \\<omega> \\<omega>' \\<subseteq> -FVF(\\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>", "using a and Vagree_statediff"], ["proof (prove)\nusing this:\n  Vagree \\<omega> \\<omega>' (FVF \\<phi>)\n  Vagree ?\\<omega> ?\\<omega>' ?S \\<Longrightarrow>\n  statediff ?\\<omega> ?\\<omega>' \\<subseteq> - ?S\n\ngoal (1 subgoal):\n 1. statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>", "by simp"], ["proof (state)\nthis:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "have gen: \"S\\<subseteq>-FVF(\\<phi>) \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi> \\<longleftrightarrow> (stateinterpol \\<omega> \\<omega>' S) \\<in> fml_sem I \\<phi>)\" if \"finite S\" for S"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n    (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I \\<phi>)", "using that"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. S \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n    (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I \\<phi>)", "proof (induction S)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n    (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' {} \\<in> fml_sem I \\<phi>)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n        (\\<omega>' \\<in> fml_sem I \\<phi>) =\n        (stateinterpol \\<omega> \\<omega>' F \\<in> fml_sem I \\<phi>);\n        insert x F \\<subseteq> - FVF \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                         (stateinterpol \\<omega> \\<omega>' (insert x F)\n                          \\<in> fml_sem I \\<phi>)", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> - FVF \\<phi>\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n    (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' {} \\<in> fml_sem I \\<phi>)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n        (\\<omega>' \\<in> fml_sem I \\<phi>) =\n        (stateinterpol \\<omega> \\<omega>' F \\<in> fml_sem I \\<phi>);\n        insert x F \\<subseteq> - FVF \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                         (stateinterpol \\<omega> \\<omega>' (insert x F)\n                          \\<in> fml_sem I \\<phi>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' {} \\<in> fml_sem I \\<phi>)", "by (simp add: stateinterpol_empty)"], ["proof (state)\nthis:\n  (\\<omega>' \\<in> fml_sem I \\<phi>) =\n  (stateinterpol \\<omega> \\<omega>' {} \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n        (\\<omega>' \\<in> fml_sem I \\<phi>) =\n        (stateinterpol \\<omega> \\<omega>' F \\<in> fml_sem I \\<phi>);\n        insert x F \\<subseteq> - FVF \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                         (stateinterpol \\<omega> \\<omega>' (insert x F)\n                          \\<in> fml_sem I \\<phi>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n        (\\<omega>' \\<in> fml_sem I \\<phi>) =\n        (stateinterpol \\<omega> \\<omega>' F \\<in> fml_sem I \\<phi>);\n        insert x F \\<subseteq> - FVF \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                         (stateinterpol \\<omega> \\<omega>' (insert x F)\n                          \\<in> fml_sem I \\<phi>)", "case (insert z S)"], ["proof (state)\nthis:\n  finite S\n  z \\<notin> S\n  S \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n  (\\<omega>' \\<in> fml_sem I \\<phi>) =\n  (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I \\<phi>)\n  insert z S \\<subseteq> - FVF \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n        (\\<omega>' \\<in> fml_sem I \\<phi>) =\n        (stateinterpol \\<omega> \\<omega>' F \\<in> fml_sem I \\<phi>);\n        insert x F \\<subseteq> - FVF \\<phi>\\<rbrakk>\n       \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                         (stateinterpol \\<omega> \\<omega>' (insert x F)\n                          \\<in> fml_sem I \\<phi>)", "thus ?case"], ["proof (prove)\nusing this:\n  finite S\n  z \\<notin> S\n  S \\<subseteq> - FVF \\<phi> \\<Longrightarrow>\n  (\\<omega>' \\<in> fml_sem I \\<phi>) =\n  (stateinterpol \\<omega> \\<omega>' S \\<in> fml_sem I \\<phi>)\n  insert z S \\<subseteq> - FVF \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<omega>' \\<in> fml_sem I \\<phi>) =\n    (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (\\<omega>' \\<in> fml_sem I \\<phi>) =\n  (stateinterpol \\<omega> \\<omega>' (insert z S) \\<in> fml_sem I \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?S; ?S \\<subseteq> - FVF \\<phi>\\<rbrakk>\n  \\<Longrightarrow> (\\<omega>' \\<in> fml_sem I \\<phi>) =\n                    (stateinterpol \\<omega> \\<omega>' ?S\n                     \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "from isS"], ["proof (chain)\npicking this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>", "have finS: \"finite (statediff \\<omega> \\<omega>')\""], ["proof (prove)\nusing this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>\n\ngoal (1 subgoal):\n 1. finite (statediff \\<omega> \\<omega>')", "using allvars_finite"], ["proof (prove)\nusing this:\n  statediff \\<omega> \\<omega>' \\<subseteq> - FVF \\<phi>\n  finite Denotational_Semantics.allvars\n\ngoal (1 subgoal):\n 1. finite (statediff \\<omega> \\<omega>')", "by (metis FVF_finite UNIV_def finite_compl rev_finite_subset)"], ["proof (state)\nthis:\n  finite (statediff \\<omega> \\<omega>')\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (FVF \\<phi>) \\<Longrightarrow>\n    (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "using gen[where S=\\<open>statediff \\<omega> \\<omega>'\\<close>, OF finS, OF isS]"], ["proof (prove)\nusing this:\n  (\\<omega>' \\<in> fml_sem I \\<phi>) =\n  (stateinterpol \\<omega> \\<omega>' (statediff \\<omega> \\<omega>')\n   \\<in> fml_sem I \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)", "by simp"], ["proof (state)\nthis:\n  (\\<omega> \\<in> fml_sem I \\<phi>) = (\\<omega>' \\<in> fml_sem I \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary coincidence_formula_cor: \"Uvariation \\<omega> \\<omega>' U \\<Longrightarrow> (FVF \\<phi>)\\<inter>U={} \\<Longrightarrow> (\\<omega> \\<in> fml_sem I \\<phi> \\<longleftrightarrow> \\<omega>' \\<in> fml_sem I \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     FVF \\<phi> \\<inter> U = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<omega> \\<in> fml_sem I \\<phi>) =\n                      (\\<omega>' \\<in> fml_sem I \\<phi>)", "using coincidence_formula Uvariation_Vagree"], ["proof (prove)\nusing this:\n  Vagree ?\\<omega> ?\\<omega>' (FVF ?\\<phi>) \\<Longrightarrow>\n  (?\\<omega> \\<in> fml_sem ?I ?\\<phi>) =\n  (?\\<omega>' \\<in> fml_sem ?I ?\\<phi>)\n  Uvariation ?\\<nu> ?\\<nu>' (- ?V) = Vagree ?\\<nu> ?\\<nu>' ?V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     FVF \\<phi> \\<inter> U = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<omega> \\<in> fml_sem I \\<phi>) =\n                      (\\<omega>' \\<in> fml_sem I \\<phi>)", "by (metis Uvariation_def disjoint_eq_subset_Compl inf.commute subsetCE)"], ["", "paragraph \\<open>Coincidence for Games\\<close>"], ["", "text \\<open>\\<open>Cignorabimus \\<alpha> V\\<close> is the set of all sets of variables that can be ignored for the coincidence game lemma\\<close>"], ["", "definition Cignorabimus:: \"game \\<Rightarrow> variable set \\<Rightarrow> variable set set\"\n  where\n\"Cignorabimus \\<alpha> V = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>\\<omega>'.\\<forall>X. (Vagree \\<omega> \\<omega>' (-M) \\<longrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) \\<longrightarrow> (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)))}\""], ["", "lemma Cignorabimus_finite [simp]: \"finite (Cignorabimus \\<alpha> V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Cignorabimus \\<alpha> V)", "unfolding Cignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> \\<omega>' X.\n            Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n            \\<omega>\n            \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n            \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "using finite_powerset[OF allvars_finite] finite_subset"], ["proof (prove)\nusing this:\n  finite {S. S \\<subseteq> Denotational_Semantics.allvars}\n  finite ?M \\<Longrightarrow> finite {x \\<in> ?M. ?P x}\n\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> \\<omega>' X.\n            Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n            \\<omega>\n            \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n            \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "using Finite_Set.finite_subset"], ["proof (prove)\nusing this:\n  finite {S. S \\<subseteq> Denotational_Semantics.allvars}\n  finite ?M \\<Longrightarrow> finite {x \\<in> ?M. ?P x}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> \\<omega>' X.\n            Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n            \\<omega>\n            \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n            \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "by fastforce"], ["", "lemma Cignorabimus_equiv [simp]: \"Cignorabimus \\<alpha> V = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>\\<omega>'.\\<forall>X. (Vagree \\<omega> \\<omega>' (-M) \\<longrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) = (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cignorabimus \\<alpha> V =\n    {M. \\<forall>I \\<omega> \\<omega>' X.\n           Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n           (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) =\n           (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))}", "unfolding Cignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {M. \\<forall>I \\<omega> \\<omega>' X.\n           Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n           \\<omega>\n           \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n           \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)} =\n    {M. \\<forall>I \\<omega> \\<omega>' X.\n           Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n           (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) =\n           (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))}", "by (metis (no_types, lifting) Vagree_sym_rel)"], ["", "lemma Cignorabimus_antimon [simp]: \"M \\<in> Cignorabimus \\<alpha> V \\<and> N\\<subseteq>M \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<in> Cignorabimus \\<alpha> V \\<and> N \\<subseteq> M \\<Longrightarrow>\n    N \\<in> Cignorabimus \\<alpha> V", "unfolding Cignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                   Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                   \\<omega>\n                   \\<in> game_sem I \\<alpha>\n                          (restrictto X V) \\<longrightarrow>\n                   \\<omega>'\n                   \\<in> game_sem I \\<alpha> (restrictto X V)} \\<and>\n    N \\<subseteq> M \\<Longrightarrow>\n    N \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                   Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                   \\<omega>\n                   \\<in> game_sem I \\<alpha>\n                          (restrictto X V) \\<longrightarrow>\n                   \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "using Vagree_antimon"], ["proof (prove)\nusing this:\n  Vagree ?\\<nu> ?\\<nu>' ?V \\<and> ?W \\<subseteq> ?V \\<longrightarrow>\n  Vagree ?\\<nu> ?\\<nu>' ?W\n\ngoal (1 subgoal):\n 1. M \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                   Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                   \\<omega>\n                   \\<in> game_sem I \\<alpha>\n                          (restrictto X V) \\<longrightarrow>\n                   \\<omega>'\n                   \\<in> game_sem I \\<alpha> (restrictto X V)} \\<and>\n    N \\<subseteq> M \\<Longrightarrow>\n    N \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                   Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                   \\<omega>\n                   \\<in> game_sem I \\<alpha>\n                          (restrictto X V) \\<longrightarrow>\n                   \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "by blast"], ["", "lemma coempty: \"-{}=allvars\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - {} = Denotational_Semantics.allvars", "by simp"], ["", "lemma Cignorabimus_empty [simp]: \"{} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> Cignorabimus \\<alpha> V", "unfolding Cignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                    Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                    \\<omega>\n                    \\<in> game_sem I \\<alpha>\n                           (restrictto X V) \\<longrightarrow>\n                    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "using coempty Vagree_univ"], ["proof (prove)\nusing this:\n  - {} = Denotational_Semantics.allvars\n  Vagree ?\\<nu> ?\\<nu>' Denotational_Semantics.allvars = (?\\<nu> = ?\\<nu>')\n\ngoal (1 subgoal):\n 1. {} \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                    Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                    \\<omega>\n                    \\<in> game_sem I \\<alpha>\n                           (restrictto X V) \\<longrightarrow>\n                    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "by simp"], ["", "text \\<open>Cignorabimus contains nonfree variables\\<close>"], ["", "lemma Cignorabimus_init: \"V\\<supseteq>FVG(\\<alpha>) \\<Longrightarrow> x\\<notin>V \\<Longrightarrow> {x}\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "assume \"V\\<supseteq>FVG(\\<alpha>)\""], ["proof (state)\nthis:\n  FVG \\<alpha> \\<subseteq> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "assume a0: \"x\\<notin>V\""], ["proof (state)\nthis:\n  x \\<notin> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "hence a1: \"x\\<notin>FVG(\\<alpha>)\""], ["proof (prove)\nusing this:\n  x \\<notin> V\n\ngoal (1 subgoal):\n 1. x \\<notin> FVG \\<alpha>", "using \\<open>FVG \\<alpha> \\<subseteq> V\\<close>"], ["proof (prove)\nusing this:\n  x \\<notin> V\n  FVG \\<alpha> \\<subseteq> V\n\ngoal (1 subgoal):\n 1. x \\<notin> FVG \\<alpha>", "by blast"], ["proof (state)\nthis:\n  x \\<notin> FVG \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "hence \"\\<And>I v w. Vagree v w (-{x}) \\<Longrightarrow> (v \\<in> game_sem I \\<alpha> (restrictto X (-{x})) \\<longleftrightarrow> w \\<in> game_sem I \\<alpha> (restrictto X (-{x})))\""], ["proof (prove)\nusing this:\n  x \\<notin> FVG \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>I v w.\n       Vagree v w (- {x}) \\<Longrightarrow>\n       (v \\<in> game_sem I \\<alpha> (restrictto X (- {x}))) =\n       (w \\<in> game_sem I \\<alpha> (restrictto X (- {x})))", "by (metis (mono_tags, lifting) CollectI FVG_def Vagree_sym_rel)"], ["proof (state)\nthis:\n  Vagree ?v ?w (- {x}) \\<Longrightarrow>\n  (?v \\<in> game_sem ?I \\<alpha> (restrictto X (- {x}))) =\n  (?w \\<in> game_sem ?I \\<alpha> (restrictto X (- {x})))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V; x \\<notin> V\\<rbrakk>\n    \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V", "show \"{x}\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "fix I \\<omega> \\<omega>' X"], ["proof (state)\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "have \"Vagree \\<omega> \\<omega>' (-{x}) \\<longrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) \\<longrightarrow> (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (- {x}) \\<longrightarrow>\n    \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (- {x}) \\<Longrightarrow>\n    \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "assume a2: \"Vagree \\<omega> \\<omega>' (-{x})\""], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' (- {x})\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> \\<omega>' (- {x}) \\<Longrightarrow>\n    \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "show \"(\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) \\<longrightarrow> (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "assume \"\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)\""], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "hence \"\\<omega>\\<in>game_sem I \\<alpha> (restrictto (restrictto X V) (-{x}))\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))", "by (simp add: Int_absorb2 \\<open>x\\<notin>V\\<close>)"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "hence \"\\<omega>'\\<in>game_sem I \\<alpha> (restrictto (restrictto X V) (-{x}))\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))\n\ngoal (1 subgoal):\n 1. \\<omega>'\n    \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))", "using FVG_def a1 a2"], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))\n  FVG ?\\<alpha> =\n  {x. \\<exists>I \\<nu> \\<omega> X.\n         Vagree \\<nu> \\<omega> (- {x}) \\<and>\n         \\<nu> \\<in> game_sem I ?\\<alpha> (restrictto X (- {x})) \\<and>\n         \\<omega> \\<notin> game_sem I ?\\<alpha> (restrictto X (- {x}))}\n  x \\<notin> FVG \\<alpha>\n  Vagree \\<omega> \\<omega>' (- {x})\n\ngoal (1 subgoal):\n 1. \\<omega>'\n    \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))", "by blast"], ["proof (state)\nthis:\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "hence \"\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X (V\\<inter>-{x}))\""], ["proof (prove)\nusing this:\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto (restrictto X V) (- {x}))\n\ngoal (1 subgoal):\n 1. \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X (V \\<inter> - {x}))", "by simp"], ["proof (state)\nthis:\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X (V \\<inter> - {x}))\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "show \"\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "using a0"], ["proof (prove)\nusing this:\n  x \\<notin> V\n\ngoal (1 subgoal):\n 1. \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "by (metis Int_absorb2 \\<open>\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X (V \\<inter> - {x}))\\<close> subset_Compl_singleton)"], ["proof (state)\nthis:\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' (- {x}) \\<longrightarrow>\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<longrightarrow>\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "}"], ["proof (state)\nthis:\n  Vagree ?\\<omega>2 ?\\<omega>'2 (- {x}) \\<longrightarrow>\n  ?\\<omega>2\n  \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V) \\<longrightarrow>\n  ?\\<omega>'2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V)\n\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "thus ?thesis"], ["proof (prove)\nusing this:\n  Vagree ?\\<omega>2 ?\\<omega>'2 (- {x}) \\<longrightarrow>\n  ?\\<omega>2\n  \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V) \\<longrightarrow>\n  ?\\<omega>'2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V)\n\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "unfolding Cignorabimus_def"], ["proof (prove)\nusing this:\n  Vagree ?\\<omega>2 ?\\<omega>'2 (- {x}) \\<longrightarrow>\n  ?\\<omega>2\n  \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V) \\<longrightarrow>\n  ?\\<omega>'2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?Xa2 V)\n\ngoal (1 subgoal):\n 1. {x}\n    \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                 Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                 \\<omega>\n                 \\<in> game_sem I \\<alpha>\n                        (restrictto X V) \\<longrightarrow>\n                 \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "by auto"], ["proof (state)\nthis:\n  {x} \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x} \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Cignorabimus is closed under union\\<close>"], ["", "lemma Cignorabimus_union: \"M\\<in>Cignorabimus \\<alpha> V \\<Longrightarrow> N\\<in>Cignorabimus \\<alpha> V \\<Longrightarrow> (M\\<union>N)\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Cignorabimus \\<alpha> V;\n     N \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Cignorabimus \\<alpha> V;\n     N \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "assume a1: \"M\\<in>Cignorabimus \\<alpha> V\""], ["proof (state)\nthis:\n  M \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Cignorabimus \\<alpha> V;\n     N \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "assume a2: \"N\\<in>Cignorabimus \\<alpha> V\""], ["proof (state)\nthis:\n  N \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Cignorabimus \\<alpha> V;\n     N \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "show \"(M\\<union>N)\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "(*using a1 a2 unfolding Cignorabimus_def *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "fix I \\<omega> \\<omega>' X"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "assume a3: \"Vagree \\<omega> \\<omega>' (-(M\\<union>N))\""], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' (- (M \\<union> N))\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have h1: \"\\<And>I \\<omega> \\<omega>'.\\<And>X. (Vagree \\<omega> \\<omega>' (-M) \\<Longrightarrow>  (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) \\<Longrightarrow> (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> \\<omega>' X.\n       \\<lbrakk>Vagree \\<omega> \\<omega>' (- M);\n        \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\\<rbrakk>\n       \\<Longrightarrow> \\<omega>'\n                         \\<in> game_sem I \\<alpha> (restrictto X V)", "using a1"], ["proof (prove)\nusing this:\n  M \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> \\<omega>' X.\n       \\<lbrakk>Vagree \\<omega> \\<omega>' (- M);\n        \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\\<rbrakk>\n       \\<Longrightarrow> \\<omega>'\n                         \\<in> game_sem I \\<alpha> (restrictto X V)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Vagree ?\\<omega> ?\\<omega>' (- M);\n   ?\\<omega> \\<in> game_sem ?I \\<alpha> (restrictto ?X V)\\<rbrakk>\n  \\<Longrightarrow> ?\\<omega>' \\<in> game_sem ?I \\<alpha> (restrictto ?X V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have h2: \"\\<And>I \\<omega> \\<omega>'.\\<And>X. (Vagree \\<omega> \\<omega>' (-N) \\<Longrightarrow>  (\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V)) \\<Longrightarrow> (\\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> \\<omega>' X.\n       \\<lbrakk>Vagree \\<omega> \\<omega>' (- N);\n        \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\\<rbrakk>\n       \\<Longrightarrow> \\<omega>'\n                         \\<in> game_sem I \\<alpha> (restrictto X V)", "using a2"], ["proof (prove)\nusing this:\n  N \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> \\<omega>' X.\n       \\<lbrakk>Vagree \\<omega> \\<omega>' (- N);\n        \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)\\<rbrakk>\n       \\<Longrightarrow> \\<omega>'\n                         \\<in> game_sem I \\<alpha> (restrictto X V)", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>Vagree ?\\<omega> ?\\<omega>' (- N);\n   ?\\<omega> \\<in> game_sem ?I \\<alpha> (restrictto ?X V)\\<rbrakk>\n  \\<Longrightarrow> ?\\<omega>' \\<in> game_sem ?I \\<alpha> (restrictto ?X V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "let ?s = \"stateinterpol \\<omega>' \\<omega> M\""], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have v1: \"Vagree \\<omega> ?s (-(M\\<union>N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree \\<omega> (stateinterpol \\<omega>' \\<omega> M) (- (M \\<union> N))", "using a3"], ["proof (prove)\nusing this:\n  Vagree \\<omega> \\<omega>' (- (M \\<union> N))\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> (stateinterpol \\<omega>' \\<omega> M) (- (M \\<union> N))", "by (simp add: Vagree_def)"], ["proof (state)\nthis:\n  Vagree \\<omega> (stateinterpol \\<omega>' \\<omega> M) (- (M \\<union> N))\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have v2: \"Vagree ?s \\<omega>' (-(M\\<union>N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Vagree (stateinterpol \\<omega>' \\<omega> M) \\<omega>' (- (M \\<union> N))", "using a3"], ["proof (prove)\nusing this:\n  Vagree \\<omega> \\<omega>' (- (M \\<union> N))\n\ngoal (1 subgoal):\n 1. Vagree (stateinterpol \\<omega>' \\<omega> M) \\<omega>' (- (M \\<union> N))", "by (simp add: Vagree_def)"], ["proof (state)\nthis:\n  Vagree (stateinterpol \\<omega>' \\<omega> M) \\<omega>' (- (M \\<union> N))\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have r1: \"\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow> ?s\\<in>game_sem I \\<alpha> (restrictto X V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    stateinterpol \\<omega>' \\<omega> M\n    \\<in> game_sem I \\<alpha> (restrictto X V)", "by (metis ComplD Vagree_def h1 stateinterpol_right)"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n  stateinterpol \\<omega>' \\<omega> M\n  \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have r2: \"?s\\<in>game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow> \\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stateinterpol \\<omega>' \\<omega> M\n    \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "by (metis Vagree_ror compl_sup h1 h2 v2)"], ["proof (state)\nthis:\n  stateinterpol \\<omega>' \\<omega> M\n  \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "have res: \"\\<omega>\\<in>game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow> \\<omega>'\\<in>game_sem I \\<alpha> (restrictto X V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "using r1 r2"], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n  stateinterpol \\<omega>' \\<omega> M\n  \\<in> game_sem I \\<alpha> (restrictto X V)\n  stateinterpol \\<omega>' \\<omega> M\n  \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n    \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)", "by blast"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (restrictto X V) \\<Longrightarrow>\n  \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "}"], ["proof (state)\nthis:\n  \\<lbrakk>Vagree ?\\<omega>2 ?\\<omega>'2 (- (M \\<union> N));\n   ?\\<omega>2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\\<rbrakk>\n  \\<Longrightarrow> ?\\<omega>'2\n                    \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Vagree ?\\<omega>2 ?\\<omega>'2 (- (M \\<union> N));\n   ?\\<omega>2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\\<rbrakk>\n  \\<Longrightarrow> ?\\<omega>'2\n                    \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Cignorabimus \\<alpha> V", "unfolding Cignorabimus_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>Vagree ?\\<omega>2 ?\\<omega>'2 (- (M \\<union> N));\n   ?\\<omega>2 \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\\<rbrakk>\n  \\<Longrightarrow> ?\\<omega>'2\n                    \\<in> game_sem ?I2 \\<alpha> (restrictto ?X2 V)\n\ngoal (1 subgoal):\n 1. M \\<union> N\n    \\<in> {M. \\<forall>I \\<omega> \\<omega>' X.\n                 Vagree \\<omega> \\<omega>' (- M) \\<longrightarrow>\n                 \\<omega>\n                 \\<in> game_sem I \\<alpha>\n                        (restrictto X V) \\<longrightarrow>\n                 \\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V)}", "by auto"], ["proof (state)\nthis:\n  M \\<union> N \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  M \\<union> N \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma powersetup_induct [case_names Base Cup]:\n   \"\\<And>C. (\\<And>M. M\\<in>C \\<Longrightarrow> P M) \\<Longrightarrow>\n    (\\<And>S. (\\<And>M. M\\<in>S \\<Longrightarrow> P M) \\<Longrightarrow> P (\\<Union>S)) \\<Longrightarrow>\n     P (\\<Union>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>C.\n       \\<lbrakk>\\<And>M. M \\<in> C \\<Longrightarrow> P M;\n        \\<And>S.\n           (\\<And>M. M \\<in> S \\<Longrightarrow> P M) \\<Longrightarrow>\n           P (\\<Union> S)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> C)", "by simp"], ["", "lemma Union_insert: \"\\<Union>(insert x S) = x\\<union>\\<Union>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (insert x S) = x \\<union> \\<Union> S", "by simp"], ["", "lemma powerset2up_induct [case_names Finite Nonempty Base Cup]:\n   \"(finite C) \\<Longrightarrow> (C\\<noteq>{}) \\<Longrightarrow> (\\<And>M. M\\<in>C \\<Longrightarrow> P M) \\<Longrightarrow>\n    (\\<And>M N. P M \\<Longrightarrow> P N \\<Longrightarrow> P (M\\<union>N)) \\<Longrightarrow>\n     P (\\<Union>C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite C; C \\<noteq> {};\n     \\<And>M. M \\<in> C \\<Longrightarrow> P M;\n     \\<And>M N.\n        \\<lbrakk>P M; P N\\<rbrakk>\n        \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n    \\<Longrightarrow> P (\\<Union> C)", "proof (induction rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<noteq> {}; \\<And>M. M \\<in> {} \\<Longrightarrow> P M;\n     \\<And>M N.\n        \\<lbrakk>P M; P N\\<rbrakk>\n        \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n    \\<Longrightarrow> P (\\<Union> {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n         \\<And>M N.\n            \\<lbrakk>P M; P N\\<rbrakk>\n            \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n        \\<Longrightarrow> P (\\<Union> F);\n        insert x F \\<noteq> {};\n        \\<And>M. M \\<in> insert x F \\<Longrightarrow> P M;\n        \\<And>M N.\n           \\<lbrakk>P M; P N\\<rbrakk>\n           \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> (insert x F))", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n  ?M \\<in> {} \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<noteq> {}; \\<And>M. M \\<in> {} \\<Longrightarrow> P M;\n     \\<And>M N.\n        \\<lbrakk>P M; P N\\<rbrakk>\n        \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n    \\<Longrightarrow> P (\\<Union> {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n         \\<And>M N.\n            \\<lbrakk>P M; P N\\<rbrakk>\n            \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n        \\<Longrightarrow> P (\\<Union> F);\n        insert x F \\<noteq> {};\n        \\<And>M. M \\<in> insert x F \\<Longrightarrow> P M;\n        \\<And>M N.\n           \\<lbrakk>P M; P N\\<rbrakk>\n           \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> (insert x F))", "then"], ["proof (chain)\npicking this:\n  {} \\<noteq> {}\n  ?M \\<in> {} \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)", "show ?case"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n  ?M \\<in> {} \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)\n\ngoal (1 subgoal):\n 1. P (\\<Union> {})", "by simp"], ["proof (state)\nthis:\n  P (\\<Union> {})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n         \\<And>M N.\n            \\<lbrakk>P M; P N\\<rbrakk>\n            \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n        \\<Longrightarrow> P (\\<Union> F);\n        insert x F \\<noteq> {};\n        \\<And>M. M \\<in> insert x F \\<Longrightarrow> P M;\n        \\<And>M N.\n           \\<lbrakk>P M; P N\\<rbrakk>\n           \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n         \\<And>M N.\n            \\<lbrakk>P M; P N\\<rbrakk>\n            \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n        \\<Longrightarrow> P (\\<Union> F);\n        insert x F \\<noteq> {};\n        \\<And>M. M \\<in> insert x F \\<Longrightarrow> P M;\n        \\<And>M N.\n           \\<lbrakk>P M; P N\\<rbrakk>\n           \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> (insert x F))", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n   \\<And>M N.\n      \\<lbrakk>P M; P N\\<rbrakk> \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n  \\<Longrightarrow> P (\\<Union> F)\n  insert x F \\<noteq> {}\n  ?M \\<in> insert x F \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n         \\<And>M N.\n            \\<lbrakk>P M; P N\\<rbrakk>\n            \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n        \\<Longrightarrow> P (\\<Union> F);\n        insert x F \\<noteq> {};\n        \\<And>M. M \\<in> insert x F \\<Longrightarrow> P M;\n        \\<And>M N.\n           \\<lbrakk>P M; P N\\<rbrakk>\n           \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n       \\<Longrightarrow> P (\\<Union> (insert x F))", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n   \\<And>M N.\n      \\<lbrakk>P M; P N\\<rbrakk> \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n  \\<Longrightarrow> P (\\<Union> F)\n  insert x F \\<noteq> {}\n  ?M \\<in> insert x F \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<noteq> {}; \\<And>M. M \\<in> F \\<Longrightarrow> P M;\n   \\<And>M N.\n      \\<lbrakk>P M; P N\\<rbrakk> \\<Longrightarrow> P (M \\<union> N)\\<rbrakk>\n  \\<Longrightarrow> P (\\<Union> F)\n  insert x F \\<noteq> {}\n  ?M \\<in> insert x F \\<Longrightarrow> P ?M\n  \\<lbrakk>P ?M; P ?N\\<rbrakk> \\<Longrightarrow> P (?M \\<union> ?N)\n\ngoal (1 subgoal):\n 1. P (\\<Union> (insert x F))", "by force"], ["proof (state)\nthis:\n  P (\\<Union> (insert x F))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Cignorabimus_step: \"(\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Cignorabimus \\<alpha> V) \\<Longrightarrow> (\\<Union>S)\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        M \\<in> S \\<Longrightarrow>\n        M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n    \\<Union> S \\<in> Cignorabimus \\<alpha> V", "proof (cases \"S={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S = {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V\n 2. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S = {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V\n 2. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Cignorabimus \\<alpha> V", "using Cignorabimus_empty"], ["proof (prove)\nusing this:\n  S = {}\n  {} \\<in> Cignorabimus ?\\<alpha> ?V\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Cignorabimus \\<alpha> V", "by simp"], ["proof (state)\nthis:\n  \\<Union> S \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V", "case nonem: False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "show \"\\<Union>S\\<in>Cignorabimus \\<alpha> V\" if \"\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Cignorabimus \\<alpha> V\" and nonemp:\"S\\<noteq>{}\" for S"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Cignorabimus \\<alpha> V", "proof (induction rule: powerset2up_induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite S\n 2. S \\<noteq> {}\n 3. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 4. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "case Finite"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. finite S\n 2. S \\<noteq> {}\n 3. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 4. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "using Cignorabimus_finite"], ["proof (prove)\nusing this:\n  finite (Cignorabimus ?\\<alpha> ?V)\n\ngoal (1 subgoal):\n 1. finite S", "by (meson infinite_super subset_eq that(1))"], ["proof (state)\nthis:\n  finite S\n\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "case Nonempty"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "using nonemp"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "case (Base M)"], ["proof (state)\nthis:\n  M \\<in> S\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  M \\<in> S\n  S \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  M \\<in> S\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. M \\<in> Cignorabimus \\<alpha> V", "using that"], ["proof (prove)\nusing this:\n  M \\<in> S\n  S \\<noteq> {}\n  ?M \\<in> S \\<Longrightarrow> ?M \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. M \\<in> Cignorabimus \\<alpha> V", "by simp"], ["proof (state)\nthis:\n  M \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "case (Cup S)"], ["proof (state)\nthis:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Cignorabimus \\<alpha> V;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<union> N_ \\<in> Cignorabimus \\<alpha> V", "using that Cignorabimus_union"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Cignorabimus \\<alpha> V\n  S \\<noteq> {}\n  ?M \\<in> Sa__ \\<Longrightarrow> ?M \\<in> Cignorabimus \\<alpha> V\n  Sa__ \\<noteq> {}\n  \\<lbrakk>?M \\<in> Cignorabimus ?\\<alpha> ?V;\n   ?N \\<in> Cignorabimus ?\\<alpha> ?V\\<rbrakk>\n  \\<Longrightarrow> ?M \\<union> ?N \\<in> Cignorabimus ?\\<alpha> ?V\n\ngoal (1 subgoal):\n 1. S \\<union> N_ \\<in> Cignorabimus \\<alpha> V", "by blast"], ["proof (state)\nthis:\n  S \\<union> N_ \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>M.\n              M \\<in> ?S \\<Longrightarrow> M \\<in> Cignorabimus \\<alpha> V;\n   ?S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<Union> ?S \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Lemma 12 \\<^url>\\<open>https://doi.org/10.1007/978-3-319-94205-6_15\\<close>\\<close>"], ["", "theorem coincidence_game: \"Vagree \\<omega> \\<omega>' V \\<Longrightarrow> V\\<supseteq>FVG(\\<alpha>) \\<Longrightarrow> (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) = (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "assume a1: \"Vagree \\<omega> \\<omega>' V\""], ["proof (state)\nthis:\n  Vagree \\<omega> \\<omega>' V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "assume a2: \"V \\<supseteq> FVG \\<alpha>\""], ["proof (state)\nthis:\n  FVG \\<alpha> \\<subseteq> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "have base: \"{x}\\<in>Cignorabimus \\<alpha> V\" if a3: \"x\\<notin>V\" and a4: \"V \\<supseteq> FVG \\<alpha>\" for x V"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "using a3 and a4 and Cignorabimus_init"], ["proof (prove)\nusing this:\n  x \\<notin> V\n  FVG \\<alpha> \\<subseteq> V\n  \\<lbrakk>FVG ?\\<alpha> \\<subseteq> ?V; ?x \\<notin> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus ?\\<alpha> ?V\n\ngoal (1 subgoal):\n 1. {x} \\<in> Cignorabimus \\<alpha> V", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<notin> ?V; FVG \\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus \\<alpha> ?V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "have h: \"-V = \\<Union>{xx. \\<exists>x. xx={x} \\<and> x\\<notin>V}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - V = \\<Union> {{x} |x. x \\<notin> V}", "by auto"], ["proof (state)\nthis:\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "(* finite *)"], ["proof (state)\nthis:\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "have \"(-V)\\<in>Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "using a2 base h"], ["proof (prove)\nusing this:\n  FVG \\<alpha> \\<subseteq> V\n  \\<lbrakk>?x \\<notin> ?V; FVG \\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus \\<alpha> ?V\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "using Cignorabimus_step"], ["proof (prove)\nusing this:\n  FVG \\<alpha> \\<subseteq> V\n  \\<lbrakk>?x \\<notin> ?V; FVG \\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus \\<alpha> ?V\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n  (\\<And>M.\n      M \\<in> ?S \\<Longrightarrow>\n      M \\<in> Cignorabimus ?\\<alpha> ?V) \\<Longrightarrow>\n  \\<Union> ?S \\<in> Cignorabimus ?\\<alpha> ?V\n\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "(*by (smt Cignorabimus_step mem_Collect_eq)*)"], ["proof (prove)\nusing this:\n  FVG \\<alpha> \\<subseteq> V\n  \\<lbrakk>?x \\<notin> ?V; FVG \\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus \\<alpha> ?V\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n  (\\<And>M.\n      M \\<in> ?S \\<Longrightarrow>\n      M \\<in> Cignorabimus ?\\<alpha> ?V) \\<Longrightarrow>\n  \\<Union> ?S \\<in> Cignorabimus ?\\<alpha> ?V\n\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "(*sledgehammer*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "have f1: \"\\<forall>v V. v \\<in> V \\<or> \\<not> FVG \\<alpha> \\<subseteq> V \\<or> {v} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v V.\n       v \\<in> V \\<or>\n       \\<not> FVG \\<alpha> \\<subseteq> V \\<or>\n       {v} \\<in> Cignorabimus \\<alpha> V", "using base"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<notin> ?V; FVG \\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> {?x} \\<in> Cignorabimus \\<alpha> ?V\n\ngoal (1 subgoal):\n 1. \\<forall>v V.\n       v \\<in> V \\<or>\n       \\<not> FVG \\<alpha> \\<subseteq> V \\<or>\n       {v} \\<in> Cignorabimus \\<alpha> V", "by satx"], ["proof (state)\nthis:\n  \\<forall>v V.\n     v \\<in> V \\<or>\n     \\<not> FVG \\<alpha> \\<subseteq> V \\<or>\n     {v} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "obtain VV :: \"variable set \\<Rightarrow> game \\<Rightarrow> variable set set \\<Rightarrow> variable set\" where\n      f2: \"\\<forall>x0 x1 x2. (\\<exists>v3. v3 \\<in> x2 \\<and> v3 \\<notin> Cignorabimus x1 x0) = (VV x0 x1 x2 \\<in> x2 \\<and> VV x0 x1 x2 \\<notin> Cignorabimus x1 x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>VV.\n        \\<forall>x0 x1 x2.\n           (\\<exists>v3.\n               v3 \\<in> x2 \\<and> v3 \\<notin> Cignorabimus x1 x0) =\n           (VV x0 x1 x2 \\<in> x2 \\<and>\n            VV x0 x1 x2 \\<notin> Cignorabimus x1 x0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. v3 \\<in> x2 \\<and> v3 \\<notin> Cignorabimus x1 x0) =\n     (VV x0 x1 x2 \\<in> x2 \\<and> VV x0 x1 x2 \\<notin> Cignorabimus x1 x0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "obtain vv :: \"variable set \\<Rightarrow> variable\" where\n      f3: \"((\\<nexists>v. VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or> VV V \\<alpha> {{v} |v. v \\<notin> V} = {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and> vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and> ((\\<exists>v. VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or> (\\<forall>v. VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>vv.\n        ((\\<nexists>v.\n             VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n             v \\<notin> V) \\<or>\n         VV V \\<alpha> {{v} |v. v \\<notin> V} =\n         {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n         vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n        ((\\<exists>v.\n             VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n             v \\<notin> V) \\<or>\n         (\\<forall>v.\n             VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or>\n             v \\<in> V)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "moreover"], ["proof (state)\nthis:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "{"], ["proof (state)\nthis:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "assume \"{vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<in> Cignorabimus \\<alpha> V\""], ["proof (state)\nthis:\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<in> Cignorabimus \\<alpha> V", "have \"(VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or> vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or> VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or> VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\nusing this:\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. (VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq>\n     {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or>\n     vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V}\n    \\<notin> {{v} |v. v \\<notin> V} \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "by metis"], ["proof (state)\nthis:\n  (VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq>\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  (VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq>\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "have \"(\\<exists>v. VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<longrightarrow> VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or> VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\nusing this:\n  (VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq>\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. (\\<exists>v.\n        VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n        v \\<notin> V) \\<longrightarrow>\n    VV V \\<alpha> {{v} |v. v \\<notin> V}\n    \\<notin> {{v} |v. v \\<notin> V} \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "using f3"], ["proof (prove)\nusing this:\n  (VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq>\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<or>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<in> V) \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n\ngoal (1 subgoal):\n 1. (\\<exists>v.\n        VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n        v \\<notin> V) \\<longrightarrow>\n    VV V \\<alpha> {{v} |v. v \\<notin> V}\n    \\<notin> {{v} |v. v \\<notin> V} \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "by blast"], ["proof (state)\nthis:\n  (\\<exists>v.\n      VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n      v \\<notin> V) \\<longrightarrow>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "}"], ["proof (state)\nthis:\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})}\n  \\<in> Cignorabimus \\<alpha> V \\<Longrightarrow>\n  (\\<exists>v.\n      VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n      v \\<notin> V) \\<longrightarrow>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})}\n  \\<in> Cignorabimus \\<alpha> V \\<Longrightarrow>\n  (\\<exists>v.\n      VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n      v \\<notin> V) \\<longrightarrow>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "have \"VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or> VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\nusing this:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})}\n  \\<in> Cignorabimus \\<alpha> V \\<Longrightarrow>\n  (\\<exists>v.\n      VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n      v \\<notin> V) \\<longrightarrow>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. VV V \\<alpha> {{v} |v. v \\<notin> V}\n    \\<notin> {{v} |v. v \\<notin> V} \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "using f1 a2"], ["proof (prove)\nusing this:\n  ((\\<nexists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   VV V \\<alpha> {{v} |v. v \\<notin> V} =\n   {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})} \\<and>\n   vv (VV V \\<alpha> {{v} |v. v \\<notin> V}) \\<notin> V) \\<and>\n  ((\\<exists>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and> v \\<notin> V) \\<or>\n   (\\<forall>v.\n       VV V \\<alpha> {{v} |v. v \\<notin> V} \\<noteq> {v} \\<or> v \\<in> V))\n  {vv (VV V \\<alpha> {{v} |v. v \\<notin> V})}\n  \\<in> Cignorabimus \\<alpha> V \\<Longrightarrow>\n  (\\<exists>v.\n      VV V \\<alpha> {{v} |v. v \\<notin> V} = {v} \\<and>\n      v \\<notin> V) \\<longrightarrow>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n  \\<forall>v V.\n     v \\<in> V \\<or>\n     \\<not> FVG \\<alpha> \\<subseteq> V \\<or>\n     {v} \\<in> Cignorabimus \\<alpha> V\n  FVG \\<alpha> \\<subseteq> V\n\ngoal (1 subgoal):\n 1. VV V \\<alpha> {{v} |v. v \\<notin> V}\n    \\<notin> {{v} |v. v \\<notin> V} \\<or>\n    VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "by blast"], ["proof (state)\nthis:\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "have \"\\<Union>{{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\""], ["proof (prove)\nusing this:\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "using f2"], ["proof (prove)\nusing this:\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<notin> {{v} |v. v \\<notin> V} \\<or>\n  VV V \\<alpha> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n  \\<forall>x0 x1 x2.\n     (\\<exists>v3. v3 \\<in> x2 \\<and> v3 \\<notin> Cignorabimus x1 x0) =\n     (VV x0 x1 x2 \\<in> x2 \\<and> VV x0 x1 x2 \\<notin> Cignorabimus x1 x0)\n\ngoal (1 subgoal):\n 1. \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "by (meson Cignorabimus_step)"], ["proof (state)\nthis:\n  \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>FVG \\<alpha> \\<subseteq> V;\n     \\<And>x V.\n        \\<lbrakk>x \\<notin> V; FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n        \\<Longrightarrow> {x} \\<in> Cignorabimus \\<alpha> V;\n     - V = \\<Union> {{x} |x. x \\<notin> V};\n     \\<And>S \\<alpha> V.\n        (\\<And>M.\n            M \\<in> S \\<Longrightarrow>\n            M \\<in> Cignorabimus \\<alpha> V) \\<Longrightarrow>\n        \\<Union> S \\<in> Cignorabimus \\<alpha> V\\<rbrakk>\n    \\<Longrightarrow> - V \\<in> Cignorabimus \\<alpha> V", "then"], ["proof (chain)\npicking this:\n  \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "using h"], ["proof (prove)\nusing this:\n  \\<Union> {{v} |v. v \\<notin> V} \\<in> Cignorabimus \\<alpha> V\n  - V = \\<Union> {{x} |x. x \\<notin> V}\n\ngoal (1 subgoal):\n 1. - V \\<in> Cignorabimus \\<alpha> V", "by presburger"], ["proof (state)\nthis:\n  - V \\<in> Cignorabimus \\<alpha> V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - V \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Vagree \\<omega> \\<omega>' V;\n     FVG \\<alpha> \\<subseteq> V\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X V)) =\n                      (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "from this"], ["proof (chain)\npicking this:\n  - V \\<in> Cignorabimus \\<alpha> V", "show ?thesis"], ["proof (prove)\nusing this:\n  - V \\<in> Cignorabimus \\<alpha> V\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) =\n    (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))", "by (simp add: a1)"], ["proof (state)\nthis:\n  (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X V)) =\n  (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X V))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary coincidence_game_cor: \"Uvariation \\<omega> \\<omega>' U \\<Longrightarrow> U\\<inter>FVG(\\<alpha>)={} \\<Longrightarrow> (\\<omega> \\<in> game_sem I \\<alpha> (restrictto X (-U))) = (\\<omega>' \\<in> game_sem I \\<alpha> (restrictto X (-U)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     U \\<inter> FVG \\<alpha> = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X (- U))) =\n                      (\\<omega>'\n                       \\<in> game_sem I \\<alpha> (restrictto X (- U)))", "using coincidence_game Uvariation_Vagree"], ["proof (prove)\nusing this:\n  \\<lbrakk>Vagree ?\\<omega> ?\\<omega>' ?V;\n   FVG ?\\<alpha> \\<subseteq> ?V\\<rbrakk>\n  \\<Longrightarrow> (?\\<omega>\n                     \\<in> game_sem ?I ?\\<alpha> (restrictto ?X ?V)) =\n                    (?\\<omega>'\n                     \\<in> game_sem ?I ?\\<alpha> (restrictto ?X ?V))\n  Uvariation ?\\<nu> ?\\<nu>' (- ?V) = Vagree ?\\<nu> ?\\<nu>' ?V\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Uvariation \\<omega> \\<omega>' U;\n     U \\<inter> FVG \\<alpha> = {}\\<rbrakk>\n    \\<Longrightarrow> (\\<omega>\n                       \\<in> game_sem I \\<alpha> (restrictto X (- U))) =\n                      (\\<omega>'\n                       \\<in> game_sem I \\<alpha> (restrictto X (- U)))", "by (metis Uvariation_Vagree coincidence_game compl_le_swap1 disjoint_eq_subset_Compl double_compl)"], ["", "subsection \\<open>Bound Effect Lemmas\\<close>"], ["", "text \\<open>\\<open>Bignorabimus \\<alpha> V\\<close> is the set of all sets of variables that can be ignored for boundeffect\\<close>"], ["", "definition Bignorabimus:: \"game \\<Rightarrow> variable set set\"\n  where\n  \"Bignorabimus \\<alpha> = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>X. \\<omega>\\<in>game_sem I \\<alpha> X \\<longleftrightarrow> \\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> M)}\""], ["", "lemma Bignorabimus_finite [simp]: \"finite (Bignorabimus \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Bignorabimus \\<alpha>)", "unfolding Bignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> X.\n            (\\<omega> \\<in> game_sem I \\<alpha> X) =\n            (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "using finite_powerset[OF allvars_finite] finite_subset"], ["proof (prove)\nusing this:\n  finite {S. S \\<subseteq> Denotational_Semantics.allvars}\n  finite ?M \\<Longrightarrow> finite {x \\<in> ?M. ?P x}\n\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> X.\n            (\\<omega> \\<in> game_sem I \\<alpha> X) =\n            (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "using Finite_Set.finite_subset"], ["proof (prove)\nusing this:\n  finite {S. S \\<subseteq> Denotational_Semantics.allvars}\n  finite ?M \\<Longrightarrow> finite {x \\<in> ?M. ?P x}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {M. \\<forall>I \\<omega> X.\n            (\\<omega> \\<in> game_sem I \\<alpha> X) =\n            (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "by fastforce"], ["", "lemma Bignorabimus_single [simp]: \"game_sem I \\<alpha> (selectlike X \\<omega> M) \\<subseteq> game_sem I \\<alpha> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. game_sem I \\<alpha> (selectlike X \\<omega> M)\n    \\<subseteq> game_sem I \\<alpha> X", "by (meson monotone selectlike_shrinks subsetCE)"], ["", "lemma Bignorabimus_equiv [simp]: \"Bignorabimus \\<alpha> = {M. \\<forall>I.\\<forall>\\<omega>.\\<forall>X. (\\<omega>\\<in>game_sem I \\<alpha> X \\<longrightarrow> \\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> M))}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "(*by (smt Bignorabimus_def Bignorabimus_single Collect_cong subsetCE)*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "(*sledgehammer transformed*)"], ["proof (state)\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "obtain VV :: \"(variable set \\<Rightarrow> bool) \\<Rightarrow> (variable set \\<Rightarrow> bool) \\<Rightarrow> variable set\" where\n    f1: \"\\<forall>p pa. (\\<not> p (VV pa p)) = pa (VV pa p) \\<or> Collect p = Collect pa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>VV.\n        \\<forall>p pa.\n           (\\<not> p (VV pa p)) = pa (VV pa p) \\<or>\n           Collect p = Collect pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types) Collect_cong)"], ["proof (state)\nthis:\n  \\<forall>p pa.\n     (\\<not> p (VV pa p)) = pa (VV pa p) \\<or> Collect p = Collect pa\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "obtain rr :: \"variable set \\<Rightarrow> game \\<Rightarrow> variable \\<Rightarrow> real\" and ii :: \"variable set \\<Rightarrow> game \\<Rightarrow> interp\" and FF :: \"variable set \\<Rightarrow> game \\<Rightarrow> (variable \\<Rightarrow> real) set\" where\n    f2: \"\\<forall>x0 x1. (\\<exists>v2 v3 v4. (v3 \\<in> game_sem v2 x1 v4) \\<noteq> (v3 \\<in> game_sem v2 x1 (selectlike v4 v3 x0))) = ((rr x0 x1 \\<in> game_sem (ii x0 x1) x1 (FF x0 x1)) \\<noteq> (rr x0 x1 \\<in> game_sem (ii x0 x1) x1 (selectlike (FF x0 x1) (rr x0 x1) x0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>rr ii FF.\n        \\<forall>x0 x1.\n           (\\<exists>v2 v3 v4.\n               (v3 \\<in> game_sem v2 x1 v4) \\<noteq>\n               (v3 \\<in> game_sem v2 x1 (selectlike v4 v3 x0))) =\n           ((rr x0 x1 \\<in> game_sem (ii x0 x1) x1 (FF x0 x1)) \\<noteq>\n            (rr x0 x1\n             \\<in> game_sem (ii x0 x1) x1\n                    (selectlike (FF x0 x1) (rr x0 x1)\n                      x0))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2 v3 v4.\n         (v3 \\<in> game_sem v2 x1 v4) \\<noteq>\n         (v3 \\<in> game_sem v2 x1 (selectlike v4 v3 x0))) =\n     ((rr x0 x1 \\<in> game_sem (ii x0 x1) x1 (FF x0 x1)) \\<noteq>\n      (rr x0 x1\n       \\<in> game_sem (ii x0 x1) x1 (selectlike (FF x0 x1) (rr x0 x1) x0)))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "have fact: \"{V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))} = {V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "using f1"], ["proof (prove)\nusing this:\n  \\<forall>p pa.\n     (\\<not> p (VV pa p)) = pa (VV pa p) \\<or> Collect p = Collect pa\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "by (metis (no_types, hide_lams) Bignorabimus_single subsetCE)"], ["proof (state)\nthis:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "have f3: \"rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<notin> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (selectlike (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))) \\<or> rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<in> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<notin> game_sem\n              (ii (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              \\<alpha>\n              (selectlike\n                (FF (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                (rr (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                (VV (\\<lambda>V.\n                        \\<forall>i f F.\n                           (f \\<in> game_sem i \\<alpha> F) =\n                           (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                  (\\<lambda>V.\n                      \\<forall>i f F.\n                         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                         f \\<in> game_sem i \\<alpha>\n                                  (selectlike F f V)))) \\<or>\n    rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)", "using Bignorabimus_single"], ["proof (prove)\nusing this:\n  game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> ?M)\n  \\<subseteq> game_sem ?I ?\\<alpha> ?X\n\ngoal (1 subgoal):\n 1. rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<notin> game_sem\n              (ii (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              \\<alpha>\n              (selectlike\n                (FF (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                (rr (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                (VV (\\<lambda>V.\n                        \\<forall>i f F.\n                           (f \\<in> game_sem i \\<alpha> F) =\n                           (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                  (\\<lambda>V.\n                      \\<forall>i f F.\n                         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                         f \\<in> game_sem i \\<alpha>\n                                  (selectlike F f V)))) \\<or>\n    rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)", "by blast"], ["proof (state)\nthis:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<notin> game_sem\n            (ii (VV (\\<lambda>V.\n                        \\<forall>i f F.\n                           (f \\<in> game_sem i \\<alpha> F) =\n                           (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                  (\\<lambda>V.\n                      \\<forall>i f F.\n                         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                         f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n              \\<alpha>)\n            \\<alpha>\n            (selectlike\n              (FF (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              (rr (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              (VV (\\<lambda>V.\n                      \\<forall>i f F.\n                         (f \\<in> game_sem i \\<alpha> F) =\n                         (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                (\\<lambda>V.\n                    \\<forall>i f F.\n                       f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                       f \\<in> game_sem i \\<alpha>\n                                (selectlike F f V)))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "have f4: \"(\\<not> (\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))) \\<or> (\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))))) \\<and> ((\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))) \\<or> (rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<notin> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>)) = (rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<in> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (selectlike (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha>\n                          (selectlike F f\n                            (VV (\\<lambda>V.\n                                    \\<forall>i f F.\n (f \\<in> game_sem i \\<alpha> F) =\n (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                              (\\<lambda>V.\n                                  \\<forall>i f F.\n                                     f \\<in> game_sem i \\<alpha>\n        F \\<longrightarrow>\n                                     f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))))) \\<or>\n     (\\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha>\n                   (selectlike F f\n                     (VV (\\<lambda>V.\n                             \\<forall>i f F.\n                                (f \\<in> game_sem i \\<alpha> F) =\n                                (f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))\n                       (\\<lambda>V.\n                           \\<forall>i f F.\n                              f \\<in> game_sem i \\<alpha>\n F \\<longrightarrow>\n                              f \\<in> game_sem i \\<alpha>\n (selectlike F f V))))))) \\<and>\n    ((\\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha>\n                   (selectlike F f\n                     (VV (\\<lambda>V.\n                             \\<forall>i f F.\n                                (f \\<in> game_sem i \\<alpha> F) =\n                                (f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))\n                       (\\<lambda>V.\n                           \\<forall>i f F.\n                              f \\<in> game_sem i \\<alpha>\n F \\<longrightarrow>\n                              f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))))) \\<or>\n     (rr (VV (\\<lambda>V.\n                 \\<forall>i f F.\n                    (f \\<in> game_sem i \\<alpha> F) =\n                    (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           (\\<lambda>V.\n               \\<forall>i f F.\n                  f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                  f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       \\<alpha>\n      \\<notin> game_sem\n                (ii (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                \\<alpha>\n                (FF (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)) =\n     (rr (VV (\\<lambda>V.\n                 \\<forall>i f F.\n                    (f \\<in> game_sem i \\<alpha> F) =\n                    (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           (\\<lambda>V.\n               \\<forall>i f F.\n                  f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                  f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       \\<alpha>\n      \\<in> game_sem\n             (ii (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             \\<alpha>\n             (selectlike\n               (FF (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 \\<alpha>)\n               (rr (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 \\<alpha>)\n               (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V))))))", "using f2"], ["proof (prove)\nusing this:\n  \\<forall>x0 x1.\n     (\\<exists>v2 v3 v4.\n         (v3 \\<in> game_sem v2 x1 v4) \\<noteq>\n         (v3 \\<in> game_sem v2 x1 (selectlike v4 v3 x0))) =\n     ((rr x0 x1 \\<in> game_sem (ii x0 x1) x1 (FF x0 x1)) \\<noteq>\n      (rr x0 x1\n       \\<in> game_sem (ii x0 x1) x1 (selectlike (FF x0 x1) (rr x0 x1) x0)))\n\ngoal (1 subgoal):\n 1. (\\<not> (\\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha>\n                          (selectlike F f\n                            (VV (\\<lambda>V.\n                                    \\<forall>i f F.\n (f \\<in> game_sem i \\<alpha> F) =\n (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                              (\\<lambda>V.\n                                  \\<forall>i f F.\n                                     f \\<in> game_sem i \\<alpha>\n        F \\<longrightarrow>\n                                     f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))))) \\<or>\n     (\\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha>\n                   (selectlike F f\n                     (VV (\\<lambda>V.\n                             \\<forall>i f F.\n                                (f \\<in> game_sem i \\<alpha> F) =\n                                (f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))\n                       (\\<lambda>V.\n                           \\<forall>i f F.\n                              f \\<in> game_sem i \\<alpha>\n F \\<longrightarrow>\n                              f \\<in> game_sem i \\<alpha>\n (selectlike F f V))))))) \\<and>\n    ((\\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha>\n                   (selectlike F f\n                     (VV (\\<lambda>V.\n                             \\<forall>i f F.\n                                (f \\<in> game_sem i \\<alpha> F) =\n                                (f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))\n                       (\\<lambda>V.\n                           \\<forall>i f F.\n                              f \\<in> game_sem i \\<alpha>\n F \\<longrightarrow>\n                              f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))))) \\<or>\n     (rr (VV (\\<lambda>V.\n                 \\<forall>i f F.\n                    (f \\<in> game_sem i \\<alpha> F) =\n                    (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           (\\<lambda>V.\n               \\<forall>i f F.\n                  f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                  f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       \\<alpha>\n      \\<notin> game_sem\n                (ii (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)\n                \\<alpha>\n                (FF (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                  \\<alpha>)) =\n     (rr (VV (\\<lambda>V.\n                 \\<forall>i f F.\n                    (f \\<in> game_sem i \\<alpha> F) =\n                    (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           (\\<lambda>V.\n               \\<forall>i f F.\n                  f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                  f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       \\<alpha>\n      \\<in> game_sem\n             (ii (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             \\<alpha>\n             (selectlike\n               (FF (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 \\<alpha>)\n               (rr (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 \\<alpha>)\n               (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V))))))", "by blast"], ["proof (state)\nthis:\n  (\\<not> (\\<forall>i f F.\n              (f \\<in> game_sem i \\<alpha> F) =\n              (f \\<in> game_sem i \\<alpha>\n                        (selectlike F f\n                          (VV (\\<lambda>V.\n                                  \\<forall>i f F.\n                                     (f \\<in> game_sem i \\<alpha> F) =\n                                     (f\n\\<in> game_sem i \\<alpha> (selectlike F f V)))\n                            (\\<lambda>V.\n                                \\<forall>i f F.\n                                   f \\<in> game_sem i \\<alpha>\n      F \\<longrightarrow>\n                                   f \\<in> game_sem i \\<alpha>\n      (selectlike F f V)))))) \\<or>\n   (\\<forall>i f F.\n       (f \\<in> game_sem i \\<alpha> F) =\n       (f \\<in> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V))))))) \\<and>\n  ((\\<forall>i f F.\n       (f \\<in> game_sem i \\<alpha> F) =\n       (f \\<in> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))))) \\<or>\n   (rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<notin> game_sem\n              (ii (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              \\<alpha>\n              (FF (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)) =\n   (rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (selectlike\n             (FF (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (rr (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V))))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "have \"rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<in> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<longrightarrow> (\\<exists>i f F. f \\<in> game_sem i \\<alpha> F \\<and> f \\<notin> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))) \\<or> rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha> \\<in> game_sem (ii (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) \\<alpha> (selectlike (FF (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (rr (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))) \\<alpha>) (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>) \\<longrightarrow>\n    (\\<exists>i f F.\n        f \\<in> game_sem i \\<alpha> F \\<and>\n        f \\<notin> game_sem i \\<alpha>\n                    (selectlike F f\n                      (VV (\\<lambda>V.\n                              \\<forall>i f F.\n                                 (f \\<in> game_sem i \\<alpha> F) =\n                                 (f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))\n                        (\\<lambda>V.\n                            \\<forall>i f F.\n                               f \\<in> game_sem i \\<alpha>\n  F \\<longrightarrow>\n                               f \\<in> game_sem i \\<alpha>\n  (selectlike F f V))))) \\<or>\n    rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (selectlike\n             (FF (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (rr (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V))))", "by blast"], ["proof (state)\nthis:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "moreover"], ["proof (state)\nthis:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "{"], ["proof (state)\nthis:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "assume \"\\<exists>i f F. f \\<in> game_sem i \\<alpha> F \\<and> f \\<notin> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))\""], ["proof (state)\nthis:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "then"], ["proof (chain)\npicking this:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V))))", "have \"\\<not> (\\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))\""], ["proof (prove)\nusing this:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i f F.\n               f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n               f \\<in> game_sem i \\<alpha>\n                        (selectlike F f\n                          (VV (\\<lambda>V.\n                                  \\<forall>i f F.\n                                     (f \\<in> game_sem i \\<alpha> F) =\n                                     (f\n\\<in> game_sem i \\<alpha> (selectlike F f V)))\n                            (\\<lambda>V.\n                                \\<forall>i f F.\n                                   f \\<in> game_sem i \\<alpha>\n      F \\<longrightarrow>\n                                   f \\<in> game_sem i \\<alpha>\n      (selectlike F f V)))))", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i f F.\n             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n             f \\<in> game_sem i \\<alpha>\n                      (selectlike F f\n                        (VV (\\<lambda>V.\n                                \\<forall>i f F.\n                                   (f \\<in> game_sem i \\<alpha> F) =\n                                   (f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))\n                          (\\<lambda>V.\n                              \\<forall>i f F.\n                                 f \\<in> game_sem i \\<alpha>\n    F \\<longrightarrow>\n                                 f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "moreover"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i f F.\n             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n             f \\<in> game_sem i \\<alpha>\n                      (selectlike F f\n                        (VV (\\<lambda>V.\n                                \\<forall>i f F.\n                                   (f \\<in> game_sem i \\<alpha> F) =\n                                   (f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))\n                          (\\<lambda>V.\n                              \\<forall>i f F.\n                                 f \\<in> game_sem i \\<alpha>\n    F \\<longrightarrow>\n                                 f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "{"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i f F.\n             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n             f \\<in> game_sem i \\<alpha>\n                      (selectlike F f\n                        (VV (\\<lambda>V.\n                                \\<forall>i f F.\n                                   (f \\<in> game_sem i \\<alpha> F) =\n                                   (f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))\n                          (\\<lambda>V.\n                              \\<forall>i f F.\n                                 f \\<in> game_sem i \\<alpha>\n    F \\<longrightarrow>\n                                 f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "assume \"(\\<not> (\\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))) \\<noteq> (\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))))\""], ["proof (state)\nthis:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "then"], ["proof (chain)\npicking this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))", "have \"{V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))} = {V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)}\""], ["proof (prove)\nusing this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "using fact"], ["proof (prove)\nusing this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "by simp"], ["proof (state)\nthis:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "}"], ["proof (state)\nthis:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f\nV)))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i f F.\n             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n             f \\<in> game_sem i \\<alpha>\n                      (selectlike F f\n                        (VV (\\<lambda>V.\n                                \\<forall>i f F.\n                                   (f \\<in> game_sem i \\<alpha> F) =\n                                   (f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))\n                          (\\<lambda>V.\n                              \\<forall>i f F.\n                                 f \\<in> game_sem i \\<alpha>\n    F \\<longrightarrow>\n                                 f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))))\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f\nV)))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "have \"(\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))) \\<or> {V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))} = {V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i f F.\n             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n             f \\<in> game_sem i \\<alpha>\n                      (selectlike F f\n                        (VV (\\<lambda>V.\n                                \\<forall>i f F.\n                                   (f \\<in> game_sem i \\<alpha> F) =\n                                   (f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))\n                          (\\<lambda>V.\n                              \\<forall>i f F.\n                                 f \\<in> game_sem i \\<alpha>\n    F \\<longrightarrow>\n                                 f \\<in> game_sem i \\<alpha>\n    (selectlike F f V)))))\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f\nV)))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. (\\<forall>i f F.\n        (f \\<in> game_sem i \\<alpha> F) =\n        (f \\<in> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))))) \\<or>\n    {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "by satx"], ["proof (state)\nthis:\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "}"], ["proof (state)\nthis:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "moreover"], ["proof (state)\nthis:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "{"], ["proof (state)\nthis:\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "assume \"\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))\""], ["proof (state)\nthis:\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "then"], ["proof (chain)\npicking this:\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))))", "have \"(\\<not> (\\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)))))) \\<noteq> (\\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f (VV (\\<lambda>V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))) (\\<lambda>V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V))))))\""], ["proof (prove)\nusing this:\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))))\n\ngoal (1 subgoal):\n 1. (\\<not> (\\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha>\n                         (selectlike F f\n                           (VV (\\<lambda>V.\n                                   \\<forall>i f F.\n(f \\<in> game_sem i \\<alpha> F) =\n(f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                             (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    f \\<in> game_sem i \\<alpha>\n       F \\<longrightarrow>\n                                    f \\<in> game_sem i \\<alpha>\n       (selectlike F f V)))))) \\<noteq>\n    (\\<forall>i f F.\n        (f \\<in> game_sem i \\<alpha> F) =\n        (f \\<in> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))))", "by blast"], ["proof (state)\nthis:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "then"], ["proof (chain)\npicking this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))", "have \"{V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))} = {V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)}\""], ["proof (prove)\nusing this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "using fact"], ["proof (prove)\nusing this:\n  (\\<not> (\\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha>\n                       (selectlike F f\n                         (VV (\\<lambda>V.\n                                 \\<forall>i f F.\n                                    (f \\<in> game_sem i \\<alpha> F) =\n                                    (f \\<in> game_sem i \\<alpha>\n        (selectlike F f V)))\n                           (\\<lambda>V.\n                               \\<forall>i f F.\n                                  f \\<in> game_sem i \\<alpha>\n     F \\<longrightarrow>\n                                  f \\<in> game_sem i \\<alpha>\n     (selectlike F f V)))))) \\<noteq>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V))))))\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "by simp"], ["proof (state)\nthis:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "}"], ["proof (state)\nthis:\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha>\n                                   (selectlike F f V))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "ultimately"], ["proof (chain)\npicking this:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha>\n                                   (selectlike F f V))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "have \"{V. \\<forall>i f F. (f \\<in> game_sem i \\<alpha> F) = (f \\<in> game_sem i \\<alpha> (selectlike F f V))} = {V. \\<forall>i f F. f \\<in> game_sem i \\<alpha> F \\<longrightarrow> f \\<in> game_sem i \\<alpha> (selectlike F f V)}\""], ["proof (prove)\nusing this:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha>\n                                   (selectlike F f V))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "using f4 f3"], ["proof (prove)\nusing this:\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>) \\<longrightarrow>\n  (\\<exists>i f F.\n      f \\<in> game_sem i \\<alpha> F \\<and>\n      f \\<notin> game_sem i \\<alpha>\n                  (selectlike F f\n                    (VV (\\<lambda>V.\n                            \\<forall>i f F.\n                               (f \\<in> game_sem i \\<alpha> F) =\n                               (f \\<in> game_sem i \\<alpha>\n   (selectlike F f V)))\n                      (\\<lambda>V.\n                          \\<forall>i f F.\n                             f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                             f \\<in> game_sem i \\<alpha>\n(selectlike F f V))))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (selectlike\n           (FF (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (rr (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           (VV (\\<lambda>V.\n                   \\<forall>i f F.\n                      (f \\<in> game_sem i \\<alpha> F) =\n                      (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             (\\<lambda>V.\n                 \\<forall>i f F.\n                    f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                    f \\<in> game_sem i \\<alpha> (selectlike F f V))))\n  \\<exists>i f F.\n     f \\<in> game_sem i \\<alpha> F \\<and>\n     f \\<notin> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))) \\<Longrightarrow>\n  (\\<forall>i f F.\n      (f \\<in> game_sem i \\<alpha> F) =\n      (f \\<in> game_sem i \\<alpha>\n                (selectlike F f\n                  (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha>\n                                    (selectlike F f V)))))) \\<or>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n  \\<forall>i f F.\n     (f \\<in> game_sem i \\<alpha> F) =\n     (f \\<in> game_sem i \\<alpha>\n               (selectlike F f\n                 (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha>\n                                   (selectlike F f V))))) \\<Longrightarrow>\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n  (\\<not> (\\<forall>i f F.\n              (f \\<in> game_sem i \\<alpha> F) =\n              (f \\<in> game_sem i \\<alpha>\n                        (selectlike F f\n                          (VV (\\<lambda>V.\n                                  \\<forall>i f F.\n                                     (f \\<in> game_sem i \\<alpha> F) =\n                                     (f\n\\<in> game_sem i \\<alpha> (selectlike F f V)))\n                            (\\<lambda>V.\n                                \\<forall>i f F.\n                                   f \\<in> game_sem i \\<alpha>\n      F \\<longrightarrow>\n                                   f \\<in> game_sem i \\<alpha>\n      (selectlike F f V)))))) \\<or>\n   (\\<forall>i f F.\n       (f \\<in> game_sem i \\<alpha> F) =\n       (f \\<in> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V))))))) \\<and>\n  ((\\<forall>i f F.\n       (f \\<in> game_sem i \\<alpha> F) =\n       (f \\<in> game_sem i \\<alpha>\n                 (selectlike F f\n                   (VV (\\<lambda>V.\n                           \\<forall>i f F.\n                              (f \\<in> game_sem i \\<alpha> F) =\n                              (f \\<in> game_sem i \\<alpha>\n  (selectlike F f V)))\n                     (\\<lambda>V.\n                         \\<forall>i f F.\n                            f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                            f \\<in> game_sem i \\<alpha>\n                                     (selectlike F f V)))))) \\<or>\n   (rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<notin> game_sem\n              (ii (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              \\<alpha>\n              (FF (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)) =\n   (rr (VV (\\<lambda>V.\n               \\<forall>i f F.\n                  (f \\<in> game_sem i \\<alpha> F) =\n                  (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n         (\\<lambda>V.\n             \\<forall>i f F.\n                f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n     \\<alpha>\n    \\<in> game_sem\n           (ii (VV (\\<lambda>V.\n                       \\<forall>i f F.\n                          (f \\<in> game_sem i \\<alpha> F) =\n                          (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                 (\\<lambda>V.\n                     \\<forall>i f F.\n                        f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                        f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n             \\<alpha>)\n           \\<alpha>\n           (selectlike\n             (FF (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (rr (VV (\\<lambda>V.\n                         \\<forall>i f F.\n                            (f \\<in> game_sem i \\<alpha> F) =\n                            (f \\<in> game_sem i \\<alpha>\n(selectlike F f V)))\n                   (\\<lambda>V.\n                       \\<forall>i f F.\n                          f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                          f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               \\<alpha>)\n             (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V))))))\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<notin> game_sem\n            (ii (VV (\\<lambda>V.\n                        \\<forall>i f F.\n                           (f \\<in> game_sem i \\<alpha> F) =\n                           (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                  (\\<lambda>V.\n                      \\<forall>i f F.\n                         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                         f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n              \\<alpha>)\n            \\<alpha>\n            (selectlike\n              (FF (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              (rr (VV (\\<lambda>V.\n                          \\<forall>i f F.\n                             (f \\<in> game_sem i \\<alpha> F) =\n                             (f \\<in> game_sem i \\<alpha>\n (selectlike F f V)))\n                    (\\<lambda>V.\n                        \\<forall>i f F.\n                           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                           f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                \\<alpha>)\n              (VV (\\<lambda>V.\n                      \\<forall>i f F.\n                         (f \\<in> game_sem i \\<alpha> F) =\n                         (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n                (\\<lambda>V.\n                    \\<forall>i f F.\n                       f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                       f \\<in> game_sem i \\<alpha>\n                                (selectlike F f V)))) \\<or>\n  rr (VV (\\<lambda>V.\n             \\<forall>i f F.\n                (f \\<in> game_sem i \\<alpha> F) =\n                (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n       (\\<lambda>V.\n           \\<forall>i f F.\n              f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n              f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n   \\<alpha>\n  \\<in> game_sem\n         (ii (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n         \\<alpha>\n         (FF (VV (\\<lambda>V.\n                     \\<forall>i f F.\n                        (f \\<in> game_sem i \\<alpha> F) =\n                        (f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n               (\\<lambda>V.\n                   \\<forall>i f F.\n                      f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n                      f \\<in> game_sem i \\<alpha> (selectlike F f V)))\n           \\<alpha>)\n\ngoal (1 subgoal):\n 1. {V. \\<forall>i f F.\n           (f \\<in> game_sem i \\<alpha> F) =\n           (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n    {V. \\<forall>i f F.\n           f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n           f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "by satx"], ["proof (state)\nthis:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "then"], ["proof (chain)\npicking this:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}", "show ?thesis"], ["proof (prove)\nusing this:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "using Bignorabimus_def"], ["proof (prove)\nusing this:\n  {V. \\<forall>i f F.\n         (f \\<in> game_sem i \\<alpha> F) =\n         (f \\<in> game_sem i \\<alpha> (selectlike F f V))} =\n  {V. \\<forall>i f F.\n         f \\<in> game_sem i \\<alpha> F \\<longrightarrow>\n         f \\<in> game_sem i \\<alpha> (selectlike F f V)}\n  Bignorabimus ?\\<alpha> =\n  {M. \\<forall>I \\<omega> X.\n         (\\<omega> \\<in> game_sem I ?\\<alpha> X) =\n         (\\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> M))}\n\ngoal (1 subgoal):\n 1. Bignorabimus \\<alpha> =\n    {M. \\<forall>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n           \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}", "by presburger"], ["proof (state)\nthis:\n  Bignorabimus \\<alpha> =\n  {M. \\<forall>I \\<omega> X.\n         \\<omega> \\<in> game_sem I \\<alpha> X \\<longrightarrow>\n         \\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Bignorabimus_empty [simp]: \"{} \\<in> Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> Bignorabimus \\<alpha>", "unfolding Bignorabimus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<in> {M. \\<forall>I \\<omega> X.\n                    (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                    (\\<omega>\n                     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "using coempty selectlike_empty"], ["proof (prove)\nusing this:\n  - {} = Denotational_Semantics.allvars\n  selectlike ?X ?\\<nu> {} = ?X\n\ngoal (1 subgoal):\n 1. {} \\<in> {M. \\<forall>I \\<omega> X.\n                    (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                    (\\<omega>\n                     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "by simp"], ["", "lemma Bignorabimus_init: \"x\\<notin>BVG(\\<alpha>) \\<Longrightarrow> {x}\\<in>Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    {x} \\<in> Bignorabimus \\<alpha>", "unfolding Bignorabimus_def BVG_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>I \\<omega> X.\n                      \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                      \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike X \\<omega>\n                                  {x})} \\<Longrightarrow>\n    {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>I \\<omega> X.\n                      \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                      \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike X \\<omega>\n                                  {x})} \\<Longrightarrow>\n    {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "assume \"x \\<notin> {x. \\<exists>I \\<omega> X. \\<omega> \\<in> game_sem I \\<alpha> X \\<and> \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})}\""], ["proof (state)\nthis:\n  x \\<notin> {x. \\<exists>I \\<omega> X.\n                    \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                    \\<omega>\n                    \\<notin> game_sem I \\<alpha>\n                              (selectlike X \\<omega> {x})}\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>I \\<omega> X.\n                      \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                      \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike X \\<omega>\n                                  {x})} \\<Longrightarrow>\n    {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "hence \"\\<not>(\\<exists>I \\<omega> X. \\<omega> \\<in> game_sem I \\<alpha> X \\<and> \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  x \\<notin> {x. \\<exists>I \\<omega> X.\n                    \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                    \\<omega>\n                    \\<notin> game_sem I \\<alpha>\n                              (selectlike X \\<omega> {x})}\n\ngoal (1 subgoal):\n 1. \\<nexists>I \\<omega> X.\n       \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n       \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})", "by simp"], ["proof (state)\nthis:\n  \\<nexists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>I \\<omega> X.\n                      \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                      \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike X \\<omega>\n                                  {x})} \\<Longrightarrow>\n    {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "hence \"\\<forall>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  \\<nexists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "using Bignorabimus_single"], ["proof (prove)\nusing this:\n  \\<nexists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})\n  game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> ?M)\n  \\<subseteq> game_sem ?I ?\\<alpha> ?X\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "by blast"], ["proof (state)\nthis:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> {x. \\<exists>I \\<omega> X.\n                      \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                      \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike X \\<omega>\n                                  {x})} \\<Longrightarrow>\n    {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "thus \"{x} \\<in> {M. \\<forall>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}\""], ["proof (prove)\nusing this:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n\ngoal (1 subgoal):\n 1. {x}\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "by simp"], ["proof (state)\nthis:\n  {x}\n  \\<in> {M. \\<forall>I \\<omega> X.\n               (\\<omega> \\<in> game_sem I \\<alpha> X) =\n               (\\<omega>\n                \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Bignorabimus is closed under union\\<close>"], ["", "lemma Bignorabimus_union: \"M\\<in>Bignorabimus \\<alpha> \\<Longrightarrow> N\\<in>Bignorabimus \\<alpha> \\<Longrightarrow> (M\\<union>N)\\<in>Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "assume a1: \"M\\<in>Bignorabimus \\<alpha>\""], ["proof (state)\nthis:\n  M \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "assume a2: \"N\\<in>Bignorabimus \\<alpha>\""], ["proof (state)\nthis:\n  N \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "have h1: \"\\<forall>I.\\<forall>\\<omega>.\\<forall>X. (\\<omega>\\<in>game_sem I \\<alpha> X) \\<longleftrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))", "using a1"], ["proof (prove)\nusing this:\n  M \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))", "using Bignorabimus_equiv Bignorabimus_single"], ["proof (prove)\nusing this:\n  M \\<in> Bignorabimus \\<alpha>\n  Bignorabimus ?\\<alpha> =\n  {M. \\<forall>I \\<omega> X.\n         \\<omega> \\<in> game_sem I ?\\<alpha> X \\<longrightarrow>\n         \\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> M)}\n  game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> ?M)\n  \\<subseteq> game_sem ?I ?\\<alpha> ?X\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))", "by blast"], ["proof (state)\nthis:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "have h2: \"\\<forall>I.\\<forall>\\<omega>.\\<forall>X. (\\<omega>\\<in>game_sem I \\<alpha> X) \\<longleftrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> N))", "using a2"], ["proof (prove)\nusing this:\n  N \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> N))", "using Bignorabimus_equiv Bignorabimus_single"], ["proof (prove)\nusing this:\n  N \\<in> Bignorabimus \\<alpha>\n  Bignorabimus ?\\<alpha> =\n  {M. \\<forall>I \\<omega> X.\n         \\<omega> \\<in> game_sem I ?\\<alpha> X \\<longrightarrow>\n         \\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> M)}\n  game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> ?M)\n  \\<subseteq> game_sem ?I ?\\<alpha> ?X\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> N))", "by blast"], ["proof (state)\nthis:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> N))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "have c: \"\\<forall>I.\\<forall>\\<omega>.\\<forall>X. (\\<omega>\\<in>game_sem I \\<alpha> X) \\<longleftrightarrow> (\\<omega>\\<in>game_sem I \\<alpha> (selectlike X \\<omega> (M\\<union>N)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega>\n        \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))", "by (metis h1 h2 selectlike_compose)"], ["proof (state)\nthis:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>M \\<in> Bignorabimus \\<alpha>;\n     N \\<in> Bignorabimus \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))", "show \"(M\\<union>N)\\<in>Bignorabimus \\<alpha>\""], ["proof (prove)\nusing this:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))\n\ngoal (1 subgoal):\n 1. M \\<union> N \\<in> Bignorabimus \\<alpha>", "unfolding Bignorabimus_def"], ["proof (prove)\nusing this:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))\n\ngoal (1 subgoal):\n 1. M \\<union> N\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "using c"], ["proof (prove)\nusing this:\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))\n  \\<forall>I \\<omega> X.\n     (\\<omega> \\<in> game_sem I \\<alpha> X) =\n     (\\<omega>\n      \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (M \\<union> N)))\n\ngoal (1 subgoal):\n 1. M \\<union> N\n    \\<in> {M. \\<forall>I \\<omega> X.\n                 (\\<omega> \\<in> game_sem I \\<alpha> X) =\n                 (\\<omega>\n                  \\<in> game_sem I \\<alpha> (selectlike X \\<omega> M))}", "by fastforce"], ["proof (state)\nthis:\n  M \\<union> N \\<in> Bignorabimus \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Bignorabimus_step: \"(\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Bignorabimus \\<alpha>) \\<Longrightarrow> (\\<Union>S)\\<in>Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M.\n        M \\<in> S \\<Longrightarrow>\n        M \\<in> Bignorabimus \\<alpha>) \\<Longrightarrow>\n    \\<Union> S \\<in> Bignorabimus \\<alpha>", "proof (cases \"S={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S = {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>\n 2. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S = {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>\n 2. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Bignorabimus \\<alpha>", "using Bignorabimus_empty"], ["proof (prove)\nusing this:\n  S = {}\n  {} \\<in> Bignorabimus ?\\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Bignorabimus \\<alpha>", "by simp"], ["proof (state)\nthis:\n  \\<Union> S \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>", "case nonem: False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                M \\<in> S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n     S \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Union> S \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "show \"\\<Union>S\\<in>Bignorabimus \\<alpha>\" if \"\\<And>M. M\\<in>S \\<Longrightarrow> M\\<in>Bignorabimus \\<alpha>\" and nonemp:\"S\\<noteq>{}\" for S"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Union> S \\<in> Bignorabimus \\<alpha>", "proof (induction rule: powerset2up_induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite S\n 2. S \\<noteq> {}\n 3. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 4. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "case Finite"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. finite S\n 2. S \\<noteq> {}\n 3. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 4. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "using Bignorabimus_finite"], ["proof (prove)\nusing this:\n  finite (Bignorabimus ?\\<alpha>)\n\ngoal (1 subgoal):\n 1. finite S", "by (meson infinite_super subset_eq that(1))"], ["proof (state)\nthis:\n  finite S\n\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "case Nonempty"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. S \\<noteq> {}\n 2. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 3. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "using nonemp"], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "case (Base M)"], ["proof (state)\nthis:\n  M \\<in> S\n  S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<lbrakk>M \\<in> S; S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>\n 2. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  M \\<in> S\n  S \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  M \\<in> S\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. M \\<in> Bignorabimus \\<alpha>", "using that"], ["proof (prove)\nusing this:\n  M \\<in> S\n  S \\<noteq> {}\n  ?M \\<in> S \\<Longrightarrow> ?M \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. M \\<in> Bignorabimus \\<alpha>", "by simp"], ["proof (state)\nthis:\n  M \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "case (Cup S)"], ["proof (state)\nthis:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       \\<lbrakk>S \\<noteq> {} \\<Longrightarrow>\n                M \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {} \\<Longrightarrow> N \\<in> Bignorabimus \\<alpha>;\n        S \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> M \\<union> N \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<union> N_ \\<in> Bignorabimus \\<alpha>", "using that Bignorabimus_union"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<Longrightarrow> S \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {} \\<Longrightarrow> N_ \\<in> Bignorabimus \\<alpha>\n  S \\<noteq> {}\n  ?M \\<in> Sa__ \\<Longrightarrow> ?M \\<in> Bignorabimus \\<alpha>\n  Sa__ \\<noteq> {}\n  \\<lbrakk>?M \\<in> Bignorabimus ?\\<alpha>;\n   ?N \\<in> Bignorabimus ?\\<alpha>\\<rbrakk>\n  \\<Longrightarrow> ?M \\<union> ?N \\<in> Bignorabimus ?\\<alpha>\n\ngoal (1 subgoal):\n 1. S \\<union> N_ \\<in> Bignorabimus \\<alpha>", "by blast"], ["proof (state)\nthis:\n  S \\<union> N_ \\<in> Bignorabimus \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>M.\n              M \\<in> ?S \\<Longrightarrow> M \\<in> Bignorabimus \\<alpha>;\n   ?S \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> \\<Union> ?S \\<in> Bignorabimus \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Lemma 13 \\<^url>\\<open>https://doi.org/10.1007/978-3-319-94205-6_15\\<close>\\<close>"], ["", "theorem boundeffect: \"(\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (-BVG(\\<alpha>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "have base: \"{x}\\<in>Bignorabimus \\<alpha>\" if a3: \"x\\<notin>BVG \\<alpha>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x} \\<in> Bignorabimus \\<alpha>", "using a3 and Bignorabimus_init"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n  ?x \\<notin> BVG ?\\<alpha> \\<Longrightarrow>\n  {?x} \\<in> Bignorabimus ?\\<alpha>\n\ngoal (1 subgoal):\n 1. {x} \\<in> Bignorabimus \\<alpha>", "by simp"], ["proof (state)\nthis:\n  ?x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n  {?x} \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "have h: \"-BVG \\<alpha> = \\<Union>{xx. \\<exists>x. xx={x} \\<and> x\\<notin>BVG \\<alpha>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}", "by blast"], ["proof (state)\nthis:\n  - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "(* finite *)"], ["proof (state)\nthis:\n  - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "have \"(-BVG \\<alpha>)\\<in>Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "using base h"], ["proof (prove)\nusing this:\n  ?x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n  {?x} \\<in> Bignorabimus \\<alpha>\n  - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\n\ngoal (1 subgoal):\n 1. - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "(*by (smt Bignorabimus_step mem_Collect_eq)*)"], ["proof (prove)\nusing this:\n  ?x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n  {?x} \\<in> Bignorabimus \\<alpha>\n  - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\n\ngoal (1 subgoal):\n 1. - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n                {x} \\<in> Bignorabimus \\<alpha>;\n     - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\\<rbrakk>\n    \\<Longrightarrow> - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "(*sledgehammer*)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n                {x} \\<in> Bignorabimus \\<alpha>;\n     - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\\<rbrakk>\n    \\<Longrightarrow> - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "obtain VV :: \"game \\<Rightarrow> variable set set \\<Rightarrow> variable set\" where\n      f1: \"\\<forall>x0 x1. (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> Bignorabimus x0) = (VV x0 x1 \\<in> x1 \\<and> VV x0 x1 \\<notin> Bignorabimus x0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>VV.\n        \\<forall>x0 x1.\n           (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> Bignorabimus x0) =\n           (VV x0 x1 \\<in> x1 \\<and>\n            VV x0 x1 \\<notin> Bignorabimus x0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> Bignorabimus x0) =\n     (VV x0 x1 \\<in> x1 \\<and> VV x0 x1 \\<notin> Bignorabimus x0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n                {x} \\<in> Bignorabimus \\<alpha>;\n     - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\\<rbrakk>\n    \\<Longrightarrow> - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "have \"VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or> VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n    \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or>\n    VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n    \\<in> Bignorabimus \\<alpha>", "by fastforce"], ["proof (state)\nthis:\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n  \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or>\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n                {x} \\<in> Bignorabimus \\<alpha>;\n     - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\\<rbrakk>\n    \\<Longrightarrow> - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n  \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or>\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>", "have \"\\<Union>{{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\""], ["proof (prove)\nusing this:\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n  \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or>\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>", "using f1"], ["proof (prove)\nusing this:\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>}\n  \\<notin> {{v} |v. v \\<notin> BVG \\<alpha>} \\<or>\n  VV \\<alpha> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n  \\<forall>x0 x1.\n     (\\<exists>v2. v2 \\<in> x1 \\<and> v2 \\<notin> Bignorabimus x0) =\n     (VV x0 x1 \\<in> x1 \\<and> VV x0 x1 \\<notin> Bignorabimus x0)\n\ngoal (1 subgoal):\n 1. \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>", "by (meson Bignorabimus_step)"], ["proof (state)\nthis:\n  \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x.\n                x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n                {x} \\<in> Bignorabimus \\<alpha>;\n     - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\\<rbrakk>\n    \\<Longrightarrow> - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "using h"], ["proof (prove)\nusing this:\n  \\<Union> {{v} |v. v \\<notin> BVG \\<alpha>} \\<in> Bignorabimus \\<alpha>\n  - BVG \\<alpha> = \\<Union> {{x} |x. x \\<notin> BVG \\<alpha>}\n\ngoal (1 subgoal):\n 1. - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "by presburger"], ["proof (state)\nthis:\n  - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "from this"], ["proof (chain)\npicking this:\n  - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>", "show ?thesis"], ["proof (prove)\nusing this:\n  - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "using Bignorabimus_def"], ["proof (prove)\nusing this:\n  - BVG \\<alpha> \\<in> Bignorabimus \\<alpha>\n  Bignorabimus ?\\<alpha> =\n  {M. \\<forall>I \\<omega> X.\n         (\\<omega> \\<in> game_sem I ?\\<alpha> X) =\n         (\\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> M))}\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega>\n     \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))", "by blast"], ["proof (state)\nthis:\n  (\\<omega> \\<in> game_sem I \\<alpha> X) =\n  (\\<omega>\n   \\<in> game_sem I \\<alpha> (selectlike X \\<omega> (- BVG \\<alpha>)))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary boundeffect_cor: \"V\\<inter>BVG(\\<alpha>)={} \\<Longrightarrow> (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<inter> BVG \\<alpha> = {} \\<Longrightarrow>\n    (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> V))", "using boundeffect"], ["proof (prove)\nusing this:\n  (?\\<omega> \\<in> game_sem ?I ?\\<alpha> ?X) =\n  (?\\<omega>\n   \\<in> game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> (- BVG ?\\<alpha>)))\n\ngoal (1 subgoal):\n 1. V \\<inter> BVG \\<alpha> = {} \\<Longrightarrow>\n    (\\<omega> \\<in> game_sem I \\<alpha> X) =\n    (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> V))", "by (metis disjoint_eq_subset_Compl selectlike_compose sup.absorb_iff2)"], ["", "subsection \\<open>Static Analysis Observations\\<close>"], ["", "lemma BVG_equiv: \"game_equiv \\<alpha> \\<beta> \\<Longrightarrow> BVG(\\<alpha>) = BVG(\\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. game_equiv \\<alpha> \\<beta> \\<Longrightarrow> BVG \\<alpha> = BVG \\<beta>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. game_equiv \\<alpha> \\<beta> \\<Longrightarrow> BVG \\<alpha> = BVG \\<beta>", "assume a: \"game_equiv \\<alpha> \\<beta>\""], ["proof (state)\nthis:\n  game_equiv \\<alpha> \\<beta>\n\ngoal (1 subgoal):\n 1. game_equiv \\<alpha> \\<beta> \\<Longrightarrow> BVG \\<alpha> = BVG \\<beta>", "show \"BVG(\\<alpha>) = BVG(\\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG \\<alpha> = BVG \\<beta>", "unfolding BVG_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n           \\<omega>\n           \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})} =\n    {x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<beta> X \\<and>\n           \\<omega> \\<notin> game_sem I \\<beta> (selectlike X \\<omega> {x})}", "using game_equiv_subst_eq[OF a]"], ["proof (prove)\nusing this:\n  ?P (game_sem ?I \\<alpha> ?X) \\<equiv> ?P (game_sem ?I \\<beta> ?X)\n\ngoal (1 subgoal):\n 1. {x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n           \\<omega>\n           \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})} =\n    {x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<beta> X \\<and>\n           \\<omega> \\<notin> game_sem I \\<beta> (selectlike X \\<omega> {x})}", "by metis"], ["proof (state)\nthis:\n  BVG \\<alpha> = BVG \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas union_or = Set.Un_iff"], ["", "lemma not_union_or: \"(x\\<notin>A\\<union>B) = (x\\<notin>A \\<and> x\\<notin>B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<notin> A \\<union> B) = (x \\<notin> A \\<and> x \\<notin> B)", "by simp"], ["", "lemma repv_selectlike_self: \"(repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) = (d=\\<omega>(x) \\<and> \\<omega> \\<in> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n    (d = \\<omega> x \\<and> \\<omega> \\<in> X)", "unfolding selectlike_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (repv \\<omega> x d\n     \\<in> {\\<omega>' \\<in> X. Vagree \\<omega>' \\<omega> {x}}) =\n    (d = \\<omega> x \\<and> \\<omega> \\<in> X)", "using Vagree_repv_self Vagree_sym"], ["proof (prove)\nusing this:\n  Vagree ?\\<omega> (repv ?\\<omega> ?x ?d) {?x} = (?d = ?\\<omega> ?x)\n  Vagree ?\\<nu> ?\\<nu>' ?V = Vagree ?\\<nu>' ?\\<nu> ?V\n\ngoal (1 subgoal):\n 1. (repv \\<omega> x d\n     \\<in> {\\<omega>' \\<in> X. Vagree \\<omega>' \\<omega> {x}}) =\n    (d = \\<omega> x \\<and> \\<omega> \\<in> X)", "by (metis (no_types, lifting) mem_Collect_eq repv_self)"], ["", "lemma repv_selectlike_other: \"x\\<noteq>y \\<Longrightarrow> (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) = (repv \\<omega> x d \\<in> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n    (repv \\<omega> x d \\<in> X)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y;\n     repv \\<omega> x d \\<in> selectlike X \\<omega> {y}\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> X\n 2. \\<lbrakk>x \\<noteq> y; repv \\<omega> x d \\<in> X\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "assume a: \"x\\<noteq>y\""], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y;\n     repv \\<omega> x d \\<in> selectlike X \\<omega> {y}\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> X\n 2. \\<lbrakk>x \\<noteq> y; repv \\<omega> x d \\<in> X\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "have h: \"{y}\\<subseteq>-{x}\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. {y} \\<subseteq> - {x}", "by simp"], ["proof (state)\nthis:\n  {y} \\<subseteq> - {x}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> y;\n     repv \\<omega> x d \\<in> selectlike X \\<omega> {y}\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> X\n 2. \\<lbrakk>x \\<noteq> y; repv \\<omega> x d \\<in> X\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "show \"(repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) \\<Longrightarrow> (repv \\<omega> x d \\<in> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. repv \\<omega> x d \\<in> selectlike X \\<omega> {y} \\<Longrightarrow>\n    repv \\<omega> x d \\<in> X", "using a selectlike_def Vagree_repv[of \\<omega> x d]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  selectlike ?X ?\\<nu> ?V = {\\<omega> \\<in> ?X. Vagree \\<omega> ?\\<nu> ?V}\n  Vagree \\<omega> (repv \\<omega> x d) (- {x})\n\ngoal (1 subgoal):\n 1. repv \\<omega> x d \\<in> selectlike X \\<omega> {y} \\<Longrightarrow>\n    repv \\<omega> x d \\<in> X", "by auto"], ["proof (state)\nthis:\n  repv \\<omega> x d \\<in> selectlike X \\<omega> {y} \\<Longrightarrow>\n  repv \\<omega> x d \\<in> X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> y; repv \\<omega> x d \\<in> X\\<rbrakk>\n    \\<Longrightarrow> repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "show \"(repv \\<omega> x d \\<in> X) \\<Longrightarrow> (repv \\<omega> x d \\<in> selectlike X \\<omega> {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. repv \\<omega> x d \\<in> X \\<Longrightarrow>\n    repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "using selectlike_def[where X=X and \\<nu>=\\<omega> and V=\\<open>-{x}\\<close>] Vagree_repv[where \\<omega>=\\<omega> and x=x and d=d]\n  selectlike_antimon[where X=X and \\<nu>=\\<omega> and V=\\<open>{y}\\<close> and W=\\<open>-{x}\\<close>, OF h] Vagree_sym[where \\<nu>=\\<open>repv \\<omega> x d\\<close> and V=\\<open>-{x}\\<close>]"], ["proof (prove)\nusing this:\n  selectlike X \\<omega> (- {x}) =\n  {\\<omega>' \\<in> X. Vagree \\<omega>' \\<omega> (- {x})}\n  Vagree \\<omega> (repv \\<omega> x d) (- {x})\n  selectlike X \\<omega> (- {x}) \\<subseteq> selectlike X \\<omega> {y}\n  Vagree (repv \\<omega> x d) ?\\<nu>' (- {x}) =\n  Vagree ?\\<nu>' (repv \\<omega> x d) (- {x})\n\ngoal (1 subgoal):\n 1. repv \\<omega> x d \\<in> X \\<Longrightarrow>\n    repv \\<omega> x d \\<in> selectlike X \\<omega> {y}", "by auto"], ["proof (state)\nthis:\n  repv \\<omega> x d \\<in> X \\<Longrightarrow>\n  repv \\<omega> x d \\<in> selectlike X \\<omega> {y}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma repv_selectlike_other_converse: \"x\\<noteq>y \\<Longrightarrow> (repv \\<omega> x d \\<in> X) = (repv \\<omega> x d \\<in> selectlike X \\<omega> {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    (repv \\<omega> x d \\<in> X) =\n    (repv \\<omega> x d \\<in> selectlike X \\<omega> {y})", "using repv_selectlike_other HOL.eq_commute"], ["proof (prove)\nusing this:\n  ?x \\<noteq> ?y \\<Longrightarrow>\n  (repv ?\\<omega> ?x ?d \\<in> selectlike ?X ?\\<omega> {?y}) =\n  (repv ?\\<omega> ?x ?d \\<in> ?X)\n  (?a = ?b) = (?b = ?a)\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    (repv \\<omega> x d \\<in> X) =\n    (repv \\<omega> x d \\<in> selectlike X \\<omega> {y})", "by blast"], ["", "lemma BVG_assign_other: \"x\\<noteq>y \\<Longrightarrow> y\\<notin>BVG(Assign x \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> y \\<notin> BVG (x := \\<theta>)", "using repv_selectlike_other_converse[where x=x and y=y]"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  (repv ?\\<omega> x ?d \\<in> ?X) =\n  (repv ?\\<omega> x ?d \\<in> selectlike ?X ?\\<omega> {y})\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> y \\<notin> BVG (x := \\<theta>)", "by simp"], ["", "lemma BVG_assign_meta: \"(\\<And>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x)) \\<Longrightarrow> BVG(Assign x \\<theta>) = {}\"\n  and \"term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> BVG(Assign x \\<theta>) = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>I \\<omega>.\n         term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n     BVG (x := \\<theta>) = {}) &&&\n    (term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n     BVG (x := \\<theta>) = {x})", "(*using repv_selectlike_self BVG_assign_other BVG_def BVG_elem*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>I \\<omega>.\n         term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n     BVG (x := \\<theta>) = {}) &&&\n    (term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n     BVG (x := \\<theta>) = {x})", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>I \\<omega>.\n        term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}\n 2. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "have fact: \"BVG(Assign x \\<theta>) \\<subseteq> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) \\<subseteq> {x}", "using BVG_assign_other"], ["proof (prove)\nusing this:\n  ?x \\<noteq> ?y \\<Longrightarrow> ?y \\<notin> BVG (?x := ?\\<theta>)\n\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) \\<subseteq> {x}", "by (metis singleton_iff subsetI)"], ["proof (state)\nthis:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n\ngoal (2 subgoals):\n 1. (\\<And>I \\<omega>.\n        term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}\n 2. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "from fact"], ["proof (chain)\npicking this:\n  BVG (x := \\<theta>) \\<subseteq> {x}", "show \"(\\<And>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x)) \\<Longrightarrow> BVG(Assign x \\<theta>) = {}\""], ["proof (prove)\nusing this:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n\ngoal (1 subgoal):\n 1. (\\<And>I \\<omega>.\n        term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}", "using BVG_def"], ["proof (prove)\nusing this:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n  BVG ?\\<alpha> =\n  {x. \\<exists>I \\<omega> X.\n         \\<omega> \\<in> game_sem I ?\\<alpha> X \\<and>\n         \\<omega> \\<notin> game_sem I ?\\<alpha> (selectlike X \\<omega> {x})}\n\ngoal (1 subgoal):\n 1. (\\<And>I \\<omega>.\n        term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}", "by simp"], ["proof (state)\nthis:\n  (\\<And>I \\<omega>.\n      term_sem I \\<theta> \\<omega> = \\<omega> x) \\<Longrightarrow>\n  BVG (x := \\<theta>) = {}\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "have h2: \"\\<exists>I \\<omega>. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> x \\<in> BVG(Assign x \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    x \\<in> BVG (x := \\<theta>)", "using repv_selectlike_self"], ["proof (prove)\nusing this:\n  (repv ?\\<omega> ?x ?d \\<in> selectlike ?X ?\\<omega> {?x}) =\n  (?d = ?\\<omega> ?x \\<and> ?\\<omega> \\<in> ?X)\n\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    x \\<in> BVG (x := \\<theta>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  x \\<in> BVG (x := \\<theta>)\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "from fact"], ["proof (chain)\npicking this:\n  BVG (x := \\<theta>) \\<subseteq> {x}", "show \"term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> BVG(Assign x \\<theta>) = {x}\""], ["proof (prove)\nusing this:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "using BVG_elem h2"], ["proof (prove)\nusing this:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n  (?x \\<in> BVG ?\\<alpha>) =\n  (\\<exists>I \\<omega> X.\n      \\<omega> \\<in> game_sem I ?\\<alpha> X \\<and>\n      \\<omega> \\<notin> game_sem I ?\\<alpha> (selectlike X \\<omega> {?x}))\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  x \\<in> BVG (x := \\<theta>)\n\ngoal (1 subgoal):\n 1. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "by blast"], ["proof (state)\nthis:\n  term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BVG_assign: \"BVG(Assign x \\<theta>) = (if (\\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x)) then {} else {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) =\n    (if \\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega> x\n     then {} else {x})", "using repv_selectlike_self repv_selectlike_other BVG_assign_other"], ["proof (prove)\nusing this:\n  (repv ?\\<omega> ?x ?d \\<in> selectlike ?X ?\\<omega> {?x}) =\n  (?d = ?\\<omega> ?x \\<and> ?\\<omega> \\<in> ?X)\n  ?x \\<noteq> ?y \\<Longrightarrow>\n  (repv ?\\<omega> ?x ?d \\<in> selectlike ?X ?\\<omega> {?y}) =\n  (repv ?\\<omega> ?x ?d \\<in> ?X)\n  ?x \\<noteq> ?y \\<Longrightarrow> ?y \\<notin> BVG (?x := ?\\<theta>)\n\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) =\n    (if \\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega> x\n     then {} else {x})", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<omega> x d X.\n                (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n                (d = \\<omega> x \\<and> \\<omega> \\<in> X);\n     \\<And>x y \\<omega> d X.\n        x \\<noteq> y \\<Longrightarrow>\n        (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n        (repv \\<omega> x d \\<in> X);\n     \\<And>x y \\<theta>.\n        x \\<noteq> y \\<Longrightarrow>\n        y \\<notin> BVG (x := \\<theta>)\\<rbrakk>\n    \\<Longrightarrow> BVG (x := \\<theta>) =\n                      (if \\<forall>I \\<omega>.\n                             term_sem I \\<theta> \\<omega> = \\<omega> x\n                       then {} else {x})", "have c0: \"BVG(Assign x \\<theta>) \\<subseteq> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) \\<subseteq> {x}", "using BVG_assign_other"], ["proof (prove)\nusing this:\n  ?x \\<noteq> ?y \\<Longrightarrow> ?y \\<notin> BVG (?x := ?\\<theta>)\n\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) \\<subseteq> {x}", "by (metis singletonI subsetI)"], ["proof (state)\nthis:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<omega> x d X.\n                (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n                (d = \\<omega> x \\<and> \\<omega> \\<in> X);\n     \\<And>x y \\<omega> d X.\n        x \\<noteq> y \\<Longrightarrow>\n        (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n        (repv \\<omega> x d \\<in> X);\n     \\<And>x y \\<theta>.\n        x \\<noteq> y \\<Longrightarrow>\n        y \\<notin> BVG (x := \\<theta>)\\<rbrakk>\n    \\<Longrightarrow> BVG (x := \\<theta>) =\n                      (if \\<forall>I \\<omega>.\n                             term_sem I \\<theta> \\<omega> = \\<omega> x\n                       then {} else {x})", "have c1: \"\\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega>(x) \\<Longrightarrow> BVG(Assign x \\<theta>) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega>.\n       term_sem I \\<theta> \\<omega> = \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}", "using BVG_assign_other"], ["proof (prove)\nusing this:\n  ?x \\<noteq> ?y \\<Longrightarrow> ?y \\<notin> BVG (?x := ?\\<theta>)\n\ngoal (1 subgoal):\n 1. \\<forall>I \\<omega>.\n       term_sem I \\<theta> \\<omega> = \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>I \\<omega>.\n     term_sem I \\<theta> \\<omega> = \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<omega> x d X.\n                (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n                (d = \\<omega> x \\<and> \\<omega> \\<in> X);\n     \\<And>x y \\<omega> d X.\n        x \\<noteq> y \\<Longrightarrow>\n        (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n        (repv \\<omega> x d \\<in> X);\n     \\<And>x y \\<theta>.\n        x \\<noteq> y \\<Longrightarrow>\n        y \\<notin> BVG (x := \\<theta>)\\<rbrakk>\n    \\<Longrightarrow> BVG (x := \\<theta>) =\n                      (if \\<forall>I \\<omega>.\n                             term_sem I \\<theta> \\<omega> = \\<omega> x\n                       then {} else {x})", "have h2: \"\\<exists>I \\<omega>. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> x \\<in> BVG(Assign x \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    x \\<in> BVG (x := \\<theta>)", "using repv_selectlike_self"], ["proof (prove)\nusing this:\n  (repv ?\\<omega> ?x ?d \\<in> selectlike ?X ?\\<omega> {?x}) =\n  (?d = ?\\<omega> ?x \\<and> ?\\<omega> \\<in> ?X)\n\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    x \\<in> BVG (x := \\<theta>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  x \\<in> BVG (x := \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<omega> x d X.\n                (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n                (d = \\<omega> x \\<and> \\<omega> \\<in> X);\n     \\<And>x y \\<omega> d X.\n        x \\<noteq> y \\<Longrightarrow>\n        (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n        (repv \\<omega> x d \\<in> X);\n     \\<And>x y \\<theta>.\n        x \\<noteq> y \\<Longrightarrow>\n        y \\<notin> BVG (x := \\<theta>)\\<rbrakk>\n    \\<Longrightarrow> BVG (x := \\<theta>) =\n                      (if \\<forall>I \\<omega>.\n                             term_sem I \\<theta> \\<omega> = \\<omega> x\n                       then {} else {x})", "have c2: \"\\<exists>I \\<omega>. term_sem I \\<theta> \\<omega> \\<noteq> \\<omega>(x) \\<Longrightarrow> BVG(Assign x \\<theta>) = {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "using c0 h2"], ["proof (prove)\nusing this:\n  BVG (x := \\<theta>) \\<subseteq> {x}\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  x \\<in> BVG (x := \\<theta>)\n\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega>.\n       term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n    BVG (x := \\<theta>) = {x}", "by blast"], ["proof (state)\nthis:\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<omega> x d X.\n                (repv \\<omega> x d \\<in> selectlike X \\<omega> {x}) =\n                (d = \\<omega> x \\<and> \\<omega> \\<in> X);\n     \\<And>x y \\<omega> d X.\n        x \\<noteq> y \\<Longrightarrow>\n        (repv \\<omega> x d \\<in> selectlike X \\<omega> {y}) =\n        (repv \\<omega> x d \\<in> X);\n     \\<And>x y \\<theta>.\n        x \\<noteq> y \\<Longrightarrow>\n        y \\<notin> BVG (x := \\<theta>)\\<rbrakk>\n    \\<Longrightarrow> BVG (x := \\<theta>) =\n                      (if \\<forall>I \\<omega>.\n                             term_sem I \\<theta> \\<omega> = \\<omega> x\n                       then {} else {x})", "from c1 and c2"], ["proof (chain)\npicking this:\n  \\<forall>I \\<omega>.\n     term_sem I \\<theta> \\<omega> = \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {}\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {x}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>I \\<omega>.\n     term_sem I \\<theta> \\<omega> = \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {}\n  \\<exists>I \\<omega>.\n     term_sem I \\<theta> \\<omega> \\<noteq> \\<omega> x \\<Longrightarrow>\n  BVG (x := \\<theta>) = {x}\n\ngoal (1 subgoal):\n 1. BVG (x := \\<theta>) =\n    (if \\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega> x\n     then {} else {x})", "by simp"], ["proof (state)\nthis:\n  BVG (x := \\<theta>) =\n  (if \\<forall>I \\<omega>. term_sem I \\<theta> \\<omega> = \\<omega> x then {}\n   else {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BVG_ODE_other: \"y\\<noteq>RVar x \\<Longrightarrow> y\\<noteq>DVar x \\<Longrightarrow> y\\<notin>BVG(ODE x \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> RVar x; y \\<noteq> DVar x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> BVG (ODE x \\<theta>)", "(*using nonBVG_rule selectlike_equal_cocond_rule solves_ODE_def*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> RVar x; y \\<noteq> DVar x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> BVG (ODE x \\<theta>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> RVar x; y \\<noteq> DVar x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> BVG (ODE x \\<theta>)", "assume yx: \"y\\<noteq>RVar x\""], ["proof (state)\nthis:\n  y \\<noteq> RVar x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> RVar x; y \\<noteq> DVar x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> BVG (ODE x \\<theta>)", "assume yxp: \"y\\<noteq>DVar x\""], ["proof (state)\nthis:\n  y \\<noteq> DVar x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<noteq> RVar x; y \\<noteq> DVar x\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> BVG (ODE x \\<theta>)", "show \"y\\<notin>BVG(ODE x \\<theta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> BVG (ODE x \\<theta>)", "proof (rule nonBVG_inc_rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "fix I \\<omega> X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "assume \"\\<omega> \\<in> game_sem I (ODE x \\<theta>) X\""], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I (ODE x \\<theta>) X\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "then"], ["proof (chain)\npicking this:\n  \\<omega> \\<in> game_sem I (ODE x \\<theta>) X", "have \"\\<exists>F T. Vagree \\<omega> (F(0)) (-{DVar x}) \\<and> F(T) \\<in> X \\<and> solves_ODE I F x \\<theta>\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I (ODE x \\<theta>) X\n\ngoal (1 subgoal):\n 1. \\<exists>F T.\n       Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n       F T \\<in> X \\<and> solves_ODE I F x \\<theta>", "by simp"], ["proof (state)\nthis:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> X \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "then"], ["proof (chain)\npicking this:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> X \\<and> solves_ODE I F x \\<theta>", "obtain F T where \"Vagree \\<omega> (F(0)) (-{DVar x}) \\<and> F(T) \\<in> X \\<and> solves_ODE I F x \\<theta>\""], ["proof (prove)\nusing this:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> X \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. (\\<And>F T.\n        Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n        F T \\<in> X \\<and> solves_ODE I F x \\<theta> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> X \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "then"], ["proof (chain)\npicking this:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> X \\<and> solves_ODE I F x \\<theta>", "have \"Vagree \\<omega> (F(0)) (-{DVar x}) \\<and> F(T) \\<in> (selectlike X \\<omega> {y}) \\<and> solves_ODE I F x \\<theta>\""], ["proof (prove)\nusing this:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> X \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n    F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>", "using yx yxp solves_Vagree Vagree_def similar_selectlike_mem"], ["proof (prove)\nusing this:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> X \\<and> solves_ODE I F x \\<theta>\n  y \\<noteq> RVar x\n  y \\<noteq> DVar x\n  solves_ODE ?I ?F ?x ?\\<theta> \\<Longrightarrow>\n  Vagree (?F ?\\<zeta>) (?F 0) (- {RVar ?x, DVar ?x})\n  Vagree ?\\<nu> ?\\<nu>' ?V \\<equiv>\n  \\<forall>i. i \\<in> ?V \\<longrightarrow> ?\\<nu> i = ?\\<nu>' i\n  Vagree ?\\<nu> ?\\<omega> ?V \\<Longrightarrow>\n  (?\\<nu> \\<in> selectlike ?X ?\\<omega> ?V) = (?\\<nu> \\<in> ?X)\n\ngoal (1 subgoal):\n 1. Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n    F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>", "by auto"], ["proof (state)\nthis:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "then"], ["proof (chain)\npicking this:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>", "have \"\\<exists>F T. Vagree \\<omega> (F(0)) (-{DVar x}) \\<and> F(T) \\<in> (selectlike X \\<omega> {y}) \\<and> solves_ODE I F x \\<theta>\""], ["proof (prove)\nusing this:\n  Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n  F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<exists>F T.\n       Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n       F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>", "by blast"], ["proof (state)\nthis:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (ODE x \\<theta>) X \\<Longrightarrow>\n       \\<omega>\n       \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "then"], ["proof (chain)\npicking this:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>", "show \"\\<omega> \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})\""], ["proof (prove)\nusing this:\n  \\<exists>F T.\n     Vagree \\<omega> (F 0) (- {DVar x}) \\<and>\n     F T \\<in> selectlike X \\<omega> {y} \\<and> solves_ODE I F x \\<theta>\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})", "by simp"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I (ODE x \\<theta>) (selectlike X \\<omega> {y})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<notin> BVG (ODE x \\<theta>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This result could be strengthened to a conditional equality based on the RHS values\\<close>"], ["", "lemma BVG_ODE: \"BVG(ODE x \\<theta>) \\<subseteq> {RVar x,DVar x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (ODE x \\<theta>) \\<subseteq> {RVar x, DVar x}", "using BVG_ODE_other"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<noteq> RVar ?x; ?y \\<noteq> DVar ?x\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> BVG (ODE ?x ?\\<theta>)\n\ngoal (1 subgoal):\n 1. BVG (ODE x \\<theta>) \\<subseteq> {RVar x, DVar x}", "by blast"], ["", "lemma BVG_test: \"BVG(Test \\<phi>) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (? \\<phi>) = {}", "unfolding BVG_def game_sem.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> fml_sem I \\<phi> \\<inter> X \\<and>\n           \\<omega>\n           \\<notin> fml_sem I \\<phi> \\<inter> selectlike X \\<omega> {x}} =\n    {}", "by auto"], ["", "lemma BVG_choice: \"BVG(Choice \\<alpha> \\<beta>) \\<subseteq> BVG(\\<alpha>) \\<union> BVG(\\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (\\<alpha> \\<union>\\<union> \\<beta>)\n    \\<subseteq> BVG \\<alpha> \\<union> BVG \\<beta>", "unfolding BVG_def game_sem.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. \\<exists>I \\<omega> X.\n           \\<omega>\n           \\<in> game_sem I \\<alpha> X \\<union> game_sem I \\<beta> X \\<and>\n           \\<omega>\n           \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}) \\<union>\n                    game_sem I \\<beta> (selectlike X \\<omega> {x})}\n    \\<subseteq> {x. \\<exists>I \\<omega> X.\n                       \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                       \\<omega>\n                       \\<notin> game_sem I \\<alpha>\n                                 (selectlike X \\<omega> {x})} \\<union>\n                {x. \\<exists>I \\<omega> X.\n                       \\<omega> \\<in> game_sem I \\<beta> X \\<and>\n                       \\<omega>\n                       \\<notin> game_sem I \\<beta>\n                                 (selectlike X \\<omega> {x})}", "using not_union_or"], ["proof (prove)\nusing this:\n  (?x \\<notin> ?A \\<union> ?B) = (?x \\<notin> ?A \\<and> ?x \\<notin> ?B)\n\ngoal (1 subgoal):\n 1. {x. \\<exists>I \\<omega> X.\n           \\<omega>\n           \\<in> game_sem I \\<alpha> X \\<union> game_sem I \\<beta> X \\<and>\n           \\<omega>\n           \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}) \\<union>\n                    game_sem I \\<beta> (selectlike X \\<omega> {x})}\n    \\<subseteq> {x. \\<exists>I \\<omega> X.\n                       \\<omega> \\<in> game_sem I \\<alpha> X \\<and>\n                       \\<omega>\n                       \\<notin> game_sem I \\<alpha>\n                                 (selectlike X \\<omega> {x})} \\<union>\n                {x. \\<exists>I \\<omega> X.\n                       \\<omega> \\<in> game_sem I \\<beta> X \\<and>\n                       \\<omega>\n                       \\<notin> game_sem I \\<beta>\n                                 (selectlike X \\<omega> {x})}", "by auto"], ["", "(*proof-\n  have f1: \"\\<And>\\<omega> I X. (\\<omega> \\<in> game_sem I \\<alpha> X \\<union> game_sem I \\<beta> X) = \n  (\\<omega> \\<in> game_sem I \\<alpha> X \\<or> \\<omega> \\<in> game_sem I \\<beta> X)\" by (rule union_or)\n  have f2: \"\\<And>\\<omega> I X. (\\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}) \\<union> game_sem I \\<beta> (selectlike X \\<omega> {x})) =\n  (\\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}) \\<and> \\<omega> \\<notin> game_sem I \\<beta> (selectlike X \\<omega> {x}))\" by (rule not_union_or)\n  let ?lhs = \"{x. \\<exists>I \\<omega> X.\n           \\<omega> \\<in> game_sem I \\<alpha> X \\<union> game_sem I \\<beta> X \\<and>\n           \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x}) \\<union> game_sem I \\<beta> (selectlike X \\<omega> {x})}\"\n  let ?rhs = \"{x. \\<exists>I \\<omega> X. \\<omega> \\<in> game_sem I \\<alpha> X \\<and> \\<omega> \\<notin> game_sem I \\<alpha> (selectlike X \\<omega> {x})} \\<union>\n       {x. \\<exists>I \\<omega> X. \\<omega> \\<in> game_sem I \\<beta> X \\<and> \\<omega> \\<notin> game_sem I \\<beta> (selectlike X \\<omega> {x})}\"\n  show \"?lhs\\<subseteq>?rhs\" using f1 f2 by auto\nqed*)"], ["", "lemma select_nonBV: \"x\\<notin>BVG(\\<alpha>) \\<Longrightarrow> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x} = selectlike (game_sem I \\<alpha> X) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega>\n     {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n 2. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "show \"selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x} \\<subseteq> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega>\n     {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> X) \\<omega> {x}", "using game_sem_mono selectlike_shrinks selectlike_antimon Bignorabimus_single"], ["proof (prove)\nusing this:\n  mono (game_sem ?I ?\\<alpha>)\n  selectlike ?X ?\\<nu> ?V \\<subseteq> ?X\n  ?V \\<subseteq> ?W \\<Longrightarrow>\n  selectlike ?X ?\\<nu> ?W \\<subseteq> selectlike ?X ?\\<nu> ?V\n  game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> ?M)\n  \\<subseteq> game_sem ?I ?\\<alpha> ?X\n\ngoal (1 subgoal):\n 1. selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega>\n     {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> X) \\<omega> {x}", "by (metis selectlike_union sup.absorb_iff1)"], ["proof (state)\nthis:\n  selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x}\n  \\<subseteq> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "assume nonbound: \"x\\<notin>BVG(\\<alpha>)\""], ["proof (state)\nthis:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha>", "have fact: \"{x}\\<inter>BVG(\\<alpha>)={}\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. {x} \\<inter> BVG \\<alpha> = {}", "by auto"], ["proof (state)\nthis:\n  {x} \\<inter> BVG \\<alpha> = {}\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow>\n    selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "show \"selectlike (game_sem I \\<alpha> X) \\<omega> {x} \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n    \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> selectlike (game_sem I \\<alpha> X) \\<omega>\n                 {x} \\<Longrightarrow>\n       xa \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "fix \\<mu>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> selectlike (game_sem I \\<alpha> X) \\<omega>\n                 {x} \\<Longrightarrow>\n       xa \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "assume \"\\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\""], ["proof (state)\nthis:\n  \\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> selectlike (game_sem I \\<alpha> X) \\<omega>\n                 {x} \\<Longrightarrow>\n       xa \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "(* \"V\\<inter>BVG(\\<alpha>)={} \\<Longrightarrow> (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> V))\" *)"], ["proof (state)\nthis:\n  \\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> selectlike (game_sem I \\<alpha> X) \\<omega>\n                 {x} \\<Longrightarrow>\n       xa \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  \\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}", "have \"\\<mu> \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega> {x}\""], ["proof (prove)\nusing this:\n  \\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<mu>\n    \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n           {x}", "using boundeffect_cor[where \\<omega>=\\<mu> and V=\\<open>{x}\\<close> and \\<alpha>=\\<alpha>, OF fact] nonbound"], ["proof (prove)\nusing this:\n  \\<mu> \\<in> selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n  (\\<mu> \\<in> game_sem ?I \\<alpha> ?X) =\n  (\\<mu> \\<in> game_sem ?I \\<alpha> (selectlike ?X \\<mu> {x}))\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<mu>\n    \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n           {x}", "by (metis ComplD ComplI co_selectlike not_union_or)"], ["proof (state)\nthis:\n  \\<mu>\n  \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n         {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> selectlike (game_sem I \\<alpha> X) \\<omega>\n                 {x} \\<Longrightarrow>\n       xa \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n                 \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  \\<mu>\n  \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n         {x}", "show \"\\<mu> \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x})) \\<omega> {x}\""], ["proof (prove)\nusing this:\n  \\<mu>\n  \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n         {x}\n\ngoal (1 subgoal):\n 1. \\<mu>\n    \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n           \\<omega> {x}", "using selectlike_Vagree selectlike_def"], ["proof (prove)\nusing this:\n  \\<mu>\n  \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<mu> {x})) \\<omega>\n         {x}\n  Vagree ?\\<nu> ?\\<omega> ?V \\<Longrightarrow>\n  selectlike ?X ?\\<nu> ?V = selectlike ?X ?\\<omega> ?V\n  selectlike ?X ?\\<nu> ?V = {\\<omega> \\<in> ?X. Vagree \\<omega> ?\\<nu> ?V}\n\ngoal (1 subgoal):\n 1. \\<mu>\n    \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n           \\<omega> {x}", "by fastforce"], ["proof (state)\nthis:\n  \\<mu>\n  \\<in> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n         \\<omega> {x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  selectlike (game_sem I \\<alpha> X) \\<omega> {x}\n  \\<subseteq> selectlike (game_sem I \\<alpha> (selectlike X \\<omega> {x}))\n               \\<omega> {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BVG_compose: \"BVG(Compose \\<alpha> \\<beta>) \\<subseteq> BVG(\\<alpha>) \\<union> BVG(\\<beta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (\\<alpha> ;; \\<beta>) \\<subseteq> BVG \\<alpha> \\<union> BVG \\<beta>", "(*unfolding BVG_def game_sem.simps using game_union union_or not_union_or selectlike_shrinks monotone selectlike_compose*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (\\<alpha> ;; \\<beta>) \\<subseteq> BVG \\<alpha> \\<union> BVG \\<beta>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> BVG (\\<alpha> ;; \\<beta>) \\<Longrightarrow>\n       x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> BVG (\\<alpha> ;; \\<beta>) \\<Longrightarrow>\n       x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>", "assume a: \"x\\<in>BVG(Compose \\<alpha> \\<beta>)\""], ["proof (state)\nthis:\n  x \\<in> BVG (\\<alpha> ;; \\<beta>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> BVG (\\<alpha> ;; \\<beta>) \\<Longrightarrow>\n       x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>", "show \"x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "assume \"x\\<notin>BVG \\<alpha> \\<union> BVG(\\<beta>)\""], ["proof (state)\nthis:\n  x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta>", "have n\\<beta>: \"x\\<notin>BVG(\\<beta>)\"\n    and n\\<alpha>: \"x\\<notin>BVG(\\<alpha>)\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<beta> &&& x \\<notin> BVG \\<alpha>", "by simp_all"], ["proof (state)\nthis:\n  x \\<notin> BVG \\<beta>\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from a"], ["proof (chain)\npicking this:\n  x \\<in> BVG (\\<alpha> ;; \\<beta>)", "have \"\\<exists>I.\\<exists>\\<omega>.\\<exists>X. \\<omega> \\<in> game_sem I (Compose \\<alpha> \\<beta>) X \\<and> \\<omega> \\<notin> game_sem I (Compose \\<alpha> \\<beta>) (selectlike X \\<omega> {x})\""], ["proof (prove)\nusing this:\n  x \\<in> BVG (\\<alpha> ;; \\<beta>)\n\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega> X.\n       \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n       \\<omega>\n       \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})", "by simp"], ["proof (state)\nthis:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n     \\<omega>\n     \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n     \\<omega>\n     \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})", "obtain I \\<omega> X where adef: \"\\<omega> \\<in> game_sem I (Compose \\<alpha> \\<beta>) X \\<and> \\<omega> \\<notin> game_sem I (Compose \\<alpha> \\<beta>) (selectlike X \\<omega> {x})\""], ["proof (prove)\nusing this:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n     \\<omega>\n     \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. (\\<And>\\<omega> I X.\n        \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n        \\<omega>\n        \\<notin> game_sem I (\\<alpha> ;; \\<beta>)\n                  (selectlike X \\<omega> {x}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n  \\<omega>\n  \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from adef"], ["proof (chain)\npicking this:\n  \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n  \\<omega>\n  \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})", "have a1: \"\\<omega> \\<in> game_sem I \\<alpha> (game_sem I \\<beta> X)\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n  \\<omega>\n  \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (game_sem I \\<beta> X)", "by simp"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (game_sem I \\<beta> X)\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from adef"], ["proof (chain)\npicking this:\n  \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n  \\<omega>\n  \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})", "have a2: \"\\<omega> \\<notin> game_sem I \\<alpha> (game_sem I \\<beta> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I (\\<alpha> ;; \\<beta>) X \\<and>\n  \\<omega>\n  \\<notin> game_sem I (\\<alpha> ;; \\<beta>) (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (game_sem I \\<beta> (selectlike X \\<omega> {x}))", "by simp"], ["proof (state)\nthis:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "let ?Y = \"selectlike X \\<omega> {x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from n\\<alpha>"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha>", "have n\\<alpha>c: \"\\<And>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "using BVG_nonelem"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n  (?x \\<notin> BVG ?\\<alpha>) =\n  (\\<forall>I \\<omega> X.\n      (\\<omega> \\<in> game_sem I ?\\<alpha> X) =\n      (\\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> {?x})))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "by simp"], ["proof (state)\nthis:\n  (?\\<omega> \\<in> game_sem ?I \\<alpha> ?X) =\n  (?\\<omega> \\<in> game_sem ?I \\<alpha> (selectlike ?X ?\\<omega> {x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from n\\<beta>"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<beta>", "have n\\<beta>c: \"\\<And>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<beta> X) = (\\<omega> \\<in> game_sem I \\<beta> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<beta>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<beta> X) =\n       (\\<omega> \\<in> game_sem I \\<beta> (selectlike X \\<omega> {x}))", "using BVG_nonelem"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<beta>\n  (?x \\<notin> BVG ?\\<alpha>) =\n  (\\<forall>I \\<omega> X.\n      (\\<omega> \\<in> game_sem I ?\\<alpha> X) =\n      (\\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> {?x})))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<beta> X) =\n       (\\<omega> \\<in> game_sem I \\<beta> (selectlike X \\<omega> {x}))", "by simp"], ["proof (state)\nthis:\n  (?\\<omega> \\<in> game_sem ?I \\<beta> ?X) =\n  (?\\<omega> \\<in> game_sem ?I \\<beta> (selectlike ?X ?\\<omega> {x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "have c1: \"\\<omega> \\<in> game_sem I \\<alpha> (selectlike (game_sem I \\<beta> X) \\<omega> {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<in> game_sem I \\<alpha>\n           (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "using a1 n\\<alpha>c[where I=I and \\<omega>=\\<omega> and X=\\<open>game_sem I \\<beta> X\\<close>]"], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (game_sem I \\<beta> X)\n  (\\<omega> \\<in> game_sem I \\<alpha> (game_sem I \\<beta> X)) =\n  (\\<omega>\n   \\<in> game_sem I \\<alpha>\n          (selectlike (game_sem I \\<beta> X) \\<omega> {x}))\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<in> game_sem I \\<alpha>\n           (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "by blast"], ["proof (state)\nthis:\n  \\<omega>\n  \\<in> game_sem I \\<alpha> (selectlike (game_sem I \\<beta> X) \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "have c2: \"\\<omega> \\<notin> game_sem I \\<alpha> (selectlike (game_sem I \\<beta> ?Y) \\<omega> {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n                \\<omega> {x})", "using a2 n\\<alpha>c[where I=I and \\<omega>=\\<omega> and X=\\<open>game_sem I \\<beta> ?Y\\<close>]"], ["proof (prove)\nusing this:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n  (\\<omega>\n   \\<in> game_sem I \\<alpha>\n          (game_sem I \\<beta> (selectlike X \\<omega> {x}))) =\n  (\\<omega>\n   \\<in> game_sem I \\<alpha>\n          (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n            \\<omega> {x}))\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n                \\<omega> {x})", "by blast"], ["proof (state)\nthis:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n              \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "from c2"], ["proof (chain)\npicking this:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n              \\<omega> {x})", "have c3: \"\\<omega> \\<notin> game_sem I \\<alpha> (selectlike (game_sem I \\<beta> X) \\<omega> {x})\""], ["proof (prove)\nusing this:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n              \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "using n\\<beta> selectlike_Vagree"], ["proof (prove)\nusing this:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n              \\<omega> {x})\n  x \\<notin> BVG \\<beta>\n  Vagree ?\\<nu> ?\\<omega> ?V \\<Longrightarrow>\n  selectlike ?X ?\\<nu> ?V = selectlike ?X ?\\<omega> ?V\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<omega>\n             \\<notin> game_sem I \\<alpha>\n                       (selectlike\n                         (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n                         \\<omega> {x});\n     x \\<notin> BVG \\<beta>;\n     \\<And>\\<nu> \\<omega> V X.\n        Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n        selectlike X \\<nu> V = selectlike X \\<omega> V\\<rbrakk>\n    \\<Longrightarrow> \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike (game_sem I \\<beta> X) \\<omega>\n                                  {x})", "have \"selectlike (game_sem I \\<beta> ?Y) \\<omega> {x} = selectlike (game_sem I \\<beta> X) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike (game_sem I \\<beta> X) \\<omega> {x}", "using n\\<beta>"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<beta>\n\ngoal (1 subgoal):\n 1. selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike (game_sem I \\<beta> X) \\<omega> {x}", "by (rule select_nonBV)"], ["proof (state)\nthis:\n  selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x})) \\<omega> {x} =\n  selectlike (game_sem I \\<beta> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<omega>\n             \\<notin> game_sem I \\<alpha>\n                       (selectlike\n                         (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n                         \\<omega> {x});\n     x \\<notin> BVG \\<beta>;\n     \\<And>\\<nu> \\<omega> V X.\n        Vagree \\<nu> \\<omega> V \\<Longrightarrow>\n        selectlike X \\<nu> V = selectlike X \\<omega> V\\<rbrakk>\n    \\<Longrightarrow> \\<omega>\n                      \\<notin> game_sem I \\<alpha>\n                                (selectlike (game_sem I \\<beta> X) \\<omega>\n                                  {x})", "thus ?thesis"], ["proof (prove)\nusing this:\n  selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x})) \\<omega> {x} =\n  selectlike (game_sem I \\<beta> X) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "using c2"], ["proof (prove)\nusing this:\n  selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x})) \\<omega> {x} =\n  selectlike (game_sem I \\<beta> X) \\<omega> {x}\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> (selectlike X \\<omega> {x}))\n              \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (game_sem I \\<beta> X) \\<omega> {x})", "by simp"], ["proof (state)\nthis:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> X) \\<omega> {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> X) \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<union> BVG \\<beta> \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using c1 c3 n\\<beta>c[where I=I]"], ["proof (prove)\nusing this:\n  \\<omega>\n  \\<in> game_sem I \\<alpha> (selectlike (game_sem I \\<beta> X) \\<omega> {x})\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (game_sem I \\<beta> X) \\<omega> {x})\n  (?\\<omega> \\<in> game_sem I \\<beta> ?X) =\n  (?\\<omega> \\<in> game_sem I \\<beta> (selectlike ?X ?\\<omega> {x}))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha> \\<union> BVG \\<beta>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The converse inclusion does not hold generally, because\n   \\<open>BVG(x := x+1; x:= x-1) = {} \\<noteq> BVG(x := x+1) \\<union> BVG(x := x-1) = {x}\\<close>\\<close>"], ["", "lemma \"BVG(Compose (Assign x (Plus (Var x) (Number 1))) (Assign x (Plus (Var x) (Number (-1))))) \n    \\<noteq> BVG(Assign x (Plus (Var x) (Number 1))) \\<union> BVG(Assign x (Plus (Var x) (Number (-1))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG (x := Plus (Var x) (Number 1) ;;\n         x := Plus (Var x) (Number (- 1))) \\<noteq>\n    BVG (x := Plus (Var x) (Number 1)) \\<union>\n    BVG (x := Plus (Var x) (Number (- 1)))", "unfolding BVG_def selectlike_def repv_def Vagree_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {xa.\n     \\<exists>I \\<omega> X.\n        \\<omega>\n        \\<in> game_sem I\n               (x := Plus (Var x) (Number 1) ;;\n                x := Plus (Var x) (Number (- 1)))\n               X \\<and>\n        \\<omega>\n        \\<notin> game_sem I\n                  (x := Plus (Var x) (Number 1) ;;\n                   x := Plus (Var x) (Number (- 1)))\n                  {\\<omega>' \\<in> X.\n                   \\<forall>i.\n                      i \\<in> {xa} \\<longrightarrow>\n                      \\<omega>' i = \\<omega> i}} \\<noteq>\n    {xa.\n     \\<exists>I \\<omega> X.\n        \\<omega> \\<in> game_sem I (x := Plus (Var x) (Number 1)) X \\<and>\n        \\<omega>\n        \\<notin> game_sem I (x := Plus (Var x) (Number 1))\n                  {\\<omega>' \\<in> X.\n                   \\<forall>i.\n                      i \\<in> {xa} \\<longrightarrow>\n                      \\<omega>' i = \\<omega> i}} \\<union>\n    {xa.\n     \\<exists>I \\<omega> X.\n        \\<omega>\n        \\<in> game_sem I (x := Plus (Var x) (Number (- 1))) X \\<and>\n        \\<omega>\n        \\<notin> game_sem I (x := Plus (Var x) (Number (- 1)))\n                  {\\<omega>' \\<in> X.\n                   \\<forall>i.\n                      i \\<in> {xa} \\<longrightarrow>\n                      \\<omega>' i = \\<omega> i}}", "by auto"], ["", "lemma BVG_loop: \"BVG(Loop \\<alpha>) \\<subseteq> BVG(\\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG \\<alpha>** \\<subseteq> BVG \\<alpha>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>** \\<Longrightarrow> x \\<in> BVG \\<alpha>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>** \\<Longrightarrow> x \\<in> BVG \\<alpha>", "assume a: \"x\\<in>BVG(Loop \\<alpha>)\""], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha>**\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>** \\<Longrightarrow> x \\<in> BVG \\<alpha>", "show \"x \\<in> BVG(\\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow> False", "assume \"\\<not> (x \\<in> BVG(\\<alpha>))\""], ["proof (state)\nthis:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha>", "have n\\<alpha>: \"x\\<notin>BVG \\<alpha>\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha>", "by simp"], ["proof (state)\nthis:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow> False", "from n\\<alpha>"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha>", "have n\\<alpha>c: \"\\<And>I \\<omega> X. (\\<omega> \\<in> game_sem I \\<alpha> X) = (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "using BVG_nonelem"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n  (?x \\<notin> BVG ?\\<alpha>) =\n  (\\<forall>I \\<omega> X.\n      (\\<omega> \\<in> game_sem I ?\\<alpha> X) =\n      (\\<omega> \\<in> game_sem I ?\\<alpha> (selectlike X \\<omega> {?x})))\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha> X) =\n       (\\<omega> \\<in> game_sem I \\<alpha> (selectlike X \\<omega> {x}))", "by simp"], ["proof (state)\nthis:\n  (?\\<omega> \\<in> game_sem ?I \\<alpha> ?X) =\n  (?\\<omega> \\<in> game_sem ?I \\<alpha> (selectlike ?X ?\\<omega> {x}))\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow> False", "have \"x\\<notin>BVG(Loop \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha>**", "(*using BVG_nonelem*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha>**", "proof (rule nonBVG_rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "fix I \\<omega> X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "let ?f = \"\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "let ?g = \"\\<lambda>Y. (selectlike X \\<omega> {x}) \\<union> game_sem I \\<alpha> Y\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "let ?R = \"\\<lambda>Z Y. selectlike Z \\<omega> {x} = selectlike Y \\<omega> {x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "have \"?R (lfp ?f) (lfp ?g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)) \\<omega>\n     {x} =\n    selectlike\n     (lfp (\\<lambda>Y.\n              selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y))\n     \\<omega> {x}", "proof (induction rule: lfp_lockstep_induct[where f=\\<open>?f\\<close> and g=\\<open>?g\\<close> and R=\\<open>?R\\<close>])"], ["proof (state)\ngoal (4 subgoals):\n 1. mono (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n 2. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n 3. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 4. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "case monof"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. mono (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n 2. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n 3. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 4. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)", "using game_sem_loop_fixpoint_mono"], ["proof (prove)\nusing this:\n  mono (\\<lambda>Z. ?X \\<union> game_sem ?I ?\\<alpha> Z)\n\ngoal (1 subgoal):\n 1. mono (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)", "by simp"], ["proof (state)\nthis:\n  mono (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n\ngoal (3 subgoals):\n 1. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n 2. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 3. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n 2. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 3. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "case monog"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n 2. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 3. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)", "using game_sem_loop_fixpoint_mono"], ["proof (prove)\nusing this:\n  mono (\\<lambda>Z. ?X \\<union> game_sem ?I ?\\<alpha> Z)\n\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)", "by simp"], ["proof (state)\nthis:\n  mono\n   (\\<lambda>Y. selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y)\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 2. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 2. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "case (step A B)"], ["proof (state)\nthis:\n  A \\<subseteq> lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n  B \\<subseteq> lfp (\\<lambda>Y.\n                        selectlike X \\<omega> {x} \\<union>\n                        game_sem I \\<alpha> Y)\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 2. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  A \\<subseteq> lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n  B \\<subseteq> lfp (\\<lambda>Y.\n                        selectlike X \\<omega> {x} \\<union>\n                        game_sem I \\<alpha> Y)\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "have IH: \"selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\""], ["proof (prove)\nusing this:\n  A \\<subseteq> lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)\n  B \\<subseteq> lfp (\\<lambda>Y.\n                        selectlike X \\<omega> {x} \\<union>\n                        game_sem I \\<alpha> Y)\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "by simp"], ["proof (state)\nthis:\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (2 subgoals):\n 1. \\<And>A B.\n       \\<lbrakk>A \\<subseteq> lfp (\\<lambda>Z.\nX \\<union> game_sem I \\<alpha> Z);\n        B \\<subseteq> lfp (\\<lambda>Y.\n                              selectlike X \\<omega> {x} \\<union>\n                              game_sem I \\<alpha> Y);\n        selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\\<rbrakk>\n       \\<Longrightarrow> selectlike (X \\<union> game_sem I \\<alpha> A)\n                          \\<omega> {x} =\n                         selectlike\n                          (selectlike X \\<omega> {x} \\<union>\n                           game_sem I \\<alpha> B)\n                          \\<omega> {x}\n 2. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "show ?case"], ["proof (prove)\nusing this:\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "(* using selectlike_union n\\<alpha> select_nonBV IH by (smt insert_absorb2 insert_def selectlike_compose singleton_conv smt_solver=cvc4)  *)"], ["proof (prove)\nusing this:\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "have \"selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} = selectlike X \\<omega> {x} \\<union> selectlike (game_sem I \\<alpha> A) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> A) \\<omega> {x}", "using selectlike_union"], ["proof (prove)\nusing this:\n  selectlike (?X \\<union> ?Y) ?\\<nu> ?V =\n  selectlike ?X ?\\<nu> ?V \\<union> selectlike ?Y ?\\<nu> ?V\n\ngoal (1 subgoal):\n 1. selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> A) \\<omega> {x}", "by simp"], ["proof (state)\nthis:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> A) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "also"], ["proof (state)\nthis:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> A) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "have \"... = selectlike X \\<omega> {x} \\<union> selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n     {x}", "using n\\<alpha> select_nonBV"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>\n  ?x \\<notin> BVG ?\\<alpha> \\<Longrightarrow>\n  selectlike (game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> {?x}))\n   ?\\<omega> {?x} =\n  selectlike (game_sem ?I ?\\<alpha> ?X) ?\\<omega> {?x}\n\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n     {x}", "by blast"], ["proof (state)\nthis:\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "also"], ["proof (state)\nthis:\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "have \"... = selectlike X \\<omega> {x} \\<union> selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega>\n     {x}", "using IH"], ["proof (prove)\nusing this:\n  selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega>\n     {x}", "by simp"], ["proof (state)\nthis:\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n   {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "also"], ["proof (state)\nthis:\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike A \\<omega> {x})) \\<omega>\n   {x} =\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "have \"... = selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B) \\<omega> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "using selectlike_union n\\<alpha> select_nonBV"], ["proof (prove)\nusing this:\n  selectlike (?X \\<union> ?Y) ?\\<nu> ?V =\n  selectlike ?X ?\\<nu> ?V \\<union> selectlike ?Y ?\\<nu> ?V\n  x \\<notin> BVG \\<alpha>\n  ?x \\<notin> BVG ?\\<alpha> \\<Longrightarrow>\n  selectlike (game_sem ?I ?\\<alpha> (selectlike ?X ?\\<omega> {?x}))\n   ?\\<omega> {?x} =\n  selectlike (game_sem ?I ?\\<alpha> ?X) ?\\<omega> {?x}\n\ngoal (1 subgoal):\n 1. selectlike X \\<omega> {x} \\<union>\n    selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega>\n     {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "by auto"], ["proof (state)\nthis:\n  selectlike X \\<omega> {x} \\<union>\n  selectlike (game_sem I \\<alpha> (selectlike B \\<omega> {x})) \\<omega>\n   {x} =\n  selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n   \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike A \\<omega> {x} = selectlike B \\<omega> {x} \\<Longrightarrow>\n    selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "finally"], ["proof (chain)\npicking this:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n   \\<omega> {x}", "show \"selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} = selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B) \\<omega> {x}\""], ["proof (prove)\nusing this:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n   \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n    selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n     \\<omega> {x}", "."], ["proof (state)\nthis:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n   \\<omega> {x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  selectlike (X \\<union> game_sem I \\<alpha> A) \\<omega> {x} =\n  selectlike (selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> B)\n   \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "case (union M)"], ["proof (state)\nthis:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "have IH: \"\\<forall>(A,B)\\<in>M. selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\""], ["proof (prove)\nusing this:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<forall>(A, B)\\<in>M.\n       selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "."], ["proof (state)\nthis:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>M.\n       \\<forall>(A, B)\\<in>M.\n          selectlike A \\<omega> {x} =\n          selectlike B \\<omega> {x} \\<Longrightarrow>\n       selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n       selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "then"], ["proof (chain)\npicking this:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n\ngoal (1 subgoal):\n 1. selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n    selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "using fst_proj_mem[where M=M] snd_proj_mem[where M=M] \n        selectlike_Sup[where \\<nu>=\\<omega> and V=\\<open>{x}\\<close>] sup_corr_eq_chain"], ["proof (prove)\nusing this:\n  \\<forall>(A, B)\\<in>M.\n     selectlike A \\<omega> {x} = selectlike B \\<omega> {x}\n  (?A \\<in> fst_proj M) = (\\<exists>B. (?A, B) \\<in> M)\n  (?B \\<in> snd_proj M) = (\\<exists>A. (A, ?B) \\<in> M)\n  selectlike (\\<Union> ?M) \\<omega> {x} =\n  \\<Union> {selectlike X \\<omega> {x} |X. X \\<in> ?M}\n  \\<forall>(A, B)\\<in>?M. ?f A = ?g B \\<Longrightarrow>\n  Sup {?f A |A. A \\<in> fst_proj ?M} = Sup {?g B |B. B \\<in> snd_proj ?M}\n\ngoal (1 subgoal):\n 1. selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n    selectlike (\\<Union> (snd_proj M)) \\<omega> {x}", "by simp"], ["proof (state)\nthis:\n  selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n  selectlike (\\<Union> (snd_proj M)) \\<omega> {x}\n\ngoal:\nNo subgoals!", "(*proof-\n          have \"selectlike (\\<Union>fst_proj M) \\<omega> {x} = \\<Union>{selectlike A \\<omega> {x} | A. A\\<in>fst_proj M}\" using selectlike_Sup by simp\n          also have \"... = \\<Union>{selectlike B \\<omega> {x} | B. B\\<in>snd_proj M}\" using sup_corr_eq_chain[OF IH] by simp\n          also have \"... = selectlike (\\<Union>snd_proj M) \\<omega> {x}\" using selectlike_Sup by simp\n          finally show \"selectlike (\\<Union>fst_proj M) \\<omega> {x} = selectlike (\\<Union>snd_proj M) \\<omega> {x}\" .\n        qed*)"], ["proof (state)\nthis:\n  selectlike (\\<Union> (fst_proj M)) \\<omega> {x} =\n  selectlike (\\<Union> (snd_proj M)) \\<omega> {x}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  selectlike (lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)) \\<omega>\n   {x} =\n  selectlike\n   (lfp (\\<lambda>Y.\n            selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y))\n   \\<omega> {x}\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega> X.\n       (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n       (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "from this"], ["proof (chain)\npicking this:\n  selectlike (lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)) \\<omega>\n   {x} =\n  selectlike\n   (lfp (\\<lambda>Y.\n            selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y))\n   \\<omega> {x}", "show \"(\\<omega> \\<in> game_sem I (Loop \\<alpha>) X) = (\\<omega> \\<in> game_sem I (Loop \\<alpha>) (selectlike X \\<omega> {x}))\""], ["proof (prove)\nusing this:\n  selectlike (lfp (\\<lambda>Z. X \\<union> game_sem I \\<alpha> Z)) \\<omega>\n   {x} =\n  selectlike\n   (lfp (\\<lambda>Y.\n            selectlike X \\<omega> {x} \\<union> game_sem I \\<alpha> Y))\n   \\<omega> {x}\n\ngoal (1 subgoal):\n 1. (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n    (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))", "by (metis (mono_tags) game_sem.simps(6) lfp_def selectlike_self)"], ["proof (state)\nthis:\n  (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n  (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))\n\ngoal:\nNo subgoals!", "(*by (simp add: selectlike_self game_sem_loop_back)*)"], ["proof (state)\nthis:\n  (\\<omega> \\<in> game_sem I \\<alpha>** X) =\n  (\\<omega> \\<in> game_sem I \\<alpha>** (selectlike X \\<omega> {x}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> BVG \\<alpha>**\n\ngoal (1 subgoal):\n 1. x \\<notin> BVG \\<alpha> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> BVG \\<alpha>**", "show \"False\""], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>**\n\ngoal (1 subgoal):\n 1. False", "using a"], ["proof (prove)\nusing this:\n  x \\<notin> BVG \\<alpha>**\n  x \\<in> BVG \\<alpha>**\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma BVG_dual: \"BVG(Dual \\<alpha>) \\<subseteq> BVG(\\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG \\<alpha>^d \\<subseteq> BVG \\<alpha>", "(*unfolding game_sem.simps using BVG_elem selectlike_co_selectlike co_selectlike selectlike_complement selectlike_antimon*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. BVG \\<alpha>^d \\<subseteq> BVG \\<alpha>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>^d \\<Longrightarrow> x \\<in> BVG \\<alpha>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>^d \\<Longrightarrow> x \\<in> BVG \\<alpha>", "assume a: \"x\\<in>BVG(Dual \\<alpha>)\""], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha>^d\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> BVG \\<alpha>^d \\<Longrightarrow> x \\<in> BVG \\<alpha>", "show \"x\\<in>BVG \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "from a"], ["proof (chain)\npicking this:\n  x \\<in> BVG \\<alpha>^d", "have \"\\<exists>I.\\<exists>\\<omega>.\\<exists>X. \\<omega> \\<in> game_sem I (Dual \\<alpha>) X \\<and> \\<omega> \\<notin> game_sem I (Dual \\<alpha>) (selectlike X \\<omega> {x})\""], ["proof (prove)\nusing this:\n  x \\<in> BVG \\<alpha>^d\n\ngoal (1 subgoal):\n 1. \\<exists>I \\<omega> X.\n       \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n       \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})", "by simp"], ["proof (state)\nthis:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "then"], ["proof (chain)\npicking this:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})", "obtain I \\<omega> X where adef: \"\\<omega> \\<in> game_sem I (Dual \\<alpha>) X \\<and> \\<omega> \\<notin> game_sem I (Dual \\<alpha>) (selectlike X \\<omega> {x})\""], ["proof (prove)\nusing this:\n  \\<exists>I \\<omega> X.\n     \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n     \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. (\\<And>\\<omega> I X.\n        \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n        \\<omega>\n        \\<notin> game_sem I \\<alpha>^d\n                  (selectlike X \\<omega> {x}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n  \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "from adef"], ["proof (chain)\npicking this:\n  \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n  \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})", "have a1: \"\\<omega> \\<notin> game_sem I \\<alpha> (- X)\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n  \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega> \\<notin> game_sem I \\<alpha> (- X)", "by simp"], ["proof (state)\nthis:\n  \\<omega> \\<notin> game_sem I \\<alpha> (- X)\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "from adef"], ["proof (chain)\npicking this:\n  \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n  \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})", "have a2: \"\\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})\""], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha>^d X \\<and>\n  \\<omega> \\<notin> game_sem I \\<alpha>^d (selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})", "by simp"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "let ?Y = \"- selectlike X \\<omega> {x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "have f1: \"\\<omega> \\<in> game_sem I \\<alpha> ?Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})", "by (rule a2)"], ["proof (state)\nthis:\n  \\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "have f2: \"\\<omega> \\<notin> game_sem I \\<alpha> (selectlike ?Y \\<omega> {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (- selectlike X \\<omega> {x}) \\<omega> {x})", "using a1 selectlike_co_selectlike"], ["proof (prove)\nusing this:\n  \\<omega> \\<notin> game_sem I \\<alpha> (- X)\n  selectlike (- selectlike ?X ?\\<nu> ?V) ?\\<nu> ?V =\n  selectlike (- ?X) ?\\<nu> ?V\n\ngoal (1 subgoal):\n 1. \\<omega>\n    \\<notin> game_sem I \\<alpha>\n              (selectlike (- selectlike X \\<omega> {x}) \\<omega> {x})", "by (metis (no_types, lifting) selectlike_shrinks monotone dual_order.trans subset_Compl_singleton)"], ["proof (state)\nthis:\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (- selectlike X \\<omega> {x}) \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "show \"x\\<in>BVG(\\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "using f1 f2"], ["proof (prove)\nusing this:\n  \\<omega> \\<in> game_sem I \\<alpha> (- selectlike X \\<omega> {x})\n  \\<omega>\n  \\<notin> game_sem I \\<alpha>\n            (selectlike (- selectlike X \\<omega> {x}) \\<omega> {x})\n\ngoal (1 subgoal):\n 1. x \\<in> BVG \\<alpha>", "by auto"], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> BVG \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}