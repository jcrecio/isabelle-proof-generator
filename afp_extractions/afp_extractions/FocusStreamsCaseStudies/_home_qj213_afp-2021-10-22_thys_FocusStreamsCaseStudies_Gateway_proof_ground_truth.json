{"file_name": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies/Gateway_proof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies", "problem_names": ["lemma Gateway_L1:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [init_state]\"\n      and h7:\"req (Suc t) = [init]\"\n      and h8:\"lose (Suc t) = [False]\"\n      and h9:\"lose (Suc (Suc t)) = [False]\"\n  shows \"ack (Suc (Suc t)) = [connection_ok]\"", "lemma Gateway_L2:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [connection_ok]\"\n      and h7:\"req (Suc t) = [send]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"i (Suc (t + d))  = inf_last_ti dt t\"", "lemma Gateway_L3:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [connection_ok]\"\n      and h7:\"req (Suc t) = [send]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"ack (Suc t) = [sending_data]\"", "lemma Gateway_L4:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack (t + d) = [sending_data]\"\n      and h7:\"a (Suc t) = [sc_ack]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"vc (Suc (t + d)) = [vc_com]\"", "lemma Gateway_L5:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack (t + d) = [sending_data]\"\n      and h7:\"\\<forall> j \\<le> Suc d. a (t+j) = []\"\n      and h8:\"\\<forall>k\\<le> (d + d). lose (t + k) = [False]\" \n  shows \"j \\<le> d \\<longrightarrow> ack (t+d+j) = [sending_data]\"", "lemma Gateway_L6_induction:\n assumes h1:\"msg (Suc 0) req\"\n     and h2:\"msg (Suc 0) x\" \n     and h3:\"msg (Suc 0) stop\"\n     and h4:\"ts lose\"\n     and h5:\"\\<forall>j\\<le> k. lose (t + j) = [False]\" \n     and h6:\"\\<forall>m \\<le> k. req (t + m) \\<noteq> [send]\"\n     and h7:\"ack t = [connection_ok]\"\n     and h8:\"Sample req dt x1 stop lose ack i1 vc\" \n     and h9:\"Delay x2 i1 d x1 i2\"\n     and h10:\"Loss lose x i2 x2 i\"\n     and h11:\"m \\<le> k\"\n shows \"ack (t + m) = [connection_ok]\"", "lemma Gateway_L6:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n     and \"\\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\"\n     and \"\\<forall>j\\<le>k. lose (t + j) = [False]\"\n     and \"ack t = [connection_ok]\"\n     and \"msg (Suc 0) req\"\n     and \"msg (Suc 0) stop\"\n     and \"msg (Suc 0) a\"\n     and \"ts lose\"\n shows \"\\<forall>m\\<le>k. ack (t + m) = [connection_ok]\"", "lemma Gateway_L6a:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n     and \"\\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\"\n     and \"\\<forall>j\\<le>k. lose (t + 2 + j) = [False]\"\n     and \"ack (t + 2) = [connection_ok]\"\n     and \"msg (Suc 0) req\"\n     and \"msg (Suc 0) stop\"\n     and \"msg (Suc 0) a\"\n     and \"ts lose\"\n shows \"\\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\"", "lemma aux_k3req:\nassumes h1:\"\\<forall>m<k + 3. req (t + m) \\<noteq> [send]\"\n       and h2:\"m \\<le> k\"\nshows \"req (Suc (Suc (t + m))) \\<noteq> [send]\"", "lemma aux3lose:\nassumes h1:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\"\n       and h2:\"j \\<le> k\"\nshows \"lose (Suc (Suc (t + j))) = [False]\"", "lemma Gateway_L7:\nassumes h1:\"Gateway req dt a stop lose d ack i vc\"\n     and h2:\"ts lose\"\n     and h3:\"msg (Suc 0) a\"\n     and h4:\"msg (Suc 0) stop\" \n     and h5:\"msg (Suc 0) req\"\n     and h6:\"req (Suc t) = [init]\"\n     and h7:\"\\<forall>m < (k + 3). req (t + m) \\<noteq> [send]\"\n     and h8:\"req (t + 3 + k) = [send]\"\n     and h9:\"ack t = [init_state]\"\n     and h10:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\"\n     and h11:\"\\<forall> t1 \\<le> t. req t1 = []\"\nshows \"\\<forall> t2 < (t + 3 + k + d). i t2 = []\"", "lemma Gateway_L8a:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\" \n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) stop\"\n      and h4:\"msg (Suc 0) a\"\n      and h5:\"ts lose\"\n      and h6:\"\\<forall>j\\<le>2 * d. lose (t + j) = [False]\" \n      and h7:\"ack t = [sending_data]\"\n      and h8:\"\\<forall>t3 \\<le> t + d. a t3 = []\"\n      and h9:\"x \\<le> d + d\"\n  shows \"ack (t + x) = [sending_data]\"", "lemma Gateway_L8:\nassumes \"Gateway req dt a stop lose d ack i vc\" \n       and \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"\\<forall>j\\<le>2 * d. lose (t + j) = [False]\" \n       and \"ack t = [sending_data]\"\n       and \"\\<forall>t3 \\<le> t + d. a t3 = []\"\nshows \"\\<forall>x \\<le> d + d. ack (t + x) = [sending_data]\"", "lemma Gateway_L0:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n shows     \"GatewayReq req dt a stop lose d ack i vc\"", "lemma GatewayReq_L1:\n  assumes h1:\"msg (Suc 0) req\"\n      and h2:\"msg (Suc 0) stop\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"ts lose\"\n      and h6:\"req (t + 3 + k) = [send]\" \n      and h7:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n      and h9:\"\\<forall>m\\<le> k. ack (t + 2 + m) = [connection_ok]\"\n      and h10:\"GatewayReq req dt a stop lose d ack i vc\"\n shows \"ack (t + 3 + k) = [sending_data]\"", "lemma GatewayReq_L2:\n assumes  h1:\"msg (Suc 0) req\"\n      and h2:\"msg (Suc 0) stop\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"ts lose\"\n      and h5:\"GatewayReq req dt a stop lose d ack i vc\"\n      and h6:\"req (t + 3 + k) = [send]\"\n      and h7:\"inf_last_ti dt t \\<noteq> []\"\n      and h8:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n      and h9:\"\\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\"\n  shows \"i (t + 3 + k + d) \\<noteq> []\"", "lemma GatewaySystem_L1aux:\nassumes \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"msg (Suc 0) req \\<and> msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow> \n        (\\<forall>t. (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and> lose (Suc t) = [False] \\<and> \n          lose (Suc (Suc t)) = [False] \\<longrightarrow>\n          ack (Suc (Suc t)) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and> req (Suc t) = [send] \\<and> \n         (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc (t + d)) = inf_last_ti dt t \\<and> ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and> a (Suc t) = [sc_ack] \\<and> \n          (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc (t + d)) = [vc_com]))\"\nshows  \"ack (t + 3 + k + d + d) = [sending_data] \\<and>\n          a (Suc (t + 3 + k + d)) = [sc_ack] \\<and> \n         (\\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n         vc (Suc (t + 3 + k + d + d)) = [vc_com]\"", "lemma GatewaySystem_L3aux:\nassumes \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"msg (Suc 0) req \\<and> msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow> \n        (\\<forall>t. (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and> lose (Suc t) = [False] \\<and> \n          lose (Suc (Suc t)) = [False] \\<longrightarrow>\n          ack (Suc (Suc t)) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and> req (Suc t) = [send] \\<and> \n         (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc (t + d)) = inf_last_ti dt t \\<and> ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and> a (Suc t) = [sc_ack] \\<and> \n          (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc (t + d)) = [vc_com]))\"\nshows \"ack (t + 2 + k) = [connection_ok] \\<and>\n         req (Suc (t + 2 + k)) = [send] \\<and> \n         (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n         i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\"", "lemma GatewaySystem_L1:\n assumes  h2:\"ServiceCenter i a\" \n     and h3:\"GatewayReq req dt a stop lose d ack i vc\" \n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h9:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\" \n     and h11:\"i (t + 3 + k + d) \\<noteq> []\"\n     and h14:\"\\<forall>x \\<le> d + d. ack (t + 3 + k + x) = [sending_data]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\"", "lemma aux4lose1:\nassumes h1:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n       and h2:\"j \\<le> k\"\nshows \"lose (t + (2::nat) + j) = [False]\"", "lemma aux4lose2:\nassumes \"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n       and \"3 + k + d \\<le> 2 * d + (4 + k)\"\nshows \"lose (t + (3::nat) + k + d) = [False]\"", "lemma aux4req:\nassumes h1:\"\\<forall> (m::nat) \\<le> k + 2. req (t + m) \\<noteq> [send]\"\n      and h2:\"m \\<le> k\"\n      and h3:\"req (t + 2 + m) = [send]\" shows \"False\"", "lemma GatewaySystem_L2:\n assumes h1:\"Gateway req dt a stop lose d ack i vc\" \n     and h2:\"ServiceCenter i a\" \n     and h3:\"GatewayReq req dt a stop lose d ack i vc\" \n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h8:\"ack t = [init_state]\"\n     and h9:\"req (Suc t) = [init]\" \n     and h10:\"\\<forall>t1\\<le>t. req t1 = []\"\n     and h11:\"\\<forall>m \\<le> k + 2. req (t + m) \\<noteq> [send]\"\n     and h12:\"req (t + 3 + k) = [send]\" \n     and h13:\"inf_last_ti dt t \\<noteq> []\"\n     and h14:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\"", "lemma GatewaySystem_L3:\n assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n     and h2:\"ServiceCenter i a\"\n     and h3:\"GatewayReq req dt a stop lose d ack i vc\"\n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h8: \"dt (Suc t) \\<noteq> [] \\<or> dt (Suc (Suc t)) \\<noteq> []\"\n     and h9: \"ack t = [init_state]\"\n     and h10:\"req (Suc t) = [init]\"\n     and h11:\"\\<forall>t1\\<le>t. req t1 = []\"\n     and h12:\"\\<forall>m \\<le> k + 2. req (t + m) \\<noteq> [send]\" \n     and h13:\"req (t + 3 + k) = [send]\"\n     and h14:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\"", "lemma GatewaySystem_L0:\n assumes \"GatewaySystem req dt stop lose d ack vc\"\n shows    \"GatewaySystemReq req dt stop lose d ack vc\""], "translations": [["", "lemma Gateway_L1:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [init_state]\"\n      and h7:\"req (Suc t) = [init]\"\n      and h8:\"lose (Suc t) = [False]\"\n      and h9:\"lose (Suc (Suc t)) = [False]\"\n  shows \"ack (Suc (Suc t)) = [connection_ok]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y\n    where a1:\"Sample req dt x stop lose ack i1 vc\"\n      and a2:\"Delay y i1 d x i2\"\n      and a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from a2 and a3 and h3"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a", "have sg1:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from a1 and h2 and h4 and sg1"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x", "obtain st buffer where a4:\n    \"tiTable_SampleT req x stop lose \n        (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer) ack\n         i1 vc st\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from a4 and h5 and sg1 and h4"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop", "have sg2:\"st t =  hd (ack t)\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop\n\ngoal (1 subgoal):\n 1. st t = hd (ack t)", "by (simp add: tiTable_ack_st_hd)"], ["proof (state)\nthis:\n  st t = hd (ack t)\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from h6 and sg1 and sg2 and h4"], ["proof (chain)\npicking this:\n  ack t = [init_state]\n  msg (Suc 0) x\n  st t = hd (ack t)\n  msg (Suc 0) stop", "have sg3:\n   \"(fin_inf_append [init_state] st) (Suc t) = init_state\""], ["proof (prove)\nusing this:\n  ack t = [init_state]\n  msg (Suc 0) x\n  st t = hd (ack t)\n  msg (Suc 0) stop\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc t) = init_state", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc t) = init_state\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from a4 and h7 and sg3"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  req (Suc t) = [init]\n  fin_inf_append [init_state] st (Suc t) = init_state", "have sg4:\"st (Suc t) = call\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  req (Suc t) = [init]\n  fin_inf_append [init_state] st (Suc t) = init_state\n\ngoal (1 subgoal):\n 1. st (Suc t) = call", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  st (Suc t) = call\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from sg4"], ["proof (chain)\npicking this:\n  st (Suc t) = call", "have sg5:\"(fin_inf_append [init_state] st) (Suc (Suc t)) = call\""], ["proof (prove)\nusing this:\n  st (Suc t) = call\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc (Suc t)) = call", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc (Suc t)) = call\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "from a4 and sg5 and assms"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  fin_inf_append [init_state] st (Suc (Suc t)) = call\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack t = [init_state]\n  req (Suc t) = [init]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]", "show ?thesis"], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  fin_inf_append [init_state] st (Suc (Suc t)) = call\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack t = [init_state]\n  req (Suc t) = [init]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc t)) = [connection_ok]", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  ack (Suc (Suc t)) = [connection_ok]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L2:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [connection_ok]\"\n      and h7:\"req (Suc t) = [send]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"i (Suc (t + d))  = inf_last_ti dt t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y\n    where a1:\"Sample req dt x stop lose ack i1 vc\"\n      and a2:\"Delay y i1 d x i2\"\n      and a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from a2 and a3 and h3"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a", "have sg1:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from a1 and h2 and h4 and sg1"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x", "obtain st buffer where a4:\n    \"Sample_L req dt x stop lose (fin_inf_append [init_state] st) \n         (fin_inf_append [[]] buffer) ack i1 vc st buffer\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st buffer \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def, auto)"], ["proof (state)\nthis:\n  Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st buffer\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from a4"], ["proof (chain)\npicking this:\n  Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st buffer", "have sg2:\"buffer t = inf_last_ti dt t\""], ["proof (prove)\nusing this:\n  Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st buffer\n\ngoal (1 subgoal):\n 1. buffer t = inf_last_ti dt t", "by (simp add: Sample_L_buffer)"], ["proof (state)\nthis:\n  buffer t = inf_last_ti dt t\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from assms and a1 and a4 and sg1 and sg2"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack t = [connection_ok]\n  req (Suc t) = [send]\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n  Sample req dt x stop lose ack i1 vc\n  Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st buffer\n  msg (Suc 0) x\n  buffer t = inf_last_ti dt t", "have sg3:\"i1 (Suc t) =  buffer t\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack t = [connection_ok]\n  req (Suc t) = [send]\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n  Sample req dt x stop lose ack i1 vc\n  Sample_L req dt x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st buffer\n  msg (Suc 0) x\n  buffer t = inf_last_ti dt t\n\ngoal (1 subgoal):\n 1. i1 (Suc t) = buffer t", "by (simp add: Sample_L_i1_buffer)"], ["proof (state)\nthis:\n  i1 (Suc t) = buffer t\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from a2 and sg1"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  msg (Suc 0) x", "have sg4:\"i2 ((Suc t) + d)  =  i1 (Suc t)\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. i2 (Suc t + d) = i1 (Suc t)", "by (simp add: Delay_def)"], ["proof (state)\nthis:\n  i2 (Suc t + d) = i1 (Suc t)\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from a3 and h8"], ["proof (chain)\npicking this:\n  Loss lose a i2 y i\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]", "have sg5:\"i ((Suc t) + d)  =  i2 ((Suc t) + d)\""], ["proof (prove)\nusing this:\n  Loss lose a i2 y i\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n\ngoal (1 subgoal):\n 1. i (Suc t + d) = i2 (Suc t + d)", "by (simp add: Loss_def, auto)"], ["proof (state)\nthis:\n  i (Suc t + d) = i2 (Suc t + d)\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "from sg5 and sg4 and sg3 and sg2"], ["proof (chain)\npicking this:\n  i (Suc t + d) = i2 (Suc t + d)\n  i2 (Suc t + d) = i1 (Suc t)\n  i1 (Suc t) = buffer t\n  buffer t = inf_last_ti dt t", "show ?thesis"], ["proof (prove)\nusing this:\n  i (Suc t + d) = i2 (Suc t + d)\n  i2 (Suc t + d) = i1 (Suc t)\n  i1 (Suc t) = buffer t\n  buffer t = inf_last_ti dt t\n\ngoal (1 subgoal):\n 1. i (Suc (t + d)) = inf_last_ti dt t", "by simp"], ["proof (state)\nthis:\n  i (Suc (t + d)) = inf_last_ti dt t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L3:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack t = [connection_ok]\"\n      and h7:\"req (Suc t) = [send]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"ack (Suc t) = [sending_data]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y\n    where a1:\"Sample req dt x stop lose ack i1 vc\"\n      and a2:\"Delay y i1 d x i2\"\n      and a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from a2 and a3 and h3"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a", "have sg1:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from a1 and h2 and h4 and sg1"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x", "obtain st buffer where a4:\n    \"tiTable_SampleT req x stop lose \n        (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer) ack\n         i1 vc st\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from a4 and h5 and sg1 and h4"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop", "have sg2:\"st t =  hd (ack t)\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop\n\ngoal (1 subgoal):\n 1. st t = hd (ack t)", "by (simp add: tiTable_ack_st_hd)"], ["proof (state)\nthis:\n  st t = hd (ack t)\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from sg2 and h6"], ["proof (chain)\npicking this:\n  st t = hd (ack t)\n  ack t = [connection_ok]", "have sg3:\"(fin_inf_append [init_state] st) (Suc t) = connection_ok\""], ["proof (prove)\nusing this:\n  st t = hd (ack t)\n  ack t = [connection_ok]\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc t) = connection_ok", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc t) = connection_ok\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from h8"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]", "have sg4:\"lose (Suc t) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc t) = [False]", "by auto"], ["proof (state)\nthis:\n  lose (Suc t) = [False]\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from a4 and sg3 and sg4 and h7"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  fin_inf_append [init_state] st (Suc t) = connection_ok\n  lose (Suc t) = [False]\n  req (Suc t) = [send]", "have sg5:\"st (Suc t) = sending_data\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  fin_inf_append [init_state] st (Suc t) = connection_ok\n  lose (Suc t) = [False]\n  req (Suc t) = [send]\n\ngoal (1 subgoal):\n 1. st (Suc t) = sending_data", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  st (Suc t) = sending_data\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from a4 and h2 and sg1 and h4 and h5"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose", "have sg6:\"ack (Suc t) = [st (Suc t)]\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [st (Suc t)]", "by (simp add: tiTable_ack_st)"], ["proof (state)\nthis:\n  ack (Suc t) = [st (Suc t)]\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "from sg5 and sg6"], ["proof (chain)\npicking this:\n  st (Suc t) = sending_data\n  ack (Suc t) = [st (Suc t)]", "show ?thesis"], ["proof (prove)\nusing this:\n  st (Suc t) = sending_data\n  ack (Suc t) = [st (Suc t)]\n\ngoal (1 subgoal):\n 1. ack (Suc t) = [sending_data]", "by simp"], ["proof (state)\nthis:\n  ack (Suc t) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L4:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack (t + d) = [sending_data]\"\n      and h7:\"a (Suc t) = [sc_ack]\"\n      and h8:\"\\<forall>k\\<le>Suc d. lose (t + k) = [False]\" \n  shows \"vc (Suc (t + d)) = [vc_com]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y\n    where a1:\"Sample req dt x stop lose ack i1 vc\"\n       and a2:\"Delay y i1 d x i2\"\n       and a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from a2 and a3 and h3"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a", "have sg1:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from a1 and h2 and h4 and sg1"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x", "obtain st buffer where a4:\n    \"tiTable_SampleT req x stop lose \n        (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer) ack\n         i1 vc st\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from a4 and h5 and sg1 and h4"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop", "have sg2:\"st (t+d) =  hd (ack (t+d))\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop\n\ngoal (1 subgoal):\n 1. st (t + d) = hd (ack (t + d))", "by (simp add: tiTable_ack_st_hd)"], ["proof (state)\nthis:\n  st (t + d) = hd (ack (t + d))\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from sg2 and h6"], ["proof (chain)\npicking this:\n  st (t + d) = hd (ack (t + d))\n  ack (t + d) = [sending_data]", "have sg3:\"(fin_inf_append [init_state] st) (Suc (t+d)) = sending_data\""], ["proof (prove)\nusing this:\n  st (t + d) = hd (ack (t + d))\n  ack (t + d) = [sending_data]\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc (t + d)) = sending_data", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc (t + d)) = sending_data\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from a3 and h8"], ["proof (chain)\npicking this:\n  Loss lose a i2 y i\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]", "have sg4:\"y (Suc t)  =  a (Suc t)\""], ["proof (prove)\nusing this:\n  Loss lose a i2 y i\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n\ngoal (1 subgoal):\n 1. y (Suc t) = a (Suc t)", "by (simp add: Loss_def, auto)"], ["proof (state)\nthis:\n  y (Suc t) = a (Suc t)\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from a2 and sg1"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  msg (Suc 0) x", "have sg5:\"x ((Suc t) + d)  =  y (Suc t)\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. x (Suc t + d) = y (Suc t)", "by (simp add: Delay_def)"], ["proof (state)\nthis:\n  x (Suc t + d) = y (Suc t)\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from sg5 and sg4 and h7"], ["proof (chain)\npicking this:\n  x (Suc t + d) = y (Suc t)\n  y (Suc t) = a (Suc t)\n  a (Suc t) = [sc_ack]", "have sg6:\" x (Suc (t + d)) = [sc_ack]\""], ["proof (prove)\nusing this:\n  x (Suc t + d) = y (Suc t)\n  y (Suc t) = a (Suc t)\n  a (Suc t) = [sc_ack]\n\ngoal (1 subgoal):\n 1. x (Suc (t + d)) = [sc_ack]", "by simp"], ["proof (state)\nthis:\n  x (Suc (t + d)) = [sc_ack]\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from h8"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]", "have sg7:\"lose (Suc (t + d)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>Suc d. lose (t + k) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (t + d)) = [False]", "by auto"], ["proof (state)\nthis:\n  lose (Suc (t + d)) = [False]\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "from sg6 and a4 and h2 and sg1 and h4 and h5 and sg7 and sg3"], ["proof (chain)\npicking this:\n  x (Suc (t + d)) = [sc_ack]\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  lose (Suc (t + d)) = [False]\n  fin_inf_append [init_state] st (Suc (t + d)) = sending_data", "show ?thesis"], ["proof (prove)\nusing this:\n  x (Suc (t + d)) = [sc_ack]\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  lose (Suc (t + d)) = [False]\n  fin_inf_append [init_state] st (Suc (t + d)) = sending_data\n\ngoal (1 subgoal):\n 1. vc (Suc (t + d)) = [vc_com]", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  vc (Suc (t + d)) = [vc_com]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L5:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"msg (Suc 0) stop\" \n      and h5:\"ts lose\"\n      and h6:\"ack (t + d) = [sending_data]\"\n      and h7:\"\\<forall> j \\<le> Suc d. a (t+j) = []\"\n      and h8:\"\\<forall>k\\<le> (d + d). lose (t + k) = [False]\" \n  shows \"j \\<le> d \\<longrightarrow> ack (t+d+j) = [sending_data]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y\n    where a1:\"Sample req dt x stop lose ack i1 vc\"\n       and a2:\"Delay y i1 d x i2\"\n       and a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "from a2 and a3 and h3"], ["proof (chain)\npicking this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a", "have sg1:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) a\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "from a1 and h2 and h4 and sg1"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x", "obtain st buffer where a4:\n    \"tiTable_SampleT req x stop lose \n        (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer) ack\n         i1 vc st\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "from assms and a2 and a3 and sg1 and a4"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st", "show ?thesis"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n     msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> d \\<longrightarrow>\n                      ack (t + d + 0) = [sending_data]\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n                 msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n                 ack (t + d) = [sending_data];\n                 \\<forall>j\\<le>Suc d. a (t + j) = [];\n                 \\<forall>k\\<le>d + d. lose (t + k) = [False];\n                 Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n                 tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n                \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                                  ack (t + d + j) = [sending_data];\n        Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n        msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n        ack (t + d) = [sending_data]; \\<forall>j\\<le>Suc d. a (t + j) = [];\n        \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n        Loss lose a i2 y i; msg (Suc 0) x;\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                         ack (t + d + Suc j) = [sending_data]", "case 0"], ["proof (state)\nthis:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n     msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> d \\<longrightarrow>\n                      ack (t + d + 0) = [sending_data]\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n                 msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n                 ack (t + d) = [sending_data];\n                 \\<forall>j\\<le>Suc d. a (t + j) = [];\n                 \\<forall>k\\<le>d + d. lose (t + k) = [False];\n                 Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n                 tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n                \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                                  ack (t + d + j) = [sending_data];\n        Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n        msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n        ack (t + d) = [sending_data]; \\<forall>j\\<le>Suc d. a (t + j) = [];\n        \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n        Loss lose a i2 y i; msg (Suc 0) x;\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                         ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st", "show ?case"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. 0 \\<le> d \\<longrightarrow> ack (t + d + 0) = [sending_data]", "by simp"], ["proof (state)\nthis:\n  0 \\<le> d \\<longrightarrow> ack (t + d + 0) = [sending_data]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n                 msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n                 ack (t + d) = [sending_data];\n                 \\<forall>j\\<le>Suc d. a (t + j) = [];\n                 \\<forall>k\\<le>d + d. lose (t + k) = [False];\n                 Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n                 tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n                \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                                  ack (t + d + j) = [sending_data];\n        Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n        msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n        ack (t + d) = [sending_data]; \\<forall>j\\<le>Suc d. a (t + j) = [];\n        \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n        Loss lose a i2 y i; msg (Suc 0) x;\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                         ack (t + d + Suc j) = [sending_data]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n                 msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n                 ack (t + d) = [sending_data];\n                 \\<forall>j\\<le>Suc d. a (t + j) = [];\n                 \\<forall>k\\<le>d + d. lose (t + k) = [False];\n                 Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n                 tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n                \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                                  ack (t + d + j) = [sending_data];\n        Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n        msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n        ack (t + d) = [sending_data]; \\<forall>j\\<le>Suc d. a (t + j) = [];\n        \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n        Loss lose a i2 y i; msg (Suc 0) x;\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                         ack (t + d + Suc j) = [sending_data]", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n   msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n   \\<forall>j\\<le>Suc d. a (t + j) = [];\n   \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n   Loss lose a i2 y i; msg (Suc 0) x;\n   tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n    (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n  \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                    ack (t + d + j) = [sending_data]\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n                 msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n                 ack (t + d) = [sending_data];\n                 \\<forall>j\\<le>Suc d. a (t + j) = [];\n                 \\<forall>k\\<le>d + d. lose (t + k) = [False];\n                 Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n                 tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n                \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                                  ack (t + d + j) = [sending_data];\n        Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n        msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n        ack (t + d) = [sending_data]; \\<forall>j\\<le>Suc d. a (t + j) = [];\n        \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n        Loss lose a i2 y i; msg (Suc 0) x;\n        tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n         (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n       \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                         ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n   msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n   \\<forall>j\\<le>Suc d. a (t + j) = [];\n   \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n   Loss lose a i2 y i; msg (Suc 0) x;\n   tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n    (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n  \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                    ack (t + d + j) = [sending_data]\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n   msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n   \\<forall>j\\<le>Suc d. a (t + j) = [];\n   \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n   Loss lose a i2 y i; msg (Suc 0) x;\n   tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n    (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n  \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                    ack (t + d + j) = [sending_data]\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]", "proof (cases \"Suc j \\<le> d\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]\n 2. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     \\<not> Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "assume \"\\<not> Suc j \\<le> d\""], ["proof (state)\nthis:\n  \\<not> Suc j \\<le> d\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]\n 2. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     \\<not> Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  \\<not> Suc j \\<le> d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Suc j \\<le> d\n\ngoal (1 subgoal):\n 1. Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]", "by simp"], ["proof (state)\nthis:\n  Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "assume a0:\"Suc j \\<le> d\""], ["proof (state)\nthis:\n  Suc j \\<le> d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  Suc j \\<le> d", "have \"d + Suc j \\<le> d + d\""], ["proof (prove)\nusing this:\n  Suc j \\<le> d\n\ngoal (1 subgoal):\n 1. d + Suc j \\<le> d + d", "by arith"], ["proof (state)\nthis:\n  d + Suc j \\<le> d + d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  d + Suc j \\<le> d + d", "have sg3:\"Suc (d + j) \\<le> d + d\""], ["proof (prove)\nusing this:\n  d + Suc j \\<le> d + d\n\ngoal (1 subgoal):\n 1. Suc (d + j) \\<le> d + d", "by arith"], ["proof (state)\nthis:\n  Suc (d + j) \\<le> d + d\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from a4 and h2 and sg1 and h4 and h5"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose", "have sg4: \n       \"st (t+d+j) =  hd (ack (t+d+j))\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n\ngoal (1 subgoal):\n 1. st (t + d + j) = hd (ack (t + d + j))", "by (simp add: tiTable_ack_st_hd)"], ["proof (state)\nthis:\n  st (t + d + j) = hd (ack (t + d + j))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from Suc and a0 and sg4"], ["proof (chain)\npicking this:\n  \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n   msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n   \\<forall>j\\<le>Suc d. a (t + j) = [];\n   \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n   Loss lose a i2 y i; msg (Suc 0) x;\n   tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n    (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n  \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                    ack (t + d + j) = [sending_data]\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  Suc j \\<le> d\n  st (t + d + j) = hd (ack (t + d + j))", "have sg5:\n       \"(fin_inf_append [init_state] st) (Suc (t+d+j)) = sending_data\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Gateway req dt a stop lose d ack i vc; msg (Suc 0) req;\n   msg (Suc 0) a; msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n   \\<forall>j\\<le>Suc d. a (t + j) = [];\n   \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n   Loss lose a i2 y i; msg (Suc 0) x;\n   tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n    (fin_inf_append [[]] buffer) ack i1 vc st\\<rbrakk>\n  \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                    ack (t + d + j) = [sending_data]\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  ts lose\n  ack (t + d) = [sending_data]\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n  msg (Suc 0) x\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  Suc j \\<le> d\n  st (t + d + j) = hd (ack (t + d + j))\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from h7 and a0"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  Suc j \\<le> d", "have sg6:\"\\<forall>j\\<le> d. a (t + Suc j) = []\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>Suc d. a (t + j) = []\n  Suc j \\<le> d\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>d. a (t + Suc j) = []", "by auto"], ["proof (state)\nthis:\n  \\<forall>j\\<le>d. a (t + Suc j) = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from sg6 and a3 and a0 and h5"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>d. a (t + Suc j) = []\n  Loss lose a i2 y i\n  Suc j \\<le> d\n  ts lose", "have sg7:\"y (t + (Suc j)) = []\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>d. a (t + Suc j) = []\n  Loss lose a i2 y i\n  Suc j \\<le> d\n  ts lose\n\ngoal (1 subgoal):\n 1. y (t + Suc j) = []", "by (rule Loss_L5Suc)"], ["proof (state)\nthis:\n  y (t + Suc j) = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from sg7 and a2"], ["proof (chain)\npicking this:\n  y (t + Suc j) = []\n  Delay y i1 d x i2", "have sg8a:\"x (t + d + (Suc j)) = []\""], ["proof (prove)\nusing this:\n  y (t + Suc j) = []\n  Delay y i1 d x i2\n\ngoal (1 subgoal):\n 1. x (t + d + Suc j) = []", "by (simp add: Delay_def)"], ["proof (state)\nthis:\n  x (t + d + Suc j) = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "then"], ["proof (chain)\npicking this:\n  x (t + d + Suc j) = []", "have sg8:\"x (Suc (t + d + j)) = []\""], ["proof (prove)\nusing this:\n  x (t + d + Suc j) = []\n\ngoal (1 subgoal):\n 1. x (Suc (t + d + j)) = []", "by simp"], ["proof (state)\nthis:\n  x (Suc (t + d + j)) = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "have sg9:\"Suc (t + d + j) = Suc (t + (d + j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (t + d + j) = Suc (t + (d + j))", "by arith"], ["proof (state)\nthis:\n  Suc (t + d + j) = Suc (t + (d + j))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from a4"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st", "have sg10:\n        \"fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data \\<and> \n         x (Suc (t + d + j)) = [] \\<and> \n         lose (Suc (t + d + j)) = [False] \\<longrightarrow>\n         ack (Suc (t + d + j)) = [sending_data]\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data \\<and>\n    x (Suc (t + d + j)) = [] \\<and>\n    lose (Suc (t + d + j)) = [False] \\<longrightarrow>\n    ack (Suc (t + d + j)) = [sending_data]", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data \\<and>\n  x (Suc (t + d + j)) = [] \\<and>\n  lose (Suc (t + d + j)) = [False] \\<longrightarrow>\n  ack (Suc (t + d + j)) = [sending_data]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from h8 and sg3"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Suc (d + j) \\<le> d + d", "have sg11:\"lose (t + Suc (d + j)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>d + d. lose (t + k) = [False]\n  Suc (d + j) \\<le> d + d\n\ngoal (1 subgoal):\n 1. lose (t + Suc (d + j)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc (d + j)) = [False]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "have \"Suc (t + d + j) = t + Suc (d + j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (t + d + j) = t + Suc (d + j)", "by arith"], ["proof (state)\nthis:\n  Suc (t + d + j) = t + Suc (d + j)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from this and sg11"], ["proof (chain)\npicking this:\n  Suc (t + d + j) = t + Suc (d + j)\n  lose (t + Suc (d + j)) = [False]", "have \"lose (Suc (t + d + j)) = [False]\""], ["proof (prove)\nusing this:\n  Suc (t + d + j) = t + Suc (d + j)\n  lose (t + Suc (d + j)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (t + d + j)) = [False]", "by  (simp (no_asm_simp), simp)"], ["proof (state)\nthis:\n  lose (Suc (t + d + j)) = [False]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Gateway req dt a stop lose d ack i vc;\n              msg (Suc 0) req; msg (Suc 0) a; msg (Suc 0) stop; ts lose;\n              ack (t + d) = [sending_data];\n              \\<forall>j\\<le>Suc d. a (t + j) = [];\n              \\<forall>k\\<le>d + d. lose (t + k) = [False];\n              Delay y i1 d x i2; Loss lose a i2 y i; msg (Suc 0) x;\n              tiTable_SampleT req x stop lose\n               (fin_inf_append [init_state] st) (fin_inf_append [[]] buffer)\n               ack i1 vc st\\<rbrakk>\n             \\<Longrightarrow> j \\<le> d \\<longrightarrow>\n                               ack (t + d + j) = [sending_data];\n     Gateway req dt a stop lose d ack i vc; msg (Suc 0) req; msg (Suc 0) a;\n     msg (Suc 0) stop; ts lose; ack (t + d) = [sending_data];\n     \\<forall>j\\<le>Suc d. a (t + j) = [];\n     \\<forall>k\\<le>d + d. lose (t + k) = [False]; Delay y i1 d x i2;\n     Loss lose a i2 y i; msg (Suc 0) x;\n     tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n      (fin_inf_append [[]] buffer) ack i1 vc st;\n     Suc j \\<le> d\\<rbrakk>\n    \\<Longrightarrow> Suc j \\<le> d \\<longrightarrow>\n                      ack (t + d + Suc j) = [sending_data]", "from sg10 and sg5 and sg8a and this"], ["proof (chain)\npicking this:\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data \\<and>\n  x (Suc (t + d + j)) = [] \\<and>\n  lose (Suc (t + d + j)) = [False] \\<longrightarrow>\n  ack (Suc (t + d + j)) = [sending_data]\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data\n  x (t + d + Suc j) = []\n  lose (Suc (t + d + j)) = [False]", "show ?thesis"], ["proof (prove)\nusing this:\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data \\<and>\n  x (Suc (t + d + j)) = [] \\<and>\n  lose (Suc (t + d + j)) = [False] \\<longrightarrow>\n  ack (Suc (t + d + j)) = [sending_data]\n  fin_inf_append [init_state] st (Suc (t + d + j)) = sending_data\n  x (t + d + Suc j) = []\n  lose (Suc (t + d + j)) = [False]\n\ngoal (1 subgoal):\n 1. Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]", "by simp"], ["proof (state)\nthis:\n  Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc j \\<le> d \\<longrightarrow> ack (t + d + Suc j) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j \\<le> d \\<longrightarrow> ack (t + d + j) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L6_induction:\n assumes h1:\"msg (Suc 0) req\"\n     and h2:\"msg (Suc 0) x\" \n     and h3:\"msg (Suc 0) stop\"\n     and h4:\"ts lose\"\n     and h5:\"\\<forall>j\\<le> k. lose (t + j) = [False]\" \n     and h6:\"\\<forall>m \\<le> k. req (t + m) \\<noteq> [send]\"\n     and h7:\"ack t = [connection_ok]\"\n     and h8:\"Sample req dt x1 stop lose ack i1 vc\" \n     and h9:\"Delay x2 i1 d x1 i2\"\n     and h10:\"Loss lose x i2 x2 i\"\n     and h11:\"m \\<le> k\"\n shows \"ack (t + m) = [connection_ok]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (t + m) = [connection_ok]", "using assms"], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  m \\<le> k\n\ngoal (1 subgoal):\n 1. ack (t + m) = [connection_ok]", "proof (induct m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n     \\<forall>j\\<le>k. lose (t + j) = [False];\n     \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n     Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n     Loss lose x i2 x2 i; 0 \\<le> k\\<rbrakk>\n    \\<Longrightarrow> ack (t + 0) = [connection_ok]\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "case 0"], ["proof (state)\nthis:\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  0 \\<le> k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n     \\<forall>j\\<le>k. lose (t + j) = [False];\n     \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n     Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n     Loss lose x i2 x2 i; 0 \\<le> k\\<rbrakk>\n    \\<Longrightarrow> ack (t + 0) = [connection_ok]\n 2. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "then"], ["proof (chain)\npicking this:\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  0 \\<le> k", "show ?case"], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  0 \\<le> k\n\ngoal (1 subgoal):\n 1. ack (t + 0) = [connection_ok]", "by simp"], ["proof (state)\nthis:\n  ack (t + 0) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "case (Suc m)"], ["proof (state)\nthis:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k", "have sg1:\"msg (Suc 0) x1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x1", "by (simp add:  Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x1\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from Suc and this"], ["proof (chain)\npicking this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n  msg (Suc 0) x1", "obtain st buffer where\n    a1:\"tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st) \n         (fin_inf_append [[]] buffer) ack i1 vc st\"  and \n    a2:\"\\<forall> t. buffer t = (if dt t = [] then fin_inf_append [[]] buffer t else dt t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n  msg (Suc 0) x1\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        \\<lbrakk>tiTable_SampleT req x1 stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st;\n         \\<forall>t.\n            buffer t =\n            (if dt t = [] then fin_inf_append [[]] buffer t\n             else dt t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  \\<forall>t.\n     buffer t = (if dt t = [] then fin_inf_append [[]] buffer t else dt t)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from a1 and sg1 and h3 and h4"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) x1\n  msg (Suc 0) stop\n  ts lose", "have sg2:\"st (t + m) =  hd (ack (t + m))\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  msg (Suc 0) x1\n  msg (Suc 0) stop\n  ts lose\n\ngoal (1 subgoal):\n 1. st (t + m) = hd (ack (t + m))", "by (simp add: tiTable_ack_st_hd)"], ["proof (state)\nthis:\n  st (t + m) = hd (ack (t + m))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k", "have sg3:\"ack (t + m) = [connection_ok]\""], ["proof (prove)\nusing this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. ack (t + m) = [connection_ok]", "by simp"], ["proof (state)\nthis:\n  ack (t + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from a1 and sg2 and sg3"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  st (t + m) = hd (ack (t + m))\n  ack (t + m) = [connection_ok]", "have sg4:\n  \"(fin_inf_append [init_state] st) (Suc (t + m)) = connection_ok\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  st (t + m) = hd (ack (t + m))\n  ack (t + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. fin_inf_append [init_state] st (Suc (t + m)) = connection_ok", "by (simp add: fin_inf_append_def)"], ["proof (state)\nthis:\n  fin_inf_append [init_state] st (Suc (t + m)) = connection_ok\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k", "have sg5:\"Suc m \\<le> k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n   \\<forall>j\\<le>k. lose (t + j) = [False];\n   \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]; ack t = [connection_ok];\n   Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n   Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ack (t + m) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  ts lose\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  ack t = [connection_ok]\n  Sample req dt x1 stop lose ack i1 vc\n  Delay x2 i1 d x1 i2\n  Loss lose x i2 x2 i\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. Suc m \\<le> k", "by simp"], ["proof (state)\nthis:\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from sg5 and h5"], ["proof (chain)\npicking this:\n  Suc m \\<le> k\n  \\<forall>j\\<le>k. lose (t + j) = [False]", "have sg6:\"lose (Suc (t + m)) = [False]\""], ["proof (prove)\nusing this:\n  Suc m \\<le> k\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (t + m)) = [False]", "by auto"], ["proof (state)\nthis:\n  lose (Suc (t + m)) = [False]\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from h6 and sg5"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  Suc m \\<le> k", "have sg7:\"req (Suc (t + m)) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  Suc m \\<le> k\n\ngoal (1 subgoal):\n 1. req (Suc (t + m)) \\<noteq> [send]", "by auto"], ["proof (state)\nthis:\n  req (Suc (t + m)) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>\\<lbrakk>msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop;\n                 ts lose; \\<forall>j\\<le>k. lose (t + j) = [False];\n                 \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n                 ack t = [connection_ok];\n                 Sample req dt x1 stop lose ack i1 vc; Delay x2 i1 d x1 i2;\n                 Loss lose x i2 x2 i; m \\<le> k\\<rbrakk>\n                \\<Longrightarrow> ack (t + m) = [connection_ok];\n        msg (Suc 0) req; msg (Suc 0) x; msg (Suc 0) stop; ts lose;\n        \\<forall>j\\<le>k. lose (t + j) = [False];\n        \\<forall>m\\<le>k. req (t + m) \\<noteq> [send];\n        ack t = [connection_ok]; Sample req dt x1 stop lose ack i1 vc;\n        Delay x2 i1 d x1 i2; Loss lose x i2 x2 i; Suc m \\<le> k\\<rbrakk>\n       \\<Longrightarrow> ack (t + Suc m) = [connection_ok]", "from a1 and sg3 and sg4 and sg5 and sg6 and sg7"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ack (t + m) = [connection_ok]\n  fin_inf_append [init_state] st (Suc (t + m)) = connection_ok\n  Suc m \\<le> k\n  lose (Suc (t + m)) = [False]\n  req (Suc (t + m)) \\<noteq> [send]", "show ?case"], ["proof (prove)\nusing this:\n  tiTable_SampleT req x1 stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ack (t + m) = [connection_ok]\n  fin_inf_append [init_state] st (Suc (t + m)) = connection_ok\n  Suc m \\<le> k\n  lose (Suc (t + m)) = [False]\n  req (Suc (t + m)) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. ack (t + Suc m) = [connection_ok]", "by (simp add: tiTable_SampleT_def)"], ["proof (state)\nthis:\n  ack (t + Suc m) = [connection_ok]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L6:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n     and \"\\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\"\n     and \"\\<forall>j\\<le>k. lose (t + j) = [False]\"\n     and \"ack t = [connection_ok]\"\n     and \"msg (Suc 0) req\"\n     and \"msg (Suc 0) stop\"\n     and \"msg (Suc 0) a\"\n     and \"ts lose\"\n shows \"\\<forall>m\\<le>k. ack (t + m) = [connection_ok]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + m) = [connection_ok]", "using assms"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + j) = [False]\n  ack t = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + m) = [connection_ok]", "by (simp add: Gateway_def, clarify, simp add: Gateway_L6_induction)"], ["", "lemma Gateway_L6a:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n     and \"\\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\"\n     and \"\\<forall>j\\<le>k. lose (t + 2 + j) = [False]\"\n     and \"ack (t + 2) = [connection_ok]\"\n     and \"msg (Suc 0) req\"\n     and \"msg (Suc 0) stop\"\n     and \"msg (Suc 0) a\"\n     and \"ts lose\"\n shows \"\\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "using assms"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "by (rule Gateway_L6)"], ["", "lemma aux_k3req:\nassumes h1:\"\\<forall>m<k + 3. req (t + m) \\<noteq> [send]\"\n       and h2:\"m \\<le> k\"\nshows \"req (Suc (Suc (t + m))) \\<noteq> [send]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. req (Suc (Suc (t + m))) \\<noteq> [send]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. req (Suc (Suc (t + m))) \\<noteq> [send]", "from h2"], ["proof (chain)\npicking this:\n  m \\<le> k", "have \"m + 2 < k + 3\""], ["proof (prove)\nusing this:\n  m \\<le> k\n\ngoal (1 subgoal):\n 1. m + 2 < k + 3", "by arith"], ["proof (state)\nthis:\n  m + 2 < k + 3\n\ngoal (1 subgoal):\n 1. req (Suc (Suc (t + m))) \\<noteq> [send]", "from h1 and this"], ["proof (chain)\npicking this:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  m + 2 < k + 3", "have \"req (t + (m + 2)) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  m + 2 < k + 3\n\ngoal (1 subgoal):\n 1. req (t + (m + 2)) \\<noteq> [send]", "by blast"], ["proof (state)\nthis:\n  req (t + (m + 2)) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. req (Suc (Suc (t + m))) \\<noteq> [send]", "then"], ["proof (chain)\npicking this:\n  req (t + (m + 2)) \\<noteq> [send]", "show ?thesis"], ["proof (prove)\nusing this:\n  req (t + (m + 2)) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. req (Suc (Suc (t + m))) \\<noteq> [send]", "by simp"], ["proof (state)\nthis:\n  req (Suc (Suc (t + m))) \\<noteq> [send]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux3lose:\nassumes h1:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\"\n       and h2:\"j \\<le> k\"\nshows \"lose (Suc (Suc (t + j))) = [False]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lose (Suc (Suc (t + j))) = [False]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lose (Suc (Suc (t + j))) = [False]", "from h2"], ["proof (chain)\npicking this:\n  j \\<le> k", "have \"j + 2 \\<le>k + d + 3\""], ["proof (prove)\nusing this:\n  j \\<le> k\n\ngoal (1 subgoal):\n 1. j + 2 \\<le> k + d + 3", "by arith"], ["proof (state)\nthis:\n  j + 2 \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc (t + j))) = [False]", "from h1 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  j + 2 \\<le> k + d + 3", "have \"lose (t + (j + 2)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  j + 2 \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. lose (t + (j + 2)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + (j + 2)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc (t + j))) = [False]", "then"], ["proof (chain)\npicking this:\n  lose (t + (j + 2)) = [False]", "show ?thesis"], ["proof (prove)\nusing this:\n  lose (t + (j + 2)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc (t + j))) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc (Suc (t + j))) = [False]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L7:\nassumes h1:\"Gateway req dt a stop lose d ack i vc\"\n     and h2:\"ts lose\"\n     and h3:\"msg (Suc 0) a\"\n     and h4:\"msg (Suc 0) stop\" \n     and h5:\"msg (Suc 0) req\"\n     and h6:\"req (Suc t) = [init]\"\n     and h7:\"\\<forall>m < (k + 3). req (t + m) \\<noteq> [send]\"\n     and h8:\"req (t + 3 + k) = [send]\"\n     and h9:\"ack t = [init_state]\"\n     and h10:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\"\n     and h11:\"\\<forall> t1 \\<le> t. req t1 = []\"\nshows \"\\<forall> t2 < (t + 3 + k + d). i t2 = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "have \"Suc 0 \\<le> k + d + 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> k + d + 3", "by arith"], ["proof (state)\nthis:\n  Suc 0 \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h10 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  Suc 0 \\<le> k + d + 3", "have \"lose (t + Suc 0) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  Suc 0 \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. lose (t + Suc 0) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc 0) = [False]", "have sg1:\"lose (Suc t) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc t) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc t) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "have \"Suc (Suc 0)\\<le> k + d + 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc 0) \\<le> k + d + 3", "by arith"], ["proof (state)\nthis:\n  Suc (Suc 0) \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h10 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  Suc (Suc 0) \\<le> k + d + 3", "have \"lose (t + Suc (Suc 0)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  Suc (Suc 0) \\<le> k + d + 3\n\ngoal (1 subgoal):\n 1. lose (t + Suc (Suc 0)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc (Suc 0)) = [False]", "have sg2:\"lose (Suc (Suc t)) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc t)) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h1 and h2 and h3 and h4 and h5 and h6 and h9 and sg1 and sg2"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  ts lose\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  msg (Suc 0) req\n  req (Suc t) = [init]\n  ack t = [init_state]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]", "have sg3:\"ack (t + 2) = [connection_ok]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  ts lose\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  msg (Suc 0) req\n  req (Suc t) = [init]\n  ack t = [init_state]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. ack (t + 2) = [connection_ok]", "by (simp add: Gateway_L1)"], ["proof (state)\nthis:\n  ack (t + 2) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h7 and this"], ["proof (chain)\npicking this:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  ack (t + 2) = [connection_ok]", "have sg4:\"\\<forall>m\\<le> k. req ((t + 2) + m) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  ack (t + 2) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]", "by (auto, simp add: aux_k3req)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h10"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]", "have sg5:\"\\<forall>j\\<le> k. lose ((t + 2) + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>k. lose (t + 2 + j) = [False]", "by (auto, simp add: aux3lose)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h1 and sg4 and sg5 and sg3 and h5 and h4 and h3 and h2"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose", "have sg6:\n   \"\\<forall>m \\<le>  k. ack ((t + 2) + m) = [connection_ok]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "by (rule Gateway_L6a)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from sg6"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg7:\"ack (t + 2 + k) = [connection_ok]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok]", "by auto"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok]\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y where\n    a1:\"Sample req dt x stop lose ack i1 vc\" and\n    a2:\"Delay y i1 d x i2\" and \n    a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from h3 and a2 and a3"], ["proof (chain)\npicking this:\n  msg (Suc 0) a\n  Delay y i1 d x i2\n  Loss lose a i2 y i", "have sg8:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  msg (Suc 0) a\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from a1 and sg8 and h4 and h5"], ["proof (chain)\npicking this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  msg (Suc 0) req", "obtain st buffer where\n    a4:\"tiTable_SampleT req x stop lose (fin_inf_append [init_state] st) \n         (fin_inf_append [[]] buffer) ack i1 vc st\"  and \n    a5:\"\\<forall> t. buffer t = (if dt t = [] then fin_inf_append [[]] buffer t else dt t)\""], ["proof (prove)\nusing this:\n  Sample req dt x stop lose ack i1 vc\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  msg (Suc 0) req\n\ngoal (1 subgoal):\n 1. (\\<And>st buffer.\n        \\<lbrakk>tiTable_SampleT req x stop lose\n                  (fin_inf_append [init_state] st)\n                  (fin_inf_append [[]] buffer) ack i1 vc st;\n         \\<forall>t.\n            buffer t =\n            (if dt t = [] then fin_inf_append [[]] buffer t\n             else dt t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Sample_def Sample_L_def, auto)"], ["proof (state)\nthis:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  \\<forall>t.\n     buffer t = (if dt t = [] then fin_inf_append [[]] buffer t else dt t)\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from a4 and h2 and sg8 and h4 and h11 and h6 and h7 and sg6 and h10"], ["proof (chain)\npicking this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  \\<forall>t1\\<le>t. req t1 = []\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]", "have sg9:\"\\<forall> t1 < (t + 3 + k). i1 t1 = []\""], ["proof (prove)\nusing this:\n  tiTable_SampleT req x stop lose (fin_inf_append [init_state] st)\n   (fin_inf_append [[]] buffer) ack i1 vc st\n  ts lose\n  msg (Suc 0) x\n  msg (Suc 0) stop\n  \\<forall>t1\\<le>t. req t1 = []\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>t1<t + 3 + k. i1 t1 = []", "by (simp add: tiTable_i1_4)"], ["proof (state)\nthis:\n  \\<forall>t1<t + 3 + k. i1 t1 = []\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from sg9 and a2"], ["proof (chain)\npicking this:\n  \\<forall>t1<t + 3 + k. i1 t1 = []\n  Delay y i1 d x i2", "have sg10:\"\\<forall> t2 < (t + 3 + k + d). i2 t2 = []\""], ["proof (prove)\nusing this:\n  \\<forall>t1<t + 3 + k. i1 t1 = []\n  Delay y i1 d x i2\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i2 t2 = []", "by (rule Delay_L2)"], ["proof (state)\nthis:\n  \\<forall>t2<t + 3 + k + d. i2 t2 = []\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "from sg10 and a3 and h2"], ["proof (chain)\npicking this:\n  \\<forall>t2<t + 3 + k + d. i2 t2 = []\n  Loss lose a i2 y i\n  ts lose", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>t2<t + 3 + k + d. i2 t2 = []\n  Loss lose a i2 y i\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "by (rule Loss_L2)"], ["proof (state)\nthis:\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L8a:\n  assumes h1:\"Gateway req dt a stop lose d ack i vc\" \n      and h2:\"msg (Suc 0) req\"\n      and h3:\"msg (Suc 0) stop\"\n      and h4:\"msg (Suc 0) a\"\n      and h5:\"ts lose\"\n      and h6:\"\\<forall>j\\<le>2 * d. lose (t + j) = [False]\" \n      and h7:\"ack t = [sending_data]\"\n      and h8:\"\\<forall>t3 \\<le> t + d. a t3 = []\"\n      and h9:\"x \\<le> d + d\"\n  shows \"ack (t + x) = [sending_data]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "from h1"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc", "obtain i1 i2 x y where\n    a1:\"Sample req dt x stop lose ack i1 vc\" and\n    a2:\"Delay y i1 d x i2\" and \n    a3:\"Loss lose a i2 y i\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i1 y i2.\n        \\<lbrakk>Sample req dt x stop lose ack i1 vc; Delay y i1 d x i2;\n         Loss lose a i2 y i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Gateway_def, auto)"], ["proof (state)\nthis:\n  Sample req dt x stop lose ack i1 vc\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "from h8 and a3 and h5"], ["proof (chain)\npicking this:\n  \\<forall>t3\\<le>t + d. a t3 = []\n  Loss lose a i2 y i\n  ts lose", "have sg1:\"\\<forall>t3 \\<le> t + d. y t3 = []\""], ["proof (prove)\nusing this:\n  \\<forall>t3\\<le>t + d. a t3 = []\n  Loss lose a i2 y i\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>t3\\<le>t + d. y t3 = []", "by (rule Loss_L6)"], ["proof (state)\nthis:\n  \\<forall>t3\\<le>t + d. y t3 = []\n\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "from sg1 and a2"], ["proof (chain)\npicking this:\n  \\<forall>t3\\<le>t + d. y t3 = []\n  Delay y i1 d x i2", "have sg2:\"\\<forall>t4 \\<le> t + d + d. x t4 = []\""], ["proof (prove)\nusing this:\n  \\<forall>t3\\<le>t + d. y t3 = []\n  Delay y i1 d x i2\n\ngoal (1 subgoal):\n 1. \\<forall>t4\\<le>t + d + d. x t4 = []", "by (rule Delay_L4)"], ["proof (state)\nthis:\n  \\<forall>t4\\<le>t + d + d. x t4 = []\n\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "from h4 and a2 and a3"], ["proof (chain)\npicking this:\n  msg (Suc 0) a\n  Delay y i1 d x i2\n  Loss lose a i2 y i", "have sg3:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  msg (Suc 0) a\n  Delay y i1 d x i2\n  Loss lose a i2 y i\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add:  Loss_Delay_msg_a)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "from h3 and h5 and h2 and sg3 and h6 and h7 and a1 and h9 and sg2"], ["proof (chain)\npicking this:\n  msg (Suc 0) stop\n  ts lose\n  msg (Suc 0) req\n  msg (Suc 0) x\n  \\<forall>j\\<le>2 * d. lose (t + j) = [False]\n  ack t = [sending_data]\n  Sample req dt x stop lose ack i1 vc\n  x \\<le> d + d\n  \\<forall>t4\\<le>t + d + d. x t4 = []", "show ?thesis"], ["proof (prove)\nusing this:\n  msg (Suc 0) stop\n  ts lose\n  msg (Suc 0) req\n  msg (Suc 0) x\n  \\<forall>j\\<le>2 * d. lose (t + j) = [False]\n  ack t = [sending_data]\n  Sample req dt x stop lose ack i1 vc\n  x \\<le> d + d\n  \\<forall>t4\\<le>t + d + d. x t4 = []\n\ngoal (1 subgoal):\n 1. ack (t + x) = [sending_data]", "by (simp add: Sample_sending_data)"], ["proof (state)\nthis:\n  ack (t + x) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gateway_L8:\nassumes \"Gateway req dt a stop lose d ack i vc\" \n       and \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"\\<forall>j\\<le>2 * d. lose (t + j) = [False]\" \n       and \"ack t = [sending_data]\"\n       and \"\\<forall>t3 \\<le> t + d. a t3 = []\"\nshows \"\\<forall>x \\<le> d + d. ack (t + x) = [sending_data]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>d + d. ack (t + x) = [sending_data]", "using assms"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d. lose (t + j) = [False]\n  ack t = [sending_data]\n  \\<forall>t3\\<le>t + d. a t3 = []\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>d + d. ack (t + x) = [sending_data]", "by (simp add: Gateway_L8a)"], ["", "subsection \\<open>Proof of the Refinement Relation for the Gateway Requirements\\<close>"], ["", "lemma Gateway_L0:\n assumes \"Gateway req dt a stop lose d ack i vc\"\n shows     \"GatewayReq req dt a stop lose d ack i vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. GatewayReq req dt a stop lose d ack i vc", "using assms"], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. GatewayReq req dt a stop lose d ack i vc", "by (simp add: GatewayReq_def Gateway_L1 Gateway_L2 Gateway_L3 Gateway_L4)"], ["", "subsection \\<open>Lemmas about Gateway Requirements\\<close>"], ["", "lemma GatewayReq_L1:\n  assumes h1:\"msg (Suc 0) req\"\n      and h2:\"msg (Suc 0) stop\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"ts lose\"\n      and h6:\"req (t + 3 + k) = [send]\" \n      and h7:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n      and h9:\"\\<forall>m\\<le> k. ack (t + 2 + m) = [connection_ok]\"\n      and h10:\"GatewayReq req dt a stop lose d ack i vc\"\n shows \"ack (t + 3 + k) = [sending_data]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "from h9"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg1:\"ack (Suc (Suc (t + k))) = [connection_ok]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (Suc (Suc (t + k))) = [connection_ok]", "by auto"], ["proof (state)\nthis:\n  ack (Suc (Suc (t + k))) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "from h7"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg2: \n   \"\\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]", "by (simp add: aux_lemma_lose_1)"], ["proof (state)\nthis:\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "from h1 and h2 and h3 and h4 and h6 and h10 and sg1 and sg2"], ["proof (chain)\npicking this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  GatewayReq req dt a stop lose d ack i vc\n  ack (Suc (Suc (t + k))) = [connection_ok]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]", "have sg3:\n   \"ack (t + 2 + k) = [connection_ok] \\<and> \n    req (Suc (t + 2 + k)) = [send] \\<and> (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n    ack (Suc (t + 2 + k)) = [sending_data]\""], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  GatewayReq req dt a stop lose d ack i vc\n  ack (Suc (Suc (t + k))) = [connection_ok]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and>\n    (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n    ack (Suc (t + 2 + k)) = [sending_data]", "by (simp add: GatewayReq_def)"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  ack (Suc (t + 2 + k)) = [sending_data]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "have \"t + 3 + k = Suc (Suc (Suc (t + k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + 3 + k = Suc (Suc (Suc (t + k)))", "by arith"], ["proof (state)\nthis:\n  t + 3 + k = Suc (Suc (Suc (t + k)))\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "from sg3 and sg1 and h6 and h7 and this"], ["proof (chain)\npicking this:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  ack (Suc (t + 2 + k)) = [sending_data]\n  ack (Suc (Suc (t + k))) = [connection_ok]\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  t + 3 + k = Suc (Suc (Suc (t + k)))", "show ?thesis"], ["proof (prove)\nusing this:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  ack (Suc (t + 2 + k)) = [sending_data]\n  ack (Suc (Suc (t + k))) = [connection_ok]\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  t + 3 + k = Suc (Suc (Suc (t + k)))\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  ack (t + 3 + k) = [sending_data]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GatewayReq_L2:\n assumes  h1:\"msg (Suc 0) req\"\n      and h2:\"msg (Suc 0) stop\"\n      and h3:\"msg (Suc 0) a\"\n      and h4:\"ts lose\"\n      and h5:\"GatewayReq req dt a stop lose d ack i vc\"\n      and h6:\"req (t + 3 + k) = [send]\"\n      and h7:\"inf_last_ti dt t \\<noteq> []\"\n      and h8:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n      and h9:\"\\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\"\n  shows \"i (t + 3 + k + d) \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from h8"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg1:\"(\\<forall> (x::nat). x \\<le> (d+1) \\<longrightarrow> lose (t+x) = [False])\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>d + 1. lose (t + x) = [False]", "by (simp add: aux_lemma_lose_2)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>d + 1. lose (t + x) = [False]\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from h8"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg2:\"\\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]", "by (simp add: aux_lemma_lose_1)"], ["proof (state)\nthis:\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from h9"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg3:\"ack (t + 2 + k) = [connection_ok]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok]", "by simp"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok]\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from h1 and h2 and h3 and h4 and h5 and h6 and sg2 and sg3"], ["proof (chain)\npicking this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc\n  req (t + 3 + k) = [send]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n  ack (t + 2 + k) = [connection_ok]", "have sg4:\n   \"ack (t + 2 + k) = [connection_ok] \\<and> \n    req (Suc (t + 2 + k)) = [send] \\<and> (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n    i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\""], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc\n  req (t + 3 + k) = [send]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n  ack (t + 2 + k) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and>\n    (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n    i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "by (simp add: GatewayReq_def, auto)"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from h7"], ["proof (chain)\npicking this:\n  inf_last_ti dt t \\<noteq> []", "have sg5:\"inf_last_ti dt (t + 2 + k) \\<noteq> []\""], ["proof (prove)\nusing this:\n  inf_last_ti dt t \\<noteq> []\n\ngoal (1 subgoal):\n 1. inf_last_ti dt (t + 2 + k) \\<noteq> []", "by (simp add: inf_last_ti_nonempty_k)"], ["proof (state)\nthis:\n  inf_last_ti dt (t + 2 + k) \\<noteq> []\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "have sg6:\"t + 3 + k = Suc (Suc (Suc (t + k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + 3 + k = Suc (Suc (Suc (t + k)))", "by arith"], ["proof (state)\nthis:\n  t + 3 + k = Suc (Suc (Suc (t + k)))\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "have \"t + 2 + k = Suc (Suc (t + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + 2 + k = Suc (Suc (t + k))", "by arith"], ["proof (state)\nthis:\n  t + 2 + k = Suc (Suc (t + k))\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "from sg1 and sg2 and sg3 and sg4 and sg5 and sg6 and this and h6"], ["proof (chain)\npicking this:\n  \\<forall>x\\<le>d + 1. lose (t + x) = [False]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n  ack (t + 2 + k) = [connection_ok]\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  inf_last_ti dt (t + 2 + k) \\<noteq> []\n  t + 3 + k = Suc (Suc (Suc (t + k)))\n  t + 2 + k = Suc (Suc (t + k))\n  req (t + 3 + k) = [send]", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>d + 1. lose (t + x) = [False]\n  \\<forall>ka\\<le>Suc d. lose (Suc (Suc (t + k + ka))) = [False]\n  ack (t + 2 + k) = [connection_ok]\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  inf_last_ti dt (t + 2 + k) \\<noteq> []\n  t + 3 + k = Suc (Suc (Suc (t + k)))\n  t + 2 + k = Suc (Suc (t + k))\n  req (t + 3 + k) = [send]\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Properties of the Gateway System\\<close>"], ["", "lemma GatewaySystem_L1aux:\nassumes \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"msg (Suc 0) req \\<and> msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow> \n        (\\<forall>t. (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and> lose (Suc t) = [False] \\<and> \n          lose (Suc (Suc t)) = [False] \\<longrightarrow>\n          ack (Suc (Suc t)) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and> req (Suc t) = [send] \\<and> \n         (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc (t + d)) = inf_last_ti dt t \\<and> ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and> a (Suc t) = [sc_ack] \\<and> \n          (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc (t + d)) = [vc_com]))\"\nshows  \"ack (t + 3 + k + d + d) = [sending_data] \\<and>\n          a (Suc (t + 3 + k + d)) = [sc_ack] \\<and> \n         (\\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n         vc (Suc (t + 3 + k + d + d)) = [vc_com]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (t + 3 + k + d + d) = [sending_data] \\<and>\n    a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n    (\\<forall>ka\\<le>Suc d.\n        lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n    vc (Suc (t + 3 + k + d + d)) = [vc_com]", "using assms"], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  msg (Suc 0) req \\<and>\n  msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow>\n  (\\<forall>t.\n      (ack t = [init_state] \\<and>\n       req (Suc t) = [init] \\<and>\n       lose (Suc t) = [False] \\<and>\n       lose (Suc (Suc t)) = [False] \\<longrightarrow>\n       ack (Suc (Suc t)) = [connection_ok]) \\<and>\n      (ack t = [connection_ok] \\<and>\n       req (Suc t) = [send] \\<and>\n       (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n       i (Suc (t + d)) = inf_last_ti dt t \\<and>\n       ack (Suc t) = [sending_data]) \\<and>\n      (ack (t + d) = [sending_data] \\<and>\n       a (Suc t) = [sc_ack] \\<and>\n       (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n       vc (Suc (t + d)) = [vc_com]))\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k + d + d) = [sending_data] \\<and>\n    a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n    (\\<forall>ka\\<le>Suc d.\n        lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n    vc (Suc (t + 3 + k + d + d)) = [vc_com]", "by blast"], ["", "lemma GatewaySystem_L3aux:\nassumes \"msg (Suc 0) req\"\n       and \"msg (Suc 0) stop\"\n       and \"msg (Suc 0) a\"\n       and \"ts lose\"\n       and \"msg (Suc 0) req \\<and> msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow> \n        (\\<forall>t. (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and> lose (Suc t) = [False] \\<and> \n          lose (Suc (Suc t)) = [False] \\<longrightarrow>\n          ack (Suc (Suc t)) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and> req (Suc t) = [send] \\<and> \n         (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc (t + d)) = inf_last_ti dt t \\<and> ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and> a (Suc t) = [sc_ack] \\<and> \n          (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc (t + d)) = [vc_com]))\"\nshows \"ack (t + 2 + k) = [connection_ok] \\<and>\n         req (Suc (t + 2 + k)) = [send] \\<and> \n         (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n         i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and>\n    (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n    i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "using assms"], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  msg (Suc 0) req \\<and>\n  msg (Suc 0) a \\<and> msg (Suc 0) stop \\<and> ts lose \\<longrightarrow>\n  (\\<forall>t.\n      (ack t = [init_state] \\<and>\n       req (Suc t) = [init] \\<and>\n       lose (Suc t) = [False] \\<and>\n       lose (Suc (Suc t)) = [False] \\<longrightarrow>\n       ack (Suc (Suc t)) = [connection_ok]) \\<and>\n      (ack t = [connection_ok] \\<and>\n       req (Suc t) = [send] \\<and>\n       (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n       i (Suc (t + d)) = inf_last_ti dt t \\<and>\n       ack (Suc t) = [sending_data]) \\<and>\n      (ack (t + d) = [sending_data] \\<and>\n       a (Suc t) = [sc_ack] \\<and>\n       (\\<forall>k\\<le>Suc d. lose (t + k) = [False]) \\<longrightarrow>\n       vc (Suc (t + d)) = [vc_com]))\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and>\n    (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n    i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "by blast"], ["", "lemma GatewaySystem_L1:\n assumes  h2:\"ServiceCenter i a\" \n     and h3:\"GatewayReq req dt a stop lose d ack i vc\" \n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h9:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\" \n     and h11:\"i (t + 3 + k + d) \\<noteq> []\"\n     and h14:\"\\<forall>x \\<le> d + d. ack (t + 3 + k + x) = [sending_data]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h2"], ["proof (chain)\npicking this:\n  ServiceCenter i a", "have \"\\<forall>t. a (Suc t) = (if i t = [] then [] else [sc_ack])\""], ["proof (prove)\nusing this:\n  ServiceCenter i a\n\ngoal (1 subgoal):\n 1. \\<forall>t. a (Suc t) = (if i t = [] then [] else [sc_ack])", "by (simp add:ServiceCenter_def)"], ["proof (state)\nthis:\n  \\<forall>t. a (Suc t) = (if i t = [] then [] else [sc_ack])\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "then"], ["proof (chain)\npicking this:\n  \\<forall>t. a (Suc t) = (if i t = [] then [] else [sc_ack])", "have sg1:\n    \"a (Suc (t + 3 + k + d)) = (if i (t + 3 + k + d) = [] then [] else [sc_ack])\""], ["proof (prove)\nusing this:\n  \\<forall>t. a (Suc t) = (if i t = [] then [] else [sc_ack])\n\ngoal (1 subgoal):\n 1. a (Suc (t + 3 + k + d)) =\n    (if i (t + 3 + k + d) = [] then [] else [sc_ack])", "by blast"], ["proof (state)\nthis:\n  a (Suc (t + 3 + k + d)) =\n  (if i (t + 3 + k + d) = [] then [] else [sc_ack])\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg1 and h11"], ["proof (chain)\npicking this:\n  a (Suc (t + 3 + k + d)) =\n  (if i (t + 3 + k + d) = [] then [] else [sc_ack])\n  i (t + 3 + k + d) \\<noteq> []", "have sg2:\"a (Suc (t + 3 + k + d)) = [sc_ack]\""], ["proof (prove)\nusing this:\n  a (Suc (t + 3 + k + d)) =\n  (if i (t + 3 + k + d) = [] then [] else [sc_ack])\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. a (Suc (t + 3 + k + d)) = [sc_ack]", "by auto"], ["proof (state)\nthis:\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]", "have sg3:\"ack (t + 3 + k + 2*d) = [sending_data]\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k + 2 * d) = [sending_data]", "by simp"], ["proof (state)\nthis:\n  ack (t + 3 + k + 2 * d) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h4 and h5 and h6 and h7 and h3"], ["proof (chain)\npicking this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc", "have sg4:\n    \"ack (t + 3 + k + d + d) = [sending_data] \\<and> a (Suc (t + 3 + k + d)) = [sc_ack] \\<and> \n     (\\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n     vc (Suc (t + 3 + k + d + d)) = [vc_com]\""], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k + d + d) = [sending_data] \\<and>\n    a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n    (\\<forall>ka\\<le>Suc d.\n        lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n    vc (Suc (t + 3 + k + d + d)) = [vc_com]", "apply (simp only: GatewayReq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>msg (Suc 0) req; msg (Suc 0) stop; msg (Suc 0) a; ts lose;\n     msg 1 req \\<and>\n     msg 1 a \\<and> msg 1 stop \\<and> True \\<longrightarrow>\n     (\\<forall>t.\n         (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and>\n          lose (t + 1) = [False] \\<and>\n          lose (t + 2) = [False] \\<longrightarrow>\n          ack (t + 2) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and>\n          req (Suc t) = [send] \\<and>\n          (\\<forall>k\\<le>d + 1. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc t + d) = inf_last_ti dt t \\<and>\n          ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and>\n          a (Suc t) = [sc_ack] \\<and>\n          (\\<forall>k\\<le>d + 1. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc t + d) = [vc_com]))\\<rbrakk>\n    \\<Longrightarrow> ack (t + 3 + k + d + d) = [sending_data] \\<and>\n                      a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n                      (\\<forall>ka\\<le>Suc d.\n                          lose (t + 3 + k + d + ka) =\n                          [False]) \\<longrightarrow>\n                      vc (Suc (t + 3 + k + d + d)) = [vc_com]", "by (rule GatewaySystem_L1aux, auto)"], ["proof (state)\nthis:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>ka\\<le>Suc d.\n      lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h9"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg5:\"\\<forall>ka\\<le>Suc d. lose (d + (t + (3 + k)) + ka) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>ka\\<le>Suc d. lose (d + (t + (3 + k)) + ka) = [False]", "by (simp add: aux_lemma_lose_3)"], ["proof (state)\nthis:\n  \\<forall>ka\\<le>Suc d. lose (d + (t + (3 + k)) + ka) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg5a:\"d + (t + (3 + k)) = t + 3 + k + d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d + (t + (3 + k)) = t + 3 + k + d", "by arith"], ["proof (state)\nthis:\n  d + (t + (3 + k)) = t + 3 + k + d\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg5 and sg5a"], ["proof (chain)\npicking this:\n  \\<forall>ka\\<le>Suc d. lose (d + (t + (3 + k)) + ka) = [False]\n  d + (t + (3 + k)) = t + 3 + k + d", "have sg5b:\"\\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>ka\\<le>Suc d. lose (d + (t + (3 + k)) + ka) = [False]\n  d + (t + (3 + k)) = t + 3 + k + d\n\ngoal (1 subgoal):\n 1. \\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]", "by auto"], ["proof (state)\nthis:\n  \\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg6:\"(t + 3 + k + 2 * d)  = (2 * d + (t + (3 + k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t + 3 + k + 2 * d = 2 * d + (t + (3 + k))", "by arith"], ["proof (state)\nthis:\n  t + 3 + k + 2 * d = 2 * d + (t + (3 + k))\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg7:\"Suc (Suc (Suc (t + k + (d + d)))) = Suc (Suc (Suc (t + k + d + d)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc (t + k + (d + d)))) = Suc (Suc (Suc (t + k + d + d)))", "by arith"], ["proof (state)\nthis:\n  Suc (Suc (Suc (t + k + (d + d)))) = Suc (Suc (Suc (t + k + d + d)))\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"Suc (Suc (Suc (Suc (t + k + d + d)))) = \n            Suc (Suc (Suc (Suc (d + d + (t + k)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc (Suc (t + k + d + d)))) =\n    Suc (Suc (Suc (Suc (d + d + (t + k)))))", "by arith"], ["proof (state)\nthis:\n  Suc (Suc (Suc (Suc (t + k + d + d)))) =\n  Suc (Suc (Suc (Suc (d + d + (t + k)))))\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg4 and sg3 and sg2 and sg5b and sg6 and sg7 and this"], ["proof (chain)\npicking this:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>ka\\<le>Suc d.\n      lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  ack (t + 3 + k + 2 * d) = [sending_data]\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n  \\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]\n  t + 3 + k + 2 * d = 2 * d + (t + (3 + k))\n  Suc (Suc (Suc (t + k + (d + d)))) = Suc (Suc (Suc (t + k + d + d)))\n  Suc (Suc (Suc (Suc (t + k + d + d)))) =\n  Suc (Suc (Suc (Suc (d + d + (t + k)))))", "show ?thesis"], ["proof (prove)\nusing this:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>ka\\<le>Suc d.\n      lose (t + 3 + k + d + ka) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  ack (t + 3 + k + 2 * d) = [sending_data]\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n  \\<forall>ka\\<le>Suc d. lose (t + 3 + k + d + ka) = [False]\n  t + 3 + k + 2 * d = 2 * d + (t + (3 + k))\n  Suc (Suc (Suc (t + k + (d + d)))) = Suc (Suc (Suc (t + k + d + d)))\n  Suc (Suc (Suc (Suc (t + k + d + d)))) =\n  Suc (Suc (Suc (Suc (d + d + (t + k)))))\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  vc (2 * d + (t + (4 + k))) = [vc_com]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux4lose1:\nassumes h1:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n       and h2:\"j \\<le> k\"\nshows \"lose (t + (2::nat) + j) = [False]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lose (t + 2 + j) = [False]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lose (t + 2 + j) = [False]", "from h2"], ["proof (chain)\npicking this:\n  j \\<le> k", "have \"(2::nat) + j \\<le> (2::nat) * d + (4 + k)\""], ["proof (prove)\nusing this:\n  j \\<le> k\n\ngoal (1 subgoal):\n 1. 2 + j \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  2 + j \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + 2 + j) = [False]", "from h1 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  2 + j \\<le> 2 * d + (4 + k)", "have \"lose (t + (2 + j)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  2 + j \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + (2 + j)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + (2 + j)) = [False]\n\ngoal (1 subgoal):\n 1. lose (t + 2 + j) = [False]", "then"], ["proof (chain)\npicking this:\n  lose (t + (2 + j)) = [False]", "show ?thesis"], ["proof (prove)\nusing this:\n  lose (t + (2 + j)) = [False]\n\ngoal (1 subgoal):\n 1. lose (t + 2 + j) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (t + 2 + j) = [False]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux4lose2:\nassumes \"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n       and \"3 + k + d \\<le> 2 * d + (4 + k)\"\nshows \"lose (t + (3::nat) + k + d) = [False]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lose (t + 3 + k + d) = [False]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lose (t + 3 + k + d) = [False]", "from assms"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  3 + k + d \\<le> 2 * d + (4 + k)", "have \"lose (t + ((3::nat) + k + d)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  3 + k + d \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + (3 + k + d)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + (3 + k + d)) = [False]\n\ngoal (1 subgoal):\n 1. lose (t + 3 + k + d) = [False]", "then"], ["proof (chain)\npicking this:\n  lose (t + (3 + k + d)) = [False]", "show ?thesis"], ["proof (prove)\nusing this:\n  lose (t + (3 + k + d)) = [False]\n\ngoal (1 subgoal):\n 1. lose (t + 3 + k + d) = [False]", "by (simp add: arith_sum1)"], ["proof (state)\nthis:\n  lose (t + 3 + k + d) = [False]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux4req:\nassumes h1:\"\\<forall> (m::nat) \\<le> k + 2. req (t + m) \\<noteq> [send]\"\n      and h2:\"m \\<le> k\"\n      and h3:\"req (t + 2 + m) = [send]\" shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "from h2"], ["proof (chain)\npicking this:\n  m \\<le> k", "have \"(2::nat) + m \\<le> k + (2::nat)\""], ["proof (prove)\nusing this:\n  m \\<le> k\n\ngoal (1 subgoal):\n 1. 2 + m \\<le> k + 2", "by arith"], ["proof (state)\nthis:\n  2 + m \\<le> k + 2\n\ngoal (1 subgoal):\n 1. False", "from h1 and this"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n  2 + m \\<le> k + 2", "have \"req (t + (2 + m)) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n  2 + m \\<le> k + 2\n\ngoal (1 subgoal):\n 1. req (t + (2 + m)) \\<noteq> [send]", "by blast"], ["proof (state)\nthis:\n  req (t + (2 + m)) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. False", "from this and h3"], ["proof (chain)\npicking this:\n  req (t + (2 + m)) \\<noteq> [send]\n  req (t + 2 + m) = [send]", "show ?thesis"], ["proof (prove)\nusing this:\n  req (t + (2 + m)) \\<noteq> [send]\n  req (t + 2 + m) = [send]\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GatewaySystem_L2:\n assumes h1:\"Gateway req dt a stop lose d ack i vc\" \n     and h2:\"ServiceCenter i a\" \n     and h3:\"GatewayReq req dt a stop lose d ack i vc\" \n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h8:\"ack t = [init_state]\"\n     and h9:\"req (Suc t) = [init]\" \n     and h10:\"\\<forall>t1\\<le>t. req t1 = []\"\n     and h11:\"\\<forall>m \\<le> k + 2. req (t + m) \\<noteq> [send]\"\n     and h12:\"req (t + 3 + k) = [send]\" \n     and h13:\"inf_last_ti dt t \\<noteq> []\"\n     and h14:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"Suc 0 \\<le> 2 * d + (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  Suc 0 \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc 0 \\<le> 2 * d + (4 + k)", "have \"lose (t + Suc 0) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc 0 \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + Suc 0) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc 0) = [False]", "have sg1:\"lose (Suc t) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc t) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc t) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"Suc (Suc 0) \\<le> 2 * d + (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc 0) \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)", "have \"lose (t + Suc (Suc 0)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + Suc (Suc 0)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc (Suc 0)) = [False]", "have sg2:\"lose (Suc (Suc t)) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc t)) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7 and h8 and h9 and sg1 and sg2"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  ack t = [init_state]\n  req (Suc t) = [init]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]", "have sg3:\n   \"ack (t + 2) = [connection_ok]\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  ack t = [init_state]\n  req (Suc t) = [init]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. ack (t + 2) = [connection_ok]", "by (simp add: GatewayReq_def)"], ["proof (state)\nthis:\n  ack (t + 2) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg4:\" \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>k. lose (t + 2 + j) = [False]", "by (clarify, rule aux4lose1, simp)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h11"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]", "have sg5:\"\\<forall>m \\<le> k. req (t + 2 + m) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]", "by (clarify, rule aux4req, auto)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* stable connection *)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and sg5 and sg4 and sg3 and h4 and h5 and h6 and h7"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose", "have sg6:\n   \"\\<forall>m \\<le> k. ack (t + 2 + m) = [connection_ok]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "by (rule Gateway_L6)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* sending data*)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7 and h12 and h14 and sg6"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg10:\n   \"ack (t + 3 + k) = [sending_data]\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "by (simp add: GatewayReq_L1)"], ["proof (state)\nthis:\n  ack (t + 3 + k) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7 and h12 and h13 and h14 and sg6"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  inf_last_ti dt t \\<noteq> []\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg11:\n   \"i (t + 3 + k + d) \\<noteq> []\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  inf_last_ti dt t \\<noteq> []\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "by (simp add: GatewayReq_L2)"], ["proof (state)\nthis:\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* waiting for sc-ack *)"], ["proof (state)\nthis:\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h11"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]", "have sg12:\"\\<forall>m < k + 3. req (t + m) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<forall>m<k + 3. req (t + m) \\<noteq> [send]", "by auto"], ["proof (state)\nthis:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg13:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]", "by auto"], ["proof (state)\nthis:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and h7 and h6 and h5 and h4 and h9 and sg12 \n          and h12 and h8 and sg13 and h10"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  ts lose\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  msg (Suc 0) req\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  req (t + 3 + k) = [send]\n  ack t = [init_state]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  \\<forall>t1\\<le>t. req t1 = []", "have sg14:\"\\<forall> t2 < (t + 3 + k + d). i t2 = []\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  ts lose\n  msg (Suc 0) a\n  msg (Suc 0) stop\n  msg (Suc 0) req\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  req (t + 3 + k) = [send]\n  ack t = [init_state]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  \\<forall>t1\\<le>t. req t1 = []\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "by (simp add: Gateway_L7)"], ["proof (state)\nthis:\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg14 and h2"], ["proof (chain)\npicking this:\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n  ServiceCenter i a", "have sg15:\"\\<forall> t3 \\<le> (t + 3 + k + d). a t3 = []\""], ["proof (prove)\nusing this:\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n  ServiceCenter i a\n\ngoal (1 subgoal):\n 1. \\<forall>t3\\<le>t + 3 + k + d. a t3 = []", "by (simp add: ServiceCenter_L2)"], ["proof (state)\nthis:\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg18:\"\\<forall>j\\<le>2 * d. lose ((t + 3 + k) + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]", "by (simp add: streamValue43)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg16a:\"\\<forall>j\\<le>2 * d. lose (t + j + (4 + k)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>2 * d. lose (t + j + (4 + k)) = [False]", "by (simp add: streamValue2)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>2 * d. lose (t + j + (4 + k)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg16b:\"Suc (3 + k) = (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (3 + k) = 4 + k", "by arith"], ["proof (state)\nthis:\n  Suc (3 + k) = 4 + k\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg16a and sg16b"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d. lose (t + j + (4 + k)) = [False]\n  Suc (3 + k) = 4 + k", "have sg16:\"\\<forall>j\\<le>2 * d. lose (t + j + Suc (3 + k)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d. lose (t + j + (4 + k)) = [False]\n  Suc (3 + k) = 4 + k\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>2 * d. lose (t + j + Suc (3 + k)) = [False]", "by (simp (no_asm_simp))"], ["proof (state)\nthis:\n  \\<forall>j\\<le>2 * d. lose (t + j + Suc (3 + k)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and h4 and h5 and h6 and h7 and sg18 and sg10 and sg15"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n  ack (t + 3 + k) = [sending_data]\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []", "have sg19:\n    \"\\<forall>x \\<le> d + d. ack (t + 3 + k + x) = [sending_data]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n  ack (t + 3 + k) = [sending_data]\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]", "by (simp add: Gateway_L8)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg19"], ["proof (chain)\npicking this:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]", "have sg19a:\"ack (t + 3 + k + d + d) = [sending_data]\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k + d + d) = [sending_data]", "by auto"], ["proof (state)\nthis:\n  ack (t + 3 + k + d + d) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg16"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d. lose (t + j + Suc (3 + k)) = [False]", "have sg20a:\"\\<forall>j\\<le> d. lose (t + 3 + k + d + (Suc j)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d. lose (t + j + Suc (3 + k)) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>d. lose (t + 3 + k + d + Suc j) = [False]", "by (rule streamValue10)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>d. lose (t + 3 + k + d + Suc j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg20b:\"3 + k + d \\<le> 2 * d + (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 + k + d \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  3 + k + d \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14 and sg20b"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  3 + k + d \\<le> 2 * d + (4 + k)", "have sg20c:\"lose (t + 3 + k + d) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  3 + k + d \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + 3 + k + d) = [False]", "by (rule aux4lose2)"], ["proof (state)\nthis:\n  lose (t + 3 + k + d) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg20a and sg20c"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>d. lose (t + 3 + k + d + Suc j) = [False]\n  lose (t + 3 + k + d) = [False]", "have sg20:\"\\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>d. lose (t + 3 + k + d + Suc j) = [False]\n  lose (t + 3 + k + d) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]", "by (rule streamValue8)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h4 and h5 and h6 and h7 and h3"], ["proof (chain)\npicking this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc", "have sg21:\n     \"ack (t + 3 + k + d + d) = [sending_data] \\<and> \n      a (Suc (t + 3 + k + d)) = [sc_ack] \\<and> \n      (\\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]) \\<longrightarrow>\n      vc (Suc (t + 3 + k + d + d)) = [vc_com]\""], ["proof (prove)\nusing this:\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  GatewayReq req dt a stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k + d + d) = [sending_data] \\<and>\n    a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n    (\\<forall>j\\<le>Suc d.\n        lose (t + 3 + k + d + j) = [False]) \\<longrightarrow>\n    vc (Suc (t + 3 + k + d + d)) = [vc_com]", "apply (simp only: GatewayReq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>msg (Suc 0) req; msg (Suc 0) stop; msg (Suc 0) a; ts lose;\n     msg 1 req \\<and>\n     msg 1 a \\<and> msg 1 stop \\<and> True \\<longrightarrow>\n     (\\<forall>t.\n         (ack t = [init_state] \\<and>\n          req (Suc t) = [init] \\<and>\n          lose (t + 1) = [False] \\<and>\n          lose (t + 2) = [False] \\<longrightarrow>\n          ack (t + 2) = [connection_ok]) \\<and>\n         (ack t = [connection_ok] \\<and>\n          req (Suc t) = [send] \\<and>\n          (\\<forall>k\\<le>d + 1. lose (t + k) = [False]) \\<longrightarrow>\n          i (Suc t + d) = inf_last_ti dt t \\<and>\n          ack (Suc t) = [sending_data]) \\<and>\n         (ack (t + d) = [sending_data] \\<and>\n          a (Suc t) = [sc_ack] \\<and>\n          (\\<forall>k\\<le>d + 1. lose (t + k) = [False]) \\<longrightarrow>\n          vc (Suc t + d) = [vc_com]))\\<rbrakk>\n    \\<Longrightarrow> ack (t + 3 + k + d + d) = [sending_data] \\<and>\n                      a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n                      (\\<forall>j\\<le>Suc d.\n                          lose (t + 3 + k + d + j) =\n                          [False]) \\<longrightarrow>\n                      vc (Suc (t + 3 + k + d + d)) = [vc_com]", "by (rule GatewaySystem_L1aux, auto)"], ["proof (state)\nthis:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>j\\<le>Suc d.\n      lose (t + 3 + k + d + j) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h2 and sg11"], ["proof (chain)\npicking this:\n  ServiceCenter i a\n  i (t + 3 + k + d) \\<noteq> []", "have sg22:\"a (Suc (t + 3 + k + d)) = [sc_ack]\""], ["proof (prove)\nusing this:\n  ServiceCenter i a\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. a (Suc (t + 3 + k + d)) = [sc_ack]", "by (simp only: ServiceCenter_def, auto)"], ["proof (state)\nthis:\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg21 and sg19a and sg22 and sg20"], ["proof (chain)\npicking this:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>j\\<le>Suc d.\n      lose (t + 3 + k + d + j) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  ack (t + 3 + k + d + d) = [sending_data]\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n  \\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]", "have sg23:\n     \"vc (Suc (t + 3 + k + d + d)) = [vc_com]\""], ["proof (prove)\nusing this:\n  ack (t + 3 + k + d + d) = [sending_data] \\<and>\n  a (Suc (t + 3 + k + d)) = [sc_ack] \\<and>\n  (\\<forall>j\\<le>Suc d.\n      lose (t + 3 + k + d + j) = [False]) \\<longrightarrow>\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  ack (t + 3 + k + d + d) = [sending_data]\n  a (Suc (t + 3 + k + d)) = [sc_ack]\n  \\<forall>j\\<le>Suc d. lose (t + 3 + k + d + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (Suc (t + 3 + k + d + d)) = [vc_com]", "by simp"], ["proof (state)\nthis:\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"2 * d + (t + (4 + k)) = (Suc (t + 3 + k + d + d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * d + (t + (4 + k)) = Suc (t + 3 + k + d + d)", "by arith"], ["proof (state)\nthis:\n  2 * d + (t + (4 + k)) = Suc (t + 3 + k + d + d)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg23 and this"], ["proof (chain)\npicking this:\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  2 * d + (t + (4 + k)) = Suc (t + 3 + k + d + d)", "show ?thesis"], ["proof (prove)\nusing this:\n  vc (Suc (t + 3 + k + d + d)) = [vc_com]\n  2 * d + (t + (4 + k)) = Suc (t + 3 + k + d + d)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "by (simp (no_asm_simp), simp)"], ["proof (state)\nthis:\n  vc (2 * d + (t + (4 + k))) = [vc_com]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GatewaySystem_L3:\n assumes h1:\"Gateway req dt a stop lose d ack i vc\"\n     and h2:\"ServiceCenter i a\"\n     and h3:\"GatewayReq req dt a stop lose d ack i vc\"\n     and h4:\"msg (Suc 0) req\"\n     and h5:\"msg (Suc 0) stop\"\n     and h6:\"msg (Suc 0) a\"\n     and h7:\"ts lose\"\n     and h8: \"dt (Suc t) \\<noteq> [] \\<or> dt (Suc (Suc t)) \\<noteq> []\"\n     and h9: \"ack t = [init_state]\"\n     and h10:\"req (Suc t) = [init]\"\n     and h11:\"\\<forall>t1\\<le>t. req t1 = []\"\n     and h12:\"\\<forall>m \\<le> k + 2. req (t + m) \\<noteq> [send]\" \n     and h13:\"req (t + 3 + k) = [send]\"\n     and h14:\"\\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\"\n shows \"vc (2 * d + (t + (4 + k))) = [vc_com]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"Suc 0 \\<le> 2 * d + (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  Suc 0 \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc 0 \\<le> 2 * d + (4 + k)", "have \"lose (t + Suc 0) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc 0 \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + Suc 0) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc 0) = [False]", "have sg1:\"lose (Suc t) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc 0) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc t) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc t) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have \"Suc (Suc 0) \\<le> 2 * d + (4 + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc 0) \\<le> 2 * d + (4 + k)", "by arith"], ["proof (state)\nthis:\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14 and this"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)", "have \"lose (t + Suc (Suc 0)) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  Suc (Suc 0) \\<le> 2 * d + (4 + k)\n\ngoal (1 subgoal):\n 1. lose (t + Suc (Suc 0)) = [False]", "by blast"], ["proof (state)\nthis:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "then"], ["proof (chain)\npicking this:\n  lose (t + Suc (Suc 0)) = [False]", "have sg2:\"lose (Suc (Suc t)) = [False]\""], ["proof (prove)\nusing this:\n  lose (t + Suc (Suc 0)) = [False]\n\ngoal (1 subgoal):\n 1. lose (Suc (Suc t)) = [False]", "by simp"], ["proof (state)\nthis:\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7 and h10 and h9 and sg1 and sg2"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (Suc t) = [init]\n  ack t = [init_state]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]", "have sg3:\n   \"ack (t + 2) = [connection_ok]\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (Suc t) = [init]\n  ack t = [init_state]\n  lose (Suc t) = [False]\n  lose (Suc (Suc t)) = [False]\n\ngoal (1 subgoal):\n 1. ack (t + 2) = [connection_ok]", "by (simp add: GatewayReq_def)"], ["proof (state)\nthis:\n  ack (t + 2) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg4:\" \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>k. lose (t + 2 + j) = [False]", "by (clarify, rule aux4lose1, simp)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h12"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]", "have sg5:\"\\<forall>m \\<le> k. req (t + 2 + m) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]", "by (clarify, rule aux4req, auto)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* stable connection *)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and sg5 and sg4 and sg3 and h4 and h5 and h6 and h7"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose", "have sg6:\n   \"\\<forall>m \\<le> k. ack (t + 2 + m) = [connection_ok]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  \\<forall>m\\<le>k. req (t + 2 + m) \\<noteq> [send]\n  \\<forall>j\\<le>k. lose (t + 2 + j) = [False]\n  ack (t + 2) = [connection_ok]\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "by (rule Gateway_L6)"], ["proof (state)\nthis:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg6"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg6a:\"ack (t + 2 + k) = [connection_ok]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok]", "by simp"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* sending data*)"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7 and h13 and h14 and sg6"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]", "have sg10:\n   \"ack (t + 3 + k) = [sending_data]\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (t + 3 + k) = [send]\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  \\<forall>m\\<le>k. ack (t + 2 + m) = [connection_ok]\n\ngoal (1 subgoal):\n 1. ack (t + 3 + k) = [sending_data]", "by (simp add: GatewayReq_L1)"], ["proof (state)\nthis:\n  ack (t + 3 + k) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h3 and h4 and h5 and h6 and h7"], ["proof (chain)\npicking this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose", "have sg11a:\n   \"ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and> \n    (\\<forall>j\\<le>Suc d. lose ((t + 2 + k) + j) = [False]) \\<longrightarrow>\n    i (Suc (t + (2::nat) + k + d)) = inf_last_ti dt (t + 2 + k)\""], ["proof (prove)\nusing this:\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n\ngoal (1 subgoal):\n 1. ack (t + 2 + k) = [connection_ok] \\<and>\n    req (Suc (t + 2 + k)) = [send] \\<and>\n    (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n    i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "apply (simp only: GatewayReq_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>msg 1 req \\<and>\n             msg 1 a \\<and> msg 1 stop \\<and> True \\<longrightarrow>\n             (\\<forall>t.\n                 (ack t = [init_state] \\<and>\n                  req (Suc t) = [init] \\<and>\n                  lose (t + 1) = [False] \\<and>\n                  lose (t + 2) = [False] \\<longrightarrow>\n                  ack (t + 2) = [connection_ok]) \\<and>\n                 (ack t = [connection_ok] \\<and>\n                  req (Suc t) = [send] \\<and>\n                  (\\<forall>k\\<le>d + 1.\n                      lose (t + k) = [False]) \\<longrightarrow>\n                  i (Suc t + d) = inf_last_ti dt t \\<and>\n                  ack (Suc t) = [sending_data]) \\<and>\n                 (ack (t + d) = [sending_data] \\<and>\n                  a (Suc t) = [sc_ack] \\<and>\n                  (\\<forall>k\\<le>d + 1.\n                      lose (t + k) = [False]) \\<longrightarrow>\n                  vc (Suc t + d) = [vc_com]));\n     msg (Suc 0) req; msg (Suc 0) stop; msg (Suc 0) a; ts lose\\<rbrakk>\n    \\<Longrightarrow> ack (t + 2 + k) = [connection_ok] \\<and>\n                      req (Suc (t + 2 + k)) = [send] \\<and>\n                      (\\<forall>j\\<le>Suc d.\n                          lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n                      i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "by (rule GatewaySystem_L3aux, auto)"], ["proof (state)\nthis:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "have sg12:\"Suc (t + 2 + k) = t + 3 + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (t + 2 + k) = t + 3 + k", "by arith"], ["proof (state)\nthis:\n  Suc (t + 2 + k) = t + 3 + k\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h13 and sg12"], ["proof (chain)\npicking this:\n  req (t + 3 + k) = [send]\n  Suc (t + 2 + k) = t + 3 + k", "have sg12a:\"req (Suc (t + 2 + k)) = [send]\""], ["proof (prove)\nusing this:\n  req (t + 3 + k) = [send]\n  Suc (t + 2 + k) = t + 3 + k\n\ngoal (1 subgoal):\n 1. req (Suc (t + 2 + k)) = [send]", "by (simp add: eval_nat_numeral)"], ["proof (state)\nthis:\n  req (Suc (t + 2 + k)) = [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg13:\"\\<forall>j\\<le>Suc d. lose ((t + 2 + k) + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]", "by (rule streamValue12)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg11a and sg6a and h13 and sg12a and sg13"], ["proof (chain)\npicking this:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  ack (t + 2 + k) = [connection_ok]\n  req (t + 3 + k) = [send]\n  req (Suc (t + 2 + k)) = [send]\n  \\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]", "have sg14:\n    \"i (Suc (t + (2::nat) + k + d)) = inf_last_ti dt (t + 2 + k)\""], ["proof (prove)\nusing this:\n  ack (t + 2 + k) = [connection_ok] \\<and>\n  req (Suc (t + 2 + k)) = [send] \\<and>\n  (\\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]) \\<longrightarrow>\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  ack (t + 2 + k) = [connection_ok]\n  req (t + 3 + k) = [send]\n  req (Suc (t + 2 + k)) = [send]\n  \\<forall>j\\<le>Suc d. lose (t + 2 + k + j) = [False]\n\ngoal (1 subgoal):\n 1. i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)", "by simp"], ["proof (state)\nthis:\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h8"], ["proof (chain)\npicking this:\n  dt (Suc t) \\<noteq> [] \\<or> dt (Suc (Suc t)) \\<noteq> []", "have sg15:\"inf_last_ti dt (t + 2 + k) \\<noteq> []\""], ["proof (prove)\nusing this:\n  dt (Suc t) \\<noteq> [] \\<or> dt (Suc (Suc t)) \\<noteq> []\n\ngoal (1 subgoal):\n 1. inf_last_ti dt (t + 2 + k) \\<noteq> []", "by (rule inf_last_ti_Suc2)"], ["proof (state)\nthis:\n  inf_last_ti dt (t + 2 + k) \\<noteq> []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from sg14 and sg15"], ["proof (chain)\npicking this:\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  inf_last_ti dt (t + 2 + k) \\<noteq> []", "have sg16: \"i (t + 3 + k + d) \\<noteq> []\""], ["proof (prove)\nusing this:\n  i (Suc (t + 2 + k + d)) = inf_last_ti dt (t + 2 + k)\n  inf_last_ti dt (t + 2 + k) \\<noteq> []\n\ngoal (1 subgoal):\n 1. i (t + 3 + k + d) \\<noteq> []", "by (simp add: arith_sum4)"], ["proof (state)\nthis:\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "(* waiting for sc-ack *)"], ["proof (state)\nthis:\n  i (t + 3 + k + d) \\<noteq> []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg17:\"\\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]", "by auto"], ["proof (state)\nthis:\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h12"], ["proof (chain)\npicking this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]", "have sg18:\"\\<forall>m < (k + 3). req (t + m) \\<noteq> [send]\""], ["proof (prove)\nusing this:\n  \\<forall>m\\<le>k + 2. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. \\<forall>m<k + 3. req (t + m) \\<noteq> [send]", "by auto"], ["proof (state)\nthis:\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and h4 and h5 and h6 and h7 and h10 and sg18 and h13 and h9 and sg17 and h11"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  req (t + 3 + k) = [send]\n  ack t = [init_state]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  \\<forall>t1\\<le>t. req t1 = []", "have sg19:\"\\<forall> t2 < (t + 3 + k + d). i t2 = []\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  req (Suc t) = [init]\n  \\<forall>m<k + 3. req (t + m) \\<noteq> [send]\n  req (t + 3 + k) = [send]\n  ack t = [init_state]\n  \\<forall>j\\<le>k + d + 3. lose (t + j) = [False]\n  \\<forall>t1\\<le>t. req t1 = []\n\ngoal (1 subgoal):\n 1. \\<forall>t2<t + 3 + k + d. i t2 = []", "by (simp add: Gateway_L7)"], ["proof (state)\nthis:\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h2 and sg19"], ["proof (chain)\npicking this:\n  ServiceCenter i a\n  \\<forall>t2<t + 3 + k + d. i t2 = []", "have sg20:\"\\<forall> t3 \\<le> (t + 3 + k + d). a t3 = []\""], ["proof (prove)\nusing this:\n  ServiceCenter i a\n  \\<forall>t2<t + 3 + k + d. i t2 = []\n\ngoal (1 subgoal):\n 1. \\<forall>t3\\<le>t + 3 + k + d. a t3 = []", "by (simp add: ServiceCenter_L2)"], ["proof (state)\nthis:\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h14"], ["proof (chain)\npicking this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]", "have sg21:\"\\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]", "by (simp add: streamValue43)"], ["proof (state)\nthis:\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h1 and h4 and h5 and h6 and h7 and sg21 and sg10 and sg20"], ["proof (chain)\npicking this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n  ack (t + 3 + k) = [sending_data]\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []", "have \n    \"\\<forall>x \\<le> d + d. ack (t + 3 + k + x) = [sending_data]\""], ["proof (prove)\nusing this:\n  Gateway req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d. lose (t + 3 + k + j) = [False]\n  ack (t + 3 + k) = [sending_data]\n  \\<forall>t3\\<le>t + 3 + k + d. a t3 = []\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]", "by (simp add: Gateway_L8)"], ["proof (state)\nthis:\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "from h2 and h3 and h4 and h5 and h6 and h7 and h14 and sg16 and this"], ["proof (chain)\npicking this:\n  ServiceCenter i a\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  i (t + 3 + k + d) \\<noteq> []\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]", "show ?thesis"], ["proof (prove)\nusing this:\n  ServiceCenter i a\n  GatewayReq req dt a stop lose d ack i vc\n  msg (Suc 0) req\n  msg (Suc 0) stop\n  msg (Suc 0) a\n  ts lose\n  \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\n  i (t + 3 + k + d) \\<noteq> []\n  \\<forall>x\\<le>d + d. ack (t + 3 + k + x) = [sending_data]\n\ngoal (1 subgoal):\n 1. vc (2 * d + (t + (4 + k))) = [vc_com]", "by (simp add: GatewaySystem_L1)"], ["proof (state)\nthis:\n  vc (2 * d + (t + (4 + k))) = [vc_com]\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of the Refinement for the Gateway System\\<close>"], ["", "lemma GatewaySystem_L0:\n assumes \"GatewaySystem req dt stop lose d ack vc\"\n shows    \"GatewaySystemReq req dt stop lose d ack vc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "from assms"], ["proof (chain)\npicking this:\n  GatewaySystem req dt stop lose d ack vc", "obtain x i where\n    a1:\"Gateway req dt x stop lose d ack i vc\" and \n    a2:\"ServiceCenter i x\""], ["proof (prove)\nusing this:\n  GatewaySystem req dt stop lose d ack vc\n\ngoal (1 subgoal):\n 1. (\\<And>x i.\n        \\<lbrakk>Gateway req dt x stop lose d ack i vc;\n         ServiceCenter i x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: GatewaySystem_def, auto)"], ["proof (state)\nthis:\n  Gateway req dt x stop lose d ack i vc\n  ServiceCenter i x\n\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "from a1"], ["proof (chain)\npicking this:\n  Gateway req dt x stop lose d ack i vc", "have sg1:\"GatewayReq req dt x stop lose d ack i vc\""], ["proof (prove)\nusing this:\n  Gateway req dt x stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. GatewayReq req dt x stop lose d ack i vc", "by (simp add: Gateway_L0)"], ["proof (state)\nthis:\n  GatewayReq req dt x stop lose d ack i vc\n\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "from a2"], ["proof (chain)\npicking this:\n  ServiceCenter i x", "have sg2:\"msg (Suc 0) x\""], ["proof (prove)\nusing this:\n  ServiceCenter i x\n\ngoal (1 subgoal):\n 1. msg (Suc 0) x", "by (simp add: ServiceCenter_a_msg)"], ["proof (state)\nthis:\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "from assms and a1 and a2 and sg1 and sg2"], ["proof (chain)\npicking this:\n  GatewaySystem req dt stop lose d ack vc\n  Gateway req dt x stop lose d ack i vc\n  ServiceCenter i x\n  GatewayReq req dt x stop lose d ack i vc\n  msg (Suc 0) x", "show ?thesis"], ["proof (prove)\nusing this:\n  GatewaySystem req dt stop lose d ack vc\n  Gateway req dt x stop lose d ack i vc\n  ServiceCenter i x\n  GatewayReq req dt x stop lose d ack i vc\n  msg (Suc 0) x\n\ngoal (1 subgoal):\n 1. GatewaySystemReq req dt stop lose d ack vc", "apply (simp add: GatewaySystemReq_def, auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) \\<noteq> [];\n        dt (Suc (Suc t)) \\<noteq> []; ack t = [init_state];\n        req (Suc t) = [init]; \\<forall>t1\\<le>t. req t1 = [];\n        req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 2. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) \\<noteq> [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 3. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) \\<noteq> []; ack t = [init_state];\n        req (Suc t) = [init]; \\<forall>t1\\<le>t. req t1 = [];\n        req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 4. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send]; inf_last_ti dt t \\<noteq> [];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]", "apply (simp add: GatewaySystem_L3)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) \\<noteq> [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 2. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) \\<noteq> []; ack t = [init_state];\n        req (Suc t) = [init]; \\<forall>t1\\<le>t. req t1 = [];\n        req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 3. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send]; inf_last_ti dt t \\<noteq> [];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]", "apply (simp add: GatewaySystem_L3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) \\<noteq> []; ack t = [init_state];\n        req (Suc t) = [init]; \\<forall>t1\\<le>t. req t1 = [];\n        req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]\n 2. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send]; inf_last_ti dt t \\<noteq> [];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]", "apply (simp add: GatewaySystem_L3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t k.\n       \\<lbrakk>GatewaySystem req dt stop lose d ack vc;\n        Gateway req dt x stop lose d ack i vc; ServiceCenter i x;\n        GatewayReq req dt x stop lose d ack i vc; msg (Suc 0) x;\n        msg (Suc 0) req; msg (Suc 0) stop; ts lose; dt (Suc t) = [];\n        dt (Suc (Suc t)) = []; ack t = [init_state]; req (Suc t) = [init];\n        \\<forall>t1\\<le>t. req t1 = []; req (Suc (Suc t)) = [];\n        \\<forall>m<k + 3. req (t + m) \\<noteq> [send];\n        req (t + 3 + k) = [send]; inf_last_ti dt t \\<noteq> [];\n        \\<forall>j\\<le>2 * d + (4 + k). lose (t + j) = [False]\\<rbrakk>\n       \\<Longrightarrow> vc (2 * d + (t + (4 + k))) = [vc_com]", "by (simp add: GatewaySystem_L2)"], ["proof (state)\nthis:\n  GatewaySystemReq req dt stop lose d ack vc\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}