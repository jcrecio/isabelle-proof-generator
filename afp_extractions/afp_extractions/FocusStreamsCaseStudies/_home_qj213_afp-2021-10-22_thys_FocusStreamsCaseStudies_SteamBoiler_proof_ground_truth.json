{"file_name": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies/SteamBoiler_proof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies", "problem_names": ["lemma L1_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\"\n  shows \"ts s\"", "lemma L2_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\"\n  shows \"ts y\"", "lemma L3_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\" \n  shows \"200 \\<le> hd (s 0)\"", "lemma L4_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\" \n  shows \"hd (s 0) \\<le> 800\"", "lemma L5_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) = Zero\"\n  shows \"(hd (s j)) \\<le> hd (s (Suc j)) + (10::nat)\"", "lemma L6_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) = Zero\"\n  shows \"(hd (s j)) - (10::nat) \\<le> hd (s (Suc j))\"", "lemma L7_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n      and h2:\"ts x\" \n      and h3:\"hd (x j) \\<noteq> Zero\"\n  shows \"(hd (s j)) \\<ge> hd (s (Suc j)) - (10::nat)\"", "lemma L8_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) \\<noteq> Zero\"\n  shows \"(hd (s j)) + (10::nat) \\<ge> hd (s (Suc j))\"", "lemma L1_Controller:\n  assumes \"Controller_L s (fin_inf_append [Zero] l) l z\"\n  shows    \"fin_make_untimed (inf_truncate z i) \\<noteq> []\"", "lemma L2_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l t = Zero\"\n         and \"300 < hd (y (Suc t))\"\n  shows    \"z (Suc t) = []\"", "lemma L2_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n          and \"l t = One\"\n          and \"hd (y (Suc t)) < 700\"\n  shows \"z (Suc t) = []\"", "lemma L3_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l t = Zero\"\n         and \"\\<not> 300 < hd (y (Suc t))\"\n  shows \"z (Suc t) = [One]\"", "lemma L3_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and \"l t = One\"\n      and \"\\<not> hd (y (Suc t)) < 700\"\n  shows      \"z (Suc t) = [Zero]\"", "lemma L4_Controller_Zero:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and h2:\"l (Suc t) = Zero\" \n  shows      \"(z (Suc t) = [] \\<and> l t = Zero) \\<or> (z (Suc t) = [Zero] \\<and> l t = One)\"", "lemma L4_Controller_One:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and h2:\"l (Suc t) = One\" \n  shows      \"(z (Suc t) = [] \\<and> l t = One) \\<or> (z (Suc t) = [One] \\<and> l t = Zero)\"", "lemma L5_Controller_Zero:\n  assumes h1:\"Controller_L y lIn lOut z\"\n      and h2:\"lOut t = Zero\"\n      and h3:\"z t = []\"\n  shows \"lIn t = Zero\"", "lemma L5_Controller_One:\n  assumes h1:\"Controller_L y lIn lOut z\"\n      and h2:\"lOut t = One\"\n      and h3:\"z t = []\"\n  shows \"lIn t = One\"", "lemma L5_Controller:\n  assumes \"Controller_L y lIn lOut z\"\n         and \"lOut t = a\"\n         and \"z t = []\"\n  shows \"lIn t = a\"", "lemma L6_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = Zero\"\n         and \"z (Suc t) = []\"\n  shows \"l t = Zero\"", "lemma L6_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = One\"\n         and \"z (Suc t) = []\"\n  shows \"l t = One\"", "lemma L6_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = a\"\n         and \"z (Suc t) = []\"\n  shows \"l t = a\"", "lemma L7_Controller_Zero:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and h2:\"l t = Zero\"\n  shows      \"last (fin_make_untimed (inf_truncate z t)) = Zero\"", "lemma L7_Controller_One_l0:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\" \n         and \"y 0 = [500::nat]\"\n  shows    \"l 0 = Zero\"", "lemma L7_Controller_One:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and h2:\"l t = One\"\n      and h3:\"y 0 = [500::nat]\"\n  shows \"last (fin_make_untimed (inf_truncate z t)) = One\"", "lemma L7_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"y 0 = [500::nat]\"\n  shows      \"last (fin_make_untimed (inf_truncate z t)) =  l t\"", "lemma L8_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n  shows    \"z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\"", "lemma L9_Controller:\n  assumes h1:\"Controller_L s (fin_inf_append [Zero] l) l z\"\n         and h2:\"fin_make_untimed (inf_truncate z i) !\n              (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =  Zero\"\n         and h3:\"last (fin_make_untimed (inf_truncate z i)) = l i\"\n         and h5:\"hd (s (Suc i)) = hd (s i) - r\"\n         and h6:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\"\n         and h8:\"r \\<le> 10\"\n  shows \"200 \\<le> hd (s (Suc i))\"", "lemma L10_Controller:\n  assumes h1:\"Controller_L s (fin_inf_append [Zero] l) l z\"\n      and h2:\"fin_make_untimed (inf_truncate z i) !\n              (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>  Zero\"\n      and h3:\"last (fin_make_untimed (inf_truncate z i)) = l i\"\n      and h5:\"hd (s (Suc i)) = hd (s i) + r\"\n      and h6:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\"\n      and h8:\"r \\<le> 10\"\n  shows \"hd (s (Suc i)) \\<le> 800\"", "lemma L1_Converter:\n  assumes \"Converter z x\"\n         and \"fin_make_untimed (inf_truncate z t) \\<noteq> []\"\n  shows      \"hd (x t) = (fin_make_untimed (inf_truncate z t)) ! \n                 ((length (fin_make_untimed (inf_truncate z t))) - (1::nat))\"", "lemma L1a_Converter:\n  assumes \"Converter z x\"\n         and \"fin_make_untimed (inf_truncate z t) \\<noteq> []\"\n         and \"hd (x t) = Zero\"\n  shows      \"(fin_make_untimed (inf_truncate z t)) ! \n                 ((length (fin_make_untimed (inf_truncate z t))) - (1::nat)) \n              = Zero\"", "lemma L1_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"ts s\"", "lemma L2_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"(200::nat) \\<le> hd (s i)\"", "lemma L3_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"hd (s i) \\<le> (800:: nat)\"", "lemma L0_ControlSystem:\n  assumes h1:\"ControlSystemArch s\"\n  shows   \"ControlSystem s\""], "translations": [["", "lemma L1_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\"\n  shows \"ts s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts s", "using assms"], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. ts s", "by (simp add: SteamBoiler_def)"], ["", "lemma L2_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\"\n  shows \"ts y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts y", "using assms"], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. ts y", "by (simp add: SteamBoiler_def)"], ["", "lemma L3_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\" \n  shows \"200 \\<le> hd (s 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s 0)", "using assms"], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s 0)", "by (simp add: SteamBoiler_def)"], ["", "lemma L4_Boiler:\n  assumes \"SteamBoiler x s y\"\n         and \"ts x\" \n  shows \"hd (s 0) \\<le> 800\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s 0) \\<le> 800", "using assms"], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. hd (s 0) \\<le> 800", "by (simp add: SteamBoiler_def)"], ["", "lemma L5_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) = Zero\"\n  shows \"(hd (s j)) \\<le> hd (s (Suc j)) + (10::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s j) \\<le> hd (s (Suc j)) + 10", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s j) \\<le> hd (s (Suc j)) + 10", "from h1 and h2"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n     a1:\"r \\<le> 10\"  and\n     a2:\"hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<le> 10;\n         hd (s (Suc j)) =\n         (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  r \\<le> 10\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n\ngoal (1 subgoal):\n 1. hd (s j) \\<le> hd (s (Suc j)) + 10", "from a2 and h3"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) = Zero", "have \"hd (s (Suc j)) = hd (s j) - r\""], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) = Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) = hd (s j) - r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc j)) = hd (s j) - r\n\ngoal (1 subgoal):\n 1. hd (s j) \\<le> hd (s (Suc j)) + 10", "from this and a1"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = hd (s j) - r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = hd (s j) - r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s j) \\<le> hd (s (Suc j)) + 10", "by auto"], ["proof (state)\nthis:\n  hd (s j) \\<le> hd (s (Suc j)) + 10\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L6_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) = Zero\"\n  shows \"(hd (s j)) - (10::nat) \\<le> hd (s (Suc j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s j) - 10 \\<le> hd (s (Suc j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s j) - 10 \\<le> hd (s (Suc j))", "from h1 and h2"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n     a1:\"r \\<le> 10\"  and\n     a2:\"hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<le> 10;\n         hd (s (Suc j)) =\n         (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  r \\<le> 10\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n\ngoal (1 subgoal):\n 1. hd (s j) - 10 \\<le> hd (s (Suc j))", "from a2 and h3"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) = Zero", "have \"hd (s (Suc j)) = hd (s j) - r\""], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) = Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) = hd (s j) - r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc j)) = hd (s j) - r\n\ngoal (1 subgoal):\n 1. hd (s j) - 10 \\<le> hd (s (Suc j))", "from this and a1"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = hd (s j) - r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = hd (s j) - r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s j) - 10 \\<le> hd (s (Suc j))", "by auto"], ["proof (state)\nthis:\n  hd (s j) - 10 \\<le> hd (s (Suc j))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L7_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n      and h2:\"ts x\" \n      and h3:\"hd (x j) \\<noteq> Zero\"\n  shows \"(hd (s j)) \\<ge> hd (s (Suc j)) - (10::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc j)) - 10 \\<le> hd (s j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s (Suc j)) - 10 \\<le> hd (s j)", "from h1 and h2"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n     a1:\"r \\<le> 10\"  and\n     a2:\"hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<le> 10;\n         hd (s (Suc j)) =\n         (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  r \\<le> 10\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) - 10 \\<le> hd (s j)", "from a2 and h3"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) \\<noteq> Zero", "have \"hd (s (Suc j)) = hd (s j) + r\""], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) = hd (s j) + r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc j)) = hd (s j) + r\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) - 10 \\<le> hd (s j)", "from this and a1"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = hd (s j) + r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = hd (s j) + r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) - 10 \\<le> hd (s j)", "by auto"], ["proof (state)\nthis:\n  hd (s (Suc j)) - 10 \\<le> hd (s j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L8_Boiler:\n  assumes h1:\"SteamBoiler x s y\"\n         and h2:\"ts x\" \n         and h3:\"hd (x j) \\<noteq> Zero\"\n  shows \"(hd (s j)) + (10::nat) \\<ge> hd (s (Suc j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc j)) \\<le> hd (s j) + 10", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s (Suc j)) \\<le> hd (s j) + 10", "from h1 and h2"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n     a1:\"r \\<le> 10\"  and\n     a2:\"hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>r \\<le> 10;\n         hd (s (Suc j)) =\n         (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  r \\<le> 10\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) \\<le> hd (s j) + 10", "from a2 and h3"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) \\<noteq> Zero", "have \"hd (s (Suc j)) = hd (s j) + r\""], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = (if hd (x j) = Zero then hd (s j) - r else hd (s j) + r)\n  hd (x j) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) = hd (s j) + r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc j)) = hd (s j) + r\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) \\<le> hd (s j) + 10", "from this and a1"], ["proof (chain)\npicking this:\n  hd (s (Suc j)) = hd (s j) + r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc j)) = hd (s j) + r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s (Suc j)) \\<le> hd (s j) + 10", "by auto"], ["proof (state)\nthis:\n  hd (s (Suc j)) \\<le> hd (s j) + 10\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Properties of the Controller Component\\<close>"], ["", "lemma L1_Controller:\n  assumes \"Controller_L s (fin_inf_append [Zero] l) l z\"\n  shows    \"fin_make_untimed (inf_truncate z i) \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) \\<noteq> []", "using assms"], ["proof (prove)\nusing this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) \\<noteq> []", "by (metis Controller_L_def fin_make_untimed_inf_truncate_Nonempty_all0a)"], ["", "lemma L2_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l t = Zero\"\n         and \"300 < hd (y (Suc t))\"\n  shows    \"z (Suc t) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = []", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = Zero\n  300 < hd (y (Suc t))\n\ngoal (1 subgoal):\n 1. z (Suc t) = []", "by (metis Controller_L_def correct_fin_inf_append1)"], ["", "lemma L2_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n          and \"l t = One\"\n          and \"hd (y (Suc t)) < 700\"\n  shows \"z (Suc t) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = []", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = One\n  hd (y (Suc t)) < 700\n\ngoal (1 subgoal):\n 1. z (Suc t) = []", "by (metis Controller_L_def bit.distinct(1) correct_fin_inf_append2)"], ["", "lemma L3_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l t = Zero\"\n         and \"\\<not> 300 < hd (y (Suc t))\"\n  shows \"z (Suc t) = [One]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [One]", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = Zero\n  \\<not> 300 < hd (y (Suc t))\n\ngoal (1 subgoal):\n 1. z (Suc t) = [One]", "by (metis Controller_L_def correct_fin_inf_append1)"], ["", "lemma L3_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and \"l t = One\"\n      and \"\\<not> hd (y (Suc t)) < 700\"\n  shows      \"z (Suc t) = [Zero]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [Zero]", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = One\n  \\<not> hd (y (Suc t)) < 700\n\ngoal (1 subgoal):\n 1. z (Suc t) = [Zero]", "by (metis Controller_L_def bit.distinct(1) correct_fin_inf_append1)"], ["", "lemma L4_Controller_Zero:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and h2:\"l (Suc t) = Zero\" \n  shows      \"(z (Suc t) = [] \\<and> l t = Zero) \\<or> (z (Suc t) = [Zero] \\<and> l t = One)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "proof (cases \"l t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l t = Zero \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a1:\"l t = Zero\""], ["proof (state)\nthis:\n  l t = Zero\n\ngoal (2 subgoals):\n 1. l t = Zero \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and h1 and h2"], ["proof (chain)\npicking this:\n  l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "from a1"], ["proof (chain)\npicking this:\n  l t = Zero", "have sg1:\"fin_inf_append [Zero] l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  l t = Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l (Suc t) = Zero", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [Zero] l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "from h1 and sg1"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) = Zero", "have sg2:\n      \"if 300 < hd (y (Suc t)) \n       then z (Suc t) = [] \\<and> l (Suc t) = Zero \n       else z (Suc t) = [One] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n    else z (Suc t) = [One] \\<and> l (Suc t) = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "proof (cases \"300 < hd (y (Suc t))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a11:\"300 < hd (y (Suc t))\""], ["proof (state)\nthis:\n  300 < hd (y (Suc t))\n\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from a11 and sg2"], ["proof (chain)\npicking this:\n  300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One", "have sg3:\"z (Suc t) = [] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l (Suc t) = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n  l t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n  l t = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a12:\"\\<not> 300 < hd (y (Suc t))\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (y (Suc t))\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from a12 and sg2"], ["proof (chain)\npicking this:\n  \\<not> 300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One", "have sg4:\"z (Suc t) = [One] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  \\<not> 300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [One] \\<and> l (Suc t) = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and h2"], ["proof (chain)\npicking this:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n  l (Suc t) = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a2:\"l t = One\""], ["proof (state)\nthis:\n  l t = One\n\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and h1 and h2"], ["proof (chain)\npicking this:\n  l t = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  l t = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "from a2"], ["proof (chain)\npicking this:\n  l t = One", "have sg5:\"fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\""], ["proof (prove)\nusing this:\n  l t = One\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l (Suc t) \\<noteq> Zero", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "from h1 and sg5"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero", "have sg6:\n      \"if hd (y (Suc t)) < 700 \n       then z (Suc t) = [] \\<and> l (Suc t) = One \n       else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n    else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = Zero\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = Zero \\<or>\n                      z (Suc t) = [Zero] \\<and> l t = One", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "proof (cases \"hd (y (Suc t)) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a21:\"hd (y (Suc t)) < 700\""], ["proof (state)\nthis:\n  hd (y (Suc t)) < 700\n\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from a21 and sg6"], ["proof (chain)\npicking this:\n  hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "have sg7:\"z (Suc t) = [] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l (Suc t) = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and h2"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n  l (Suc t) = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "assume a22:\"\\<not> hd (y (Suc t)) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (y (Suc t)) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from a22 and sg6"], ["proof (chain)\npicking this:\n  \\<not> hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "have sg8:\"z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  \\<not> hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "from this and a2"], ["proof (chain)\npicking this:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n  l t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n  l t = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L4_Controller_One:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and h2:\"l (Suc t) = One\" \n  shows      \"(z (Suc t) = [] \\<and> l t = One) \\<or> (z (Suc t) = [One] \\<and> l t = Zero)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "proof (cases \"l t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l t = Zero \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a1:\"l t = Zero\""], ["proof (state)\nthis:\n  l t = Zero\n\ngoal (2 subgoals):\n 1. l t = Zero \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and h1 and h2"], ["proof (chain)\npicking this:\n  l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One", "show ?thesis"], ["proof (prove)\nusing this:\n  l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "from a1"], ["proof (chain)\npicking this:\n  l t = Zero", "have sg1:\"fin_inf_append [Zero] l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  l t = Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l (Suc t) = Zero", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [Zero] l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "from h1 and sg1"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) = Zero", "have sg2:\n      \"if 300 < hd (y (Suc t)) \n       then z (Suc t) = [] \\<and> l (Suc t) = Zero \n       else z (Suc t) = [One] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n    else z (Suc t) = [One] \\<and> l (Suc t) = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = Zero; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "proof (cases \"300 < hd (y (Suc t))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a11:\"300 < hd (y (Suc t))\""], ["proof (state)\nthis:\n  300 < hd (y (Suc t))\n\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from a11 and sg2"], ["proof (chain)\npicking this:\n  300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One", "have sg3:\"z (Suc t) = [] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l (Suc t) = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n\ngoal (2 subgoals):\n 1. 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and h2"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n  l (Suc t) = One", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l (Suc t) = Zero\n  l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a12:\"\\<not> 300 < hd (y (Suc t))\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (y (Suc t))\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from a12 and sg2"], ["proof (chain)\npicking this:\n  \\<not> 300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One", "have sg4:\"z (Suc t) = [One] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  \\<not> 300 < hd (y (Suc t))\n  if 300 < hd (y (Suc t)) then z (Suc t) = [] \\<and> l (Suc t) = Zero\n  else z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [One] \\<and> l (Suc t) = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y (Suc t)) \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n  l t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [One] \\<and> l (Suc t) = One\n  l t = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a2:\"l t = One\""], ["proof (state)\nthis:\n  l t = One\n\ngoal (1 subgoal):\n 1. l t = One \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and h1 and h2"], ["proof (chain)\npicking this:\n  l t = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One", "show ?thesis"], ["proof (prove)\nusing this:\n  l t = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "from a2"], ["proof (chain)\npicking this:\n  l t = One", "have sg5:\"fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\""], ["proof (prove)\nusing this:\n  l t = One\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l (Suc t) \\<noteq> Zero", "by (simp add: correct_fin_inf_append1)"], ["proof (state)\nthis:\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "from h1 and sg5"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero", "have sg6:\n      \"if hd (y (Suc t)) < 700 \n       then z (Suc t) = [] \\<and> l (Suc t) = One \n       else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  fin_inf_append [Zero] l (Suc t) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n    else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l t = One; Controller_L y (fin_inf_append [Zero] l) l z;\n     l (Suc t) = One\\<rbrakk>\n    \\<Longrightarrow> z (Suc t) = [] \\<and> l t = One \\<or>\n                      z (Suc t) = [One] \\<and> l t = Zero", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "proof (cases \"hd (y (Suc t)) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a21:\"hd (y (Suc t)) < 700\""], ["proof (state)\nthis:\n  hd (y (Suc t)) < 700\n\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from a21 and sg6"], ["proof (chain)\npicking this:\n  hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "have sg7:\"z (Suc t) = [] \\<and> l (Suc t) = One\""], ["proof (prove)\nusing this:\n  hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l (Suc t) = One", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n\ngoal (2 subgoals):\n 1. hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero\n 2. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and a2"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n  l t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l (Suc t) = One\n  l t = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "assume a22:\"\\<not> hd (y (Suc t)) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (y (Suc t)) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from a22 and sg6"], ["proof (chain)\npicking this:\n  \\<not> hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "have sg8:\"z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\""], ["proof (prove)\nusing this:\n  \\<not> hd (y (Suc t)) < 700\n  if hd (y (Suc t)) < 700 then z (Suc t) = [] \\<and> l (Suc t) = One\n  else z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [Zero] \\<and> l (Suc t) = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<not> hd (y (Suc t)) < 700 \\<Longrightarrow>\n    z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "from this and h2"], ["proof (chain)\npicking this:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n  l (Suc t) = One", "show ?thesis"], ["proof (prove)\nusing this:\n  z (Suc t) = [Zero] \\<and> l (Suc t) = Zero\n  l (Suc t) = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L5_Controller_Zero:\n  assumes h1:\"Controller_L y lIn lOut z\"\n      and h2:\"lOut t = Zero\"\n      and h3:\"z t = []\"\n  shows \"lIn t = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lIn t = Zero", "proof (cases \"lIn t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lIn t = Zero \\<Longrightarrow> lIn t = Zero\n 2. lIn t = One \\<Longrightarrow> lIn t = Zero", "assume a1:\"lIn t = Zero\""], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal (2 subgoals):\n 1. lIn t = Zero \\<Longrightarrow> lIn t = Zero\n 2. lIn t = One \\<Longrightarrow> lIn t = Zero", "from this"], ["proof (chain)\npicking this:\n  lIn t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  lIn t = Zero\n\ngoal (1 subgoal):\n 1. lIn t = Zero", "by simp"], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = Zero", "assume a2:\"lIn t = One\""], ["proof (state)\nthis:\n  lIn t = One\n\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = Zero", "from a2 and h1"], ["proof (chain)\npicking this:\n  lIn t = One\n  Controller_L y lIn lOut z", "have sg1:\n    \"if hd (y t) < 700 \n     then z t = [] \\<and> lOut t = One \n     else z t = [Zero] \\<and> lOut t = Zero\""], ["proof (prove)\nusing this:\n  lIn t = One\n  Controller_L y lIn lOut z\n\ngoal (1 subgoal):\n 1. if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n    else z t = [Zero] \\<and> lOut t = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n  else z t = [Zero] \\<and> lOut t = Zero\n\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = Zero", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lIn t = Zero", "proof (cases \"hd (y t) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (y t) < 700 \\<Longrightarrow> lIn t = Zero\n 2. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "assume a3:\"hd (y t) < 700\""], ["proof (state)\nthis:\n  hd (y t) < 700\n\ngoal (2 subgoals):\n 1. hd (y t) < 700 \\<Longrightarrow> lIn t = Zero\n 2. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "from a3 and sg1"], ["proof (chain)\npicking this:\n  hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n  else z t = [Zero] \\<and> lOut t = Zero", "have \"z t = [] \\<and> lOut t = One\""], ["proof (prove)\nusing this:\n  hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n  else z t = [Zero] \\<and> lOut t = Zero\n\ngoal (1 subgoal):\n 1. z t = [] \\<and> lOut t = One", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<and> lOut t = One\n\ngoal (2 subgoals):\n 1. hd (y t) < 700 \\<Longrightarrow> lIn t = Zero\n 2. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "from this and h2"], ["proof (chain)\npicking this:\n  z t = [] \\<and> lOut t = One\n  lOut t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  z t = [] \\<and> lOut t = One\n  lOut t = Zero\n\ngoal (1 subgoal):\n 1. lIn t = Zero", "by simp"], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "assume a4:\"\\<not> hd (y t) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (y t) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "from a4 and sg1"], ["proof (chain)\npicking this:\n  \\<not> hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n  else z t = [Zero] \\<and> lOut t = Zero", "have \"z t = [Zero] \\<and> lOut t = Zero\""], ["proof (prove)\nusing this:\n  \\<not> hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> lOut t = One\n  else z t = [Zero] \\<and> lOut t = Zero\n\ngoal (1 subgoal):\n 1. z t = [Zero] \\<and> lOut t = Zero", "by simp"], ["proof (state)\nthis:\n  z t = [Zero] \\<and> lOut t = Zero\n\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow> lIn t = Zero", "from this and h3"], ["proof (chain)\npicking this:\n  z t = [Zero] \\<and> lOut t = Zero\n  z t = []", "show ?thesis"], ["proof (prove)\nusing this:\n  z t = [Zero] \\<and> lOut t = Zero\n  z t = []\n\ngoal (1 subgoal):\n 1. lIn t = Zero", "by simp"], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L5_Controller_One:\n  assumes h1:\"Controller_L y lIn lOut z\"\n      and h2:\"lOut t = One\"\n      and h3:\"z t = []\"\n  shows \"lIn t = One\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lIn t = One", "proof (cases \"lIn t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lIn t = Zero \\<Longrightarrow> lIn t = One\n 2. lIn t = One \\<Longrightarrow> lIn t = One", "assume a1:\"lIn t = Zero\""], ["proof (state)\nthis:\n  lIn t = Zero\n\ngoal (2 subgoals):\n 1. lIn t = Zero \\<Longrightarrow> lIn t = One\n 2. lIn t = One \\<Longrightarrow> lIn t = One", "from a1 and h1"], ["proof (chain)\npicking this:\n  lIn t = Zero\n  Controller_L y lIn lOut z", "have sg1:\n    \"if 300 < hd (y t) \n     then z t = [] \\<and> lOut t = Zero \n     else z t = [One] \\<and> lOut t = One\""], ["proof (prove)\nusing this:\n  lIn t = Zero\n  Controller_L y lIn lOut z\n\ngoal (1 subgoal):\n 1. if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n    else z t = [One] \\<and> lOut t = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n  else z t = [One] \\<and> lOut t = One\n\ngoal (2 subgoals):\n 1. lIn t = Zero \\<Longrightarrow> lIn t = One\n 2. lIn t = One \\<Longrightarrow> lIn t = One", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lIn t = One", "proof (cases \"300 < hd (y t)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (y t) \\<Longrightarrow> lIn t = One\n 2. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "assume a3:\"300 < hd (y t)\""], ["proof (state)\nthis:\n  300 < hd (y t)\n\ngoal (2 subgoals):\n 1. 300 < hd (y t) \\<Longrightarrow> lIn t = One\n 2. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "from a3 and sg1"], ["proof (chain)\npicking this:\n  300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n  else z t = [One] \\<and> lOut t = One", "have sg2:\"z t = [] \\<and> lOut t = Zero\""], ["proof (prove)\nusing this:\n  300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n  else z t = [One] \\<and> lOut t = One\n\ngoal (1 subgoal):\n 1. z t = [] \\<and> lOut t = Zero", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<and> lOut t = Zero\n\ngoal (2 subgoals):\n 1. 300 < hd (y t) \\<Longrightarrow> lIn t = One\n 2. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "from this and h2"], ["proof (chain)\npicking this:\n  z t = [] \\<and> lOut t = Zero\n  lOut t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  z t = [] \\<and> lOut t = Zero\n  lOut t = One\n\ngoal (1 subgoal):\n 1. lIn t = One", "by simp"], ["proof (state)\nthis:\n  lIn t = One\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "assume a4:\"\\<not> 300 < hd (y t)\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (y t)\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "from a4 and sg1"], ["proof (chain)\npicking this:\n  \\<not> 300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n  else z t = [One] \\<and> lOut t = One", "have sg3:\"z t = [One] \\<and> lOut t = One\""], ["proof (prove)\nusing this:\n  \\<not> 300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> lOut t = Zero\n  else z t = [One] \\<and> lOut t = One\n\ngoal (1 subgoal):\n 1. z t = [One] \\<and> lOut t = One", "by simp"], ["proof (state)\nthis:\n  z t = [One] \\<and> lOut t = One\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow> lIn t = One", "from this and h3"], ["proof (chain)\npicking this:\n  z t = [One] \\<and> lOut t = One\n  z t = []", "show ?thesis"], ["proof (prove)\nusing this:\n  z t = [One] \\<and> lOut t = One\n  z t = []\n\ngoal (1 subgoal):\n 1. lIn t = One", "by simp"], ["proof (state)\nthis:\n  lIn t = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lIn t = One\n\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = One", "assume \"lIn t = One\""], ["proof (state)\nthis:\n  lIn t = One\n\ngoal (1 subgoal):\n 1. lIn t = One \\<Longrightarrow> lIn t = One", "then"], ["proof (chain)\npicking this:\n  lIn t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  lIn t = One\n\ngoal (1 subgoal):\n 1. lIn t = One", "by simp"], ["proof (state)\nthis:\n  lIn t = One\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L5_Controller:\n  assumes \"Controller_L y lIn lOut z\"\n         and \"lOut t = a\"\n         and \"z t = []\"\n  shows \"lIn t = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lIn t = a", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y lIn lOut z\n  lOut t = a\n  z t = []\n\ngoal (1 subgoal):\n 1. lIn t = a", "by (metis L5_Controller_One L5_Controller_Zero bit.exhaust)"], ["", "lemma L6_Controller_Zero:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = Zero\"\n         and \"z (Suc t) = []\"\n  shows \"l t = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l t = Zero", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n  z (Suc t) = []\n\ngoal (1 subgoal):\n 1. l t = Zero", "by (metis L4_Controller_Zero not_Cons_self2)"], ["", "lemma L6_Controller_One:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = One\"\n         and \"z (Suc t) = []\"\n  shows \"l t = One\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l t = One", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  z (Suc t) = []\n\ngoal (1 subgoal):\n 1. l t = One", "by (metis L4_Controller_One list.distinct(1))"], ["", "lemma L6_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"l (Suc t) = a\"\n         and \"z (Suc t) = []\"\n  shows \"l t = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l t = a", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = a\n  z (Suc t) = []\n\ngoal (1 subgoal):\n 1. l t = a", "by (metis L5_Controller correct_fin_inf_append2)"], ["", "lemma L7_Controller_Zero:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and h2:\"l t = Zero\"\n  shows      \"last (fin_make_untimed (inf_truncate z t)) = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = Zero", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = Zero\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = Zero", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n     l 0 = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = Zero\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "case 0"], ["proof (state)\nthis:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l 0 = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n     l 0 = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = Zero\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "from h1"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z", "have \"z 0 = [Zero]\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. z 0 = [Zero]", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  z 0 = [Zero]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n     l 0 = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = Zero\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "from this"], ["proof (chain)\npicking this:\n  z 0 = [Zero]", "show ?case"], ["proof (prove)\nusing this:\n  z 0 = [Zero]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z 0)) = Zero", "by (simp add: fin_make_untimed_def)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z 0)) = Zero\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "case (Suc t)"], ["proof (state)\nthis:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = Zero\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  Zero;\n        Controller_L y (fin_inf_append [Zero] l) l z;\n        l (Suc t) = Zero\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         Zero", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = Zero", "proof (cases \"l t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "assume a1:\"l t = Zero\""], ["proof (state)\nthis:\n  l t = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero", "have\n       \"(z (Suc t) = [] \\<and> l t = Zero) \\<or> (z (Suc t) = [Zero] \\<and> l t = One)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by (simp add: L4_Controller_Zero)"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n  l t = Zero", "have \"z (Suc t) = []\""], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n  l t = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = []", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from Suc and this and a1"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n  z (Suc t) = []\n  l t = Zero", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n  z (Suc t) = []\n  l t = Zero\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = Zero", "by (simp add: fin_make_untimed_append_empty)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "assume a1:\"l t = One\""], ["proof (state)\nthis:\n  l t = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero", "have\n       \"(z (Suc t) = [] \\<and> l t = Zero) \\<or> (z (Suc t) = [Zero] \\<and> l t = One)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = Zero \\<or>\n    z (Suc t) = [Zero] \\<and> l t = One", "by (simp add: L4_Controller_Zero)"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n  l t = One", "have \"z (Suc t) = [Zero]\""], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l t = Zero \\<or> z (Suc t) = [Zero] \\<and> l t = One\n  l t = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = [Zero]", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [Zero]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = Zero\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               Zero;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = Zero;\n     l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                      Zero", "from a1 and Suc and this"], ["proof (chain)\npicking this:\n  l t = One\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n  z (Suc t) = [Zero]", "show ?case"], ["proof (prove)\nusing this:\n  l t = One\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = Zero\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = Zero\n  z (Suc t) = [Zero]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = Zero", "by (simp add: fin_make_untimed_def)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = Zero\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = Zero\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L7_Controller_One_l0:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\" \n         and \"y 0 = [500::nat]\"\n  shows    \"l 0 = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l 0 = Zero", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. l 0 \\<noteq> Zero \\<Longrightarrow> False", "assume a1:\" \\<not> l 0 = Zero\""], ["proof (state)\nthis:\n  l 0 \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. l 0 \\<noteq> Zero \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]", "have sg1:\"z 0 = [Zero]\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. z 0 = [Zero]", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  z 0 = [Zero]\n\ngoal (1 subgoal):\n 1. l 0 \\<noteq> Zero \\<Longrightarrow> False", "have sg2:\"fin_inf_append [Zero] l (0::nat) = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l 0 = Zero", "by  (simp add: fin_inf_append_def)"], ["proof (state)\nthis:\n  fin_inf_append [Zero] l 0 = Zero\n\ngoal (1 subgoal):\n 1. l 0 \\<noteq> Zero \\<Longrightarrow> False", "from assms and a1 and sg1 and sg2"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]\n  l 0 \\<noteq> Zero\n  z 0 = [Zero]\n  fin_inf_append [Zero] l 0 = Zero", "show \"False\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]\n  l 0 \\<noteq> Zero\n  z 0 = [Zero]\n  fin_inf_append [Zero] l 0 = Zero\n\ngoal (1 subgoal):\n 1. False", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L7_Controller_One:\n  assumes h1:\"Controller_L y (fin_inf_append [Zero] l) l z\"\n      and h2:\"l t = One\"\n      and h3:\"y 0 = [500::nat]\"\n  shows \"last (fin_make_untimed (inf_truncate z t)) = One\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = One", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l t = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = One", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l 0 = One;\n     y 0 = [500]\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = One\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "case 0"], ["proof (state)\nthis:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l 0 = One\n  y 0 = [500]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l 0 = One;\n     y 0 = [500]\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = One\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "from h1 and h3"], ["proof (chain)\npicking this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]", "have \"l 0 = Zero\""], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. l 0 = Zero", "by (simp add: L7_Controller_One_l0)"], ["proof (state)\nthis:\n  l 0 = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l 0 = One;\n     y 0 = [500]\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z 0)) = One\n 2. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "from this and 0"], ["proof (chain)\npicking this:\n  l 0 = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l 0 = One\n  y 0 = [500]", "show ?case"], ["proof (prove)\nusing this:\n  l 0 = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l 0 = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z 0)) = One", "by simp"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z 0)) = One\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "case (Suc t)"], ["proof (state)\nthis:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n                 l t = One; y 0 = [500]\\<rbrakk>\n                \\<Longrightarrow> last\n                                   (fin_make_untimed (inf_truncate z t)) =\n                                  One;\n        Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n        y 0 = [500]\\<rbrakk>\n       \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) =\n                         One", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = One", "proof (cases \"l t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "assume a1:\"l t = Zero\""], ["proof (state)\nthis:\n  l t = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]", "have\n       \"(z (Suc t) = [] \\<and> l t = One) \\<or> (z (Suc t) = [One] \\<and> l t = Zero)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by (simp add: L4_Controller_One)"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n  l t = Zero", "have \"z (Suc t) = [One]\""], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n  l t = Zero\n\ngoal (1 subgoal):\n 1. z (Suc t) = [One]", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = [One]\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = Zero\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One\n 2. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from Suc and this and a1"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n  z (Suc t) = [One]\n  l t = Zero", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n  z (Suc t) = [One]\n  l t = Zero\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = One", "by (simp add: fin_make_untimed_def)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "assume a1:\"l t = One\""], ["proof (state)\nthis:\n  l t = One\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]", "have\n       \"(z (Suc t) = [] \\<and> l t = One) \\<or> (z (Suc t) = [One] \\<and> l t = Zero)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. z (Suc t) = [] \\<and> l t = One \\<or>\n    z (Suc t) = [One] \\<and> l t = Zero", "by (simp add: L4_Controller_One)"], ["proof (state)\nthis:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from this and a1"], ["proof (chain)\npicking this:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n  l t = One", "have \"z (Suc t) = []\""], ["proof (prove)\nusing this:\n  z (Suc t) = [] \\<and> l t = One \\<or> z (Suc t) = [One] \\<and> l t = Zero\n  l t = One\n\ngoal (1 subgoal):\n 1. z (Suc t) = []", "by simp"], ["proof (state)\nthis:\n  z (Suc t) = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z;\n              l t = One; y 0 = [500]\\<rbrakk>\n             \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) =\n                               One;\n     Controller_L y (fin_inf_append [Zero] l) l z; l (Suc t) = One;\n     y 0 = [500]; l t = One\\<rbrakk>\n    \\<Longrightarrow> last (fin_make_untimed (inf_truncate z (Suc t))) = One", "from a1 and Suc and this"], ["proof (chain)\npicking this:\n  l t = One\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n  z (Suc t) = []", "show ?case"], ["proof (prove)\nusing this:\n  l t = One\n  \\<lbrakk>Controller_L y (fin_inf_append [Zero] l) l z; l t = One;\n   y 0 = [500]\\<rbrakk>\n  \\<Longrightarrow> last (fin_make_untimed (inf_truncate z t)) = One\n  Controller_L y (fin_inf_append [Zero] l) l z\n  l (Suc t) = One\n  y 0 = [500]\n  z (Suc t) = []\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z (Suc t))) = One", "by (simp add: fin_make_untimed_def)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = One\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z (Suc t))) = One\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L7_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n         and \"y 0 = [500::nat]\"\n  shows      \"last (fin_make_untimed (inf_truncate z t)) =  l t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = l t", "using assms"], ["proof (prove)\nusing this:\n  Controller_L y (fin_inf_append [Zero] l) l z\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z t)) = l t", "by (metis (full_types) L7_Controller_One L7_Controller_Zero bit.exhaust)"], ["", "lemma L8_Controller:\n  assumes \"Controller_L y (fin_inf_append [Zero] l) l z\"\n  shows    \"z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "proof (cases \"fin_inf_append [Zero] l t = Zero\")"], ["proof (state)\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l t = Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a1:\"fin_inf_append [Zero] l t = Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l t = Zero\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l t = Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a1 and assms"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z", "have sg1:\n   \"if 300 < hd (y t) \n    then z t = [] \\<and> l t = Zero \n    else z t = [One] \\<and> l t = One\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l t = Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n    else z t = [One] \\<and> l t = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n  else z t = [One] \\<and> l t = One\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l t = Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "proof (cases \"300 < hd (y t)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. \\<not> 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a11:\"300 < hd (y t)\""], ["proof (state)\nthis:\n  300 < hd (y t)\n\ngoal (2 subgoals):\n 1. 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. \\<not> 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a11 and sg1"], ["proof (chain)\npicking this:\n  300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n  else z t = [One] \\<and> l t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n  else z t = [One] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a12:\"\\<not> 300 < hd (y t)\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (y t)\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (y t) \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a12 and sg1"], ["proof (chain)\npicking this:\n  \\<not> 300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n  else z t = [One] \\<and> l t = One", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> 300 < hd (y t)\n  if 300 < hd (y t) then z t = [] \\<and> l t = Zero\n  else z t = [One] \\<and> l t = One\n\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a2:\"fin_inf_append [Zero] l t \\<noteq> Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l t \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a2 and assms"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l t \\<noteq> Zero\n  Controller_L y (fin_inf_append [Zero] l) l z", "have sg2:\n   \"if hd (y t) < 700 \n    then z t = [] \\<and> l t = One \n    else z t = [Zero] \\<and> l t = Zero\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l t \\<noteq> Zero\n  Controller_L y (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if hd (y t) < 700 then z t = [] \\<and> l t = One\n    else z t = [Zero] \\<and> l t = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (y t) < 700 then z t = [] \\<and> l t = One\n  else z t = [Zero] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l t \\<noteq> Zero \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "proof (cases \"hd (y t) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. \\<not> hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a21:\"hd (y t) < 700\""], ["proof (state)\nthis:\n  hd (y t) < 700\n\ngoal (2 subgoals):\n 1. hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n 2. \\<not> hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a21 and sg2"], ["proof (chain)\npicking this:\n  hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> l t = One\n  else z t = [Zero] \\<and> l t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> l t = One\n  else z t = [Zero] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "assume a22:\"\\<not> hd (y t) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (y t) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (y t) < 700 \\<Longrightarrow>\n    z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "from a22 and sg2"], ["proof (chain)\npicking this:\n  \\<not> hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> l t = One\n  else z t = [Zero] \\<and> l t = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> hd (y t) < 700\n  if hd (y t) < 700 then z t = [] \\<and> l t = One\n  else z t = [Zero] \\<and> l t = Zero\n\ngoal (1 subgoal):\n 1. z t = [] \\<or> z t = [Zero] \\<or> z t = [One]", "by simp"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z t = [] \\<or> z t = [Zero] \\<or> z t = [One]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L9_Controller:\n  assumes h1:\"Controller_L s (fin_inf_append [Zero] l) l z\"\n         and h2:\"fin_make_untimed (inf_truncate z i) !\n              (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =  Zero\"\n         and h3:\"last (fin_make_untimed (inf_truncate z i)) = l i\"\n         and h5:\"hd (s (Suc i)) = hd (s i) - r\"\n         and h6:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\"\n         and h8:\"r \\<le> 10\"\n  shows \"200 \\<le> hd (s (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "from h6 and h2 and h3"], ["proof (chain)\npicking this:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i", "have sg0:\"l i = Zero\""], ["proof (prove)\nusing this:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. l i = Zero", "by (simp add: last_nth_length)"], ["proof (state)\nthis:\n  l i = Zero\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "proof (cases \"fin_inf_append [Zero] l i = Zero\")"], ["proof (state)\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "assume a1:\"fin_inf_append [Zero] l i = Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l i = Zero\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "from a1 and h1"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l i = Zero\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg1:\n      \"if 300 < hd (s i) \n       then z i = [] \\<and> l i = Zero \n       else z i = [One] \\<and> l i = One\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l i = Zero\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n    else z i = [One] \\<and> l i = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "proof (cases \"300 < hd (s i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<not> 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume a11:\"300 < hd (s i)\""], ["proof (state)\nthis:\n  300 < hd (s i)\n\ngoal (2 subgoals):\n 1. 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<not> 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a11 and h5 and h8"], ["proof (chain)\npicking this:\n  300 < hd (s i)\n  hd (s (Suc i)) = hd (s i) - r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  300 < hd (s i)\n  hd (s (Suc i)) = hd (s i) - r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by simp"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume a12:\"\\<not> 300 < hd (s i)\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (s i)\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a12 and sg1 and sg0"], ["proof (chain)\npicking this:\n  \\<not> 300 < hd (s i)\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n  l i = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> 300 < hd (s i)\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n  l i = Zero\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by simp"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "assume a2:\"fin_inf_append [Zero] l i \\<noteq> Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "from a2 and h1"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg2:\n      \"if hd (s i) < 700 \n       then z i = [] \\<and> l i = One \n       else z i = [Zero] \\<and> l i = Zero\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if hd (s i) < 700 then z i = [] \\<and> l i = One\n    else z i = [Zero] \\<and> l i = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    200 \\<le> hd (s (Suc i))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "proof (cases \"hd (s i) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<not> hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume a21:\"hd (s i) < 700\""], ["proof (state)\nthis:\n  hd (s i) < 700\n\ngoal (2 subgoals):\n 1. hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<not> hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from this and sg2 and sg0"], ["proof (chain)\npicking this:\n  hd (s i) < 700\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n  l i = Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s i) < 700\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n  l i = Zero\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by simp"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume a22:\"\\<not> hd (s i) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (s i) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from this and h5 and h8"], ["proof (chain)\npicking this:\n  \\<not> hd (s i) < 700\n  hd (s (Suc i)) = hd (s i) - r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> hd (s i) < 700\n  hd (s (Suc i)) = hd (s i) - r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by simp"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L10_Controller:\n  assumes h1:\"Controller_L s (fin_inf_append [Zero] l) l z\"\n      and h2:\"fin_make_untimed (inf_truncate z i) !\n              (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>  Zero\"\n      and h3:\"last (fin_make_untimed (inf_truncate z i)) = l i\"\n      and h5:\"hd (s (Suc i)) = hd (s i) + r\"\n      and h6:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\"\n      and h8:\"r \\<le> 10\"\n  shows \"hd (s (Suc i)) \\<le> 800\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "from h6 and h2 and h3"], ["proof (chain)\npicking this:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i", "have sg0:\"l i \\<noteq>  Zero\""], ["proof (prove)\nusing this:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. l i \\<noteq> Zero", "by (simp add: last_nth_length)"], ["proof (state)\nthis:\n  l i \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "proof (cases \"fin_inf_append [Zero] l i = Zero\")"], ["proof (state)\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "assume a1:\"fin_inf_append [Zero] l i = Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l i = Zero\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "from a1 and h1"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l i = Zero\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg1:\n      \"if 300 < hd (s i) \n       then z i = [] \\<and> l i = Zero \n       else z i = [One] \\<and> l i = One\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l i = Zero\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n    else z i = [One] \\<and> l i = One", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n\ngoal (2 subgoals):\n 1. fin_inf_append [Zero] l i = Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800\n 2. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "proof (cases \"300 < hd (s i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<not> 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume a11:\"300 < hd (s i)\""], ["proof (state)\nthis:\n  300 < hd (s i)\n\ngoal (2 subgoals):\n 1. 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<not> 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a11 and sg1 and sg0"], ["proof (chain)\npicking this:\n  300 < hd (s i)\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n  l i \\<noteq> Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  300 < hd (s i)\n  if 300 < hd (s i) then z i = [] \\<and> l i = Zero\n  else z i = [One] \\<and> l i = One\n  l i \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume a12:\"\\<not> 300 < hd (s i)\""], ["proof (state)\nthis:\n  \\<not> 300 < hd (s i)\n\ngoal (1 subgoal):\n 1. \\<not> 300 < hd (s i) \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from h5 and a12 and h8"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = hd (s i) + r\n  \\<not> 300 < hd (s i)\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = hd (s i) + r\n  \\<not> 300 < hd (s i)\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "assume a2:\"fin_inf_append [Zero] l i \\<noteq> Zero\""], ["proof (state)\nthis:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "from a2 and h1"], ["proof (chain)\npicking this:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg2:\n      \"if hd (s i) < 700 \n       then z i = [] \\<and> l i = One \n       else z i = [Zero] \\<and> l i = Zero\""], ["proof (prove)\nusing this:\n  fin_inf_append [Zero] l i \\<noteq> Zero\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. if hd (s i) < 700 then z i = [] \\<and> l i = One\n    else z i = [Zero] \\<and> l i = Zero", "by (simp add: Controller_L_def)"], ["proof (state)\nthis:\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n\ngoal (1 subgoal):\n 1. fin_inf_append [Zero] l i \\<noteq> Zero \\<Longrightarrow>\n    hd (s (Suc i)) \\<le> 800", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "proof (cases \"hd (s i) < 700\")"], ["proof (state)\ngoal (2 subgoals):\n 1. hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<not> hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume a21:\"hd (s i) < 700\""], ["proof (state)\nthis:\n  hd (s i) < 700\n\ngoal (2 subgoals):\n 1. hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<not> hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this and h5 and h8"], ["proof (chain)\npicking this:\n  hd (s i) < 700\n  hd (s (Suc i)) = hd (s i) + r\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s i) < 700\n  hd (s (Suc i)) = hd (s i) + r\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume a22:\"\\<not> hd (s i) < 700\""], ["proof (state)\nthis:\n  \\<not> hd (s i) < 700\n\ngoal (1 subgoal):\n 1. \\<not> hd (s i) < 700 \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this and sg2 and sg0"], ["proof (chain)\npicking this:\n  \\<not> hd (s i) < 700\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n  l i \\<noteq> Zero", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> hd (s i) < 700\n  if hd (s i) < 700 then z i = [] \\<and> l i = One\n  else z i = [Zero] \\<and> l i = Zero\n  l i \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Properties of the Converter Component\\<close>"], ["", "lemma L1_Converter:\n  assumes \"Converter z x\"\n         and \"fin_make_untimed (inf_truncate z t) \\<noteq> []\"\n  shows      \"hd (x t) = (fin_make_untimed (inf_truncate z t)) ! \n                 ((length (fin_make_untimed (inf_truncate z t))) - (1::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (x t) =\n    fin_make_untimed (inf_truncate z t) !\n    (length (fin_make_untimed (inf_truncate z t)) - 1)", "using assms"], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z t) \\<noteq> []\n\ngoal (1 subgoal):\n 1. hd (x t) =\n    fin_make_untimed (inf_truncate z t) !\n    (length (fin_make_untimed (inf_truncate z t)) - 1)", "by (simp add: Converter_def)"], ["", "lemma L1a_Converter:\n  assumes \"Converter z x\"\n         and \"fin_make_untimed (inf_truncate z t) \\<noteq> []\"\n         and \"hd (x t) = Zero\"\n  shows      \"(fin_make_untimed (inf_truncate z t)) ! \n                 ((length (fin_make_untimed (inf_truncate z t))) - (1::nat)) \n              = Zero\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z t) !\n    (length (fin_make_untimed (inf_truncate z t)) - 1) =\n    Zero", "using assms"], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z t) \\<noteq> []\n  hd (x t) = Zero\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z t) !\n    (length (fin_make_untimed (inf_truncate z t)) - 1) =\n    Zero", "by (simp add: L1_Converter)"], ["", "subsection \\<open>Properties of the System\\<close>"], ["", "lemma L1_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"ts s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ts s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ts s", "from assms"], ["proof (chain)\npicking this:\n  ControlSystemArch s", "obtain x z y \n    where a1:\"Converter z x\" and a2: \"SteamBoiler x s y\""], ["proof (prove)\nusing this:\n  ControlSystemArch s\n\ngoal (1 subgoal):\n 1. (\\<And>z x y.\n        \\<lbrakk>Converter z x; SteamBoiler x s y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: ControlSystemArch_def, auto)"], ["proof (state)\nthis:\n  Converter z x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. ts s", "from this"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y", "have \"ts x\""], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. ts x", "by (simp add: Converter_def)"], ["proof (state)\nthis:\n  ts x\n\ngoal (1 subgoal):\n 1. ts s", "from a2 and this"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "show ?thesis"], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. ts s", "by (rule L1_Boiler)"], ["proof (state)\nthis:\n  ts s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L2_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"(200::nat) \\<le> hd (s i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "from assms"], ["proof (chain)\npicking this:\n  ControlSystemArch s", "obtain x z y \n    where a1:\"Converter z x\" and a2: \"SteamBoiler x s y\" and a3:\"Controller y z\""], ["proof (prove)\nusing this:\n  ControlSystemArch s\n\ngoal (1 subgoal):\n 1. (\\<And>z x y.\n        \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: ControlSystemArch_def, auto)"], ["proof (state)\nthis:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "from this"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z", "have sg1:\"ts x\""], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n\ngoal (1 subgoal):\n 1. ts x", "by (simp add: Converter_def)"], ["proof (state)\nthis:\n  ts x\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "from sg1 and a2"], ["proof (chain)\npicking this:\n  ts x\n  SteamBoiler x s y", "have sg2:\"ts y\""], ["proof (prove)\nusing this:\n  ts x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. ts y", "by (simp add: L2_Boiler)"], ["proof (state)\nthis:\n  ts y\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "from sg1 and a2"], ["proof (chain)\npicking this:\n  ts x\n  SteamBoiler x s y", "have sg3:\"y = s\""], ["proof (prove)\nusing this:\n  ts x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. y = s", "by (simp add: SteamBoiler_def)"], ["proof (state)\nthis:\n  y = s\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "from a1 and a2 and a3 and sg1 and sg2 and sg3"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "show \"200 \\<le> hd (s i)\""], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s i)", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n     y = s\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s 0)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "case 0"], ["proof (state)\nthis:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n     y = s\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s 0)\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from this"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "show ?case"], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s 0)", "by (simp add: L3_Boiler)"], ["proof (state)\nthis:\n  200 \\<le> hd (s 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "obtain l\n      where a4: \"Controller_L s (fin_inf_append [Zero] l) l z\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Controller_L s (fin_inf_append [Zero] l) l z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Controller_def, atomize, auto)"], ["proof (state)\nthis:\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from Suc and a4"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg4:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) \\<noteq> []", "by (simp add:  L1_Controller)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a2 and sg1"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "have y0asm:\"y 0 = [500::nat]\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. y 0 = [500]", "by (simp add: SteamBoiler_def)"], ["proof (state)\nthis:\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from Suc and a4 and sg4 and y0asm"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  y 0 = [500]", "have sg5: \"last (fin_make_untimed (inf_truncate z i)) =  l i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z i)) = l i", "by (simp add: L7_Controller)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a2 and sg1"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n         aa0:\"0 < r\" and\n         aa1:\"r \\<le> 10\" and \n         aa2:\"hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; r \\<le> 10;\n         hd (s (Suc i)) =\n         (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  0 < r\n  r \\<le> 10\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> 200 \\<le> hd (s i);\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from Suc and a4 and sg4 and sg5"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  last (fin_make_untimed (inf_truncate z i)) = l i", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "proof (cases \"hd (x i) = Zero\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume aaZero:\"hd (x i) = Zero\""], ["proof (state)\nthis:\n  hd (x i) = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a1 and sg4 and this"], ["proof (chain)\npicking this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) = Zero", "have\n         sg7:\"(fin_make_untimed (inf_truncate z i)) ! \n             ((length (fin_make_untimed (inf_truncate z i))) - Suc 0)  = Zero\""], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) = Zero\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) !\n    (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n    Zero", "by (simp add: L1_Converter)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from aa2 and aaZero"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) = Zero", "have sg8:\"hd (s (Suc i)) = hd (s i) - r\""], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) = Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) = hd (s i) - r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) = hd (s i) - r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))\n 2. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a4 and sg7 and sg5  and sg8 and sg4 and aa1"], ["proof (chain)\npicking this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n  hd (s (Suc i)) = hd (s i) - r\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n  hd (s (Suc i)) = hd (s i) - r\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by (rule L9_Controller)"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "assume aaOne:\"hd (x i) \\<noteq> Zero\""], ["proof (state)\nthis:\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from a1 and sg4 and this"], ["proof (chain)\npicking this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) \\<noteq> Zero", "have\n         sg7:\"(fin_make_untimed (inf_truncate z i)) ! \n             ((length (fin_make_untimed (inf_truncate z i))) - Suc 0) \\<noteq> Zero\""], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) !\n    (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n    Zero", "by (simp add: L1_Converter)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from aa2 and aaOne"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) \\<noteq> Zero", "have sg9:\"hd (s (Suc i)) = hd (s i) + r\""], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) = hd (s i) + r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) = hd (s i) + r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n              ts x; ts y; y = s\\<rbrakk>\n             \\<Longrightarrow> 200 \\<le> hd (s i);\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> 200 \\<le> hd (s (Suc i))", "from Suc and this"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  hd (s (Suc i)) = hd (s i) + r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> 200 \\<le> hd (s i)\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  hd (s (Suc i)) = hd (s i) + r\n\ngoal (1 subgoal):\n 1. 200 \\<le> hd (s (Suc i))", "by simp"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  200 \\<le> hd (s (Suc i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  200 \\<le> hd (s i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma L3_ControlSystem:\n  assumes \"ControlSystemArch s\"\n  shows \"hd (s i) \\<le> (800:: nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "from assms"], ["proof (chain)\npicking this:\n  ControlSystemArch s", "obtain x z y \n    where a1:\"Converter z x\" and a2: \"SteamBoiler x s y\" and a3:\"Controller y z\""], ["proof (prove)\nusing this:\n  ControlSystemArch s\n\ngoal (1 subgoal):\n 1. (\\<And>z x y.\n        \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp only: ControlSystemArch_def, auto)"], ["proof (state)\nthis:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "from this"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z", "have sg1:\"ts x\""], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n\ngoal (1 subgoal):\n 1. ts x", "by (simp add: Converter_def)"], ["proof (state)\nthis:\n  ts x\n\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "from sg1 and a2"], ["proof (chain)\npicking this:\n  ts x\n  SteamBoiler x s y", "have sg2:\"ts y\""], ["proof (prove)\nusing this:\n  ts x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. ts y", "by (simp add: L2_Boiler)"], ["proof (state)\nthis:\n  ts y\n\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "from sg1 and a2"], ["proof (chain)\npicking this:\n  ts x\n  SteamBoiler x s y", "have sg3:\"y = s\""], ["proof (prove)\nusing this:\n  ts x\n  SteamBoiler x s y\n\ngoal (1 subgoal):\n 1. y = s", "by (simp add: SteamBoiler_def)"], ["proof (state)\nthis:\n  y = s\n\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "from a1 and a2 and a3 and sg1 and sg2 and sg3"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "show \"hd (s i) \\<le> (800:: nat)\""], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. hd (s i) \\<le> 800", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n     y = s\\<rbrakk>\n    \\<Longrightarrow> hd (s 0) \\<le> 800\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "case 0"], ["proof (state)\nthis:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n     y = s\\<rbrakk>\n    \\<Longrightarrow> hd (s 0) \\<le> 800\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this"], ["proof (chain)\npicking this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "show ?case"], ["proof (prove)\nusing this:\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. hd (s 0) \\<le> 800", "by (simp add: L4_Boiler)"], ["proof (state)\nthis:\n  hd (s 0) \\<le> 800\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "obtain l\n      where a4: \"Controller_L s (fin_inf_append [Zero] l) l z\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        Controller_L s (fin_inf_append [Zero] l) l z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: Controller_def, atomize, auto)"], ["proof (state)\nthis:\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a4"], ["proof (chain)\npicking this:\n  Controller_L s (fin_inf_append [Zero] l) l z", "have sg4:\"fin_make_untimed (inf_truncate z i) \\<noteq> []\""], ["proof (prove)\nusing this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) \\<noteq> []", "by (simp add:  L1_Controller)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a2 and sg1"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "have y0asm:\"y 0 = [500::nat]\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. y 0 = [500]", "by (simp add: SteamBoiler_def)"], ["proof (state)\nthis:\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from Suc and a4 and sg4 and y0asm"], ["proof (chain)\npicking this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  y 0 = [500]", "have sg5: \"last (fin_make_untimed (inf_truncate z i)) =  l i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  y 0 = [500]\n\ngoal (1 subgoal):\n 1. last (fin_make_untimed (inf_truncate z i)) = l i", "by (simp add: L7_Controller)"], ["proof (state)\nthis:\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a2 and sg1"], ["proof (chain)\npicking this:\n  SteamBoiler x s y\n  ts x", "obtain r where\n         aa0:\"0 < r\" and\n         aa1:\"r \\<le> 10\" and \n         aa2:\"hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\""], ["proof (prove)\nusing this:\n  SteamBoiler x s y\n  ts x\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>0 < r; r \\<le> 10;\n         hd (s (Suc i)) =\n         (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (simp add: SteamBoiler_def, auto)"], ["proof (state)\nthis:\n  0 < r\n  r \\<le> 10\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z;\n                 ts x; ts y; y = s\\<rbrakk>\n                \\<Longrightarrow> hd (s i) \\<le> 800;\n        Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n        y = s\\<rbrakk>\n       \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this and Suc and a4 and sg4 and sg5"], ["proof (chain)\npicking this:\n  0 < r\n  r \\<le> 10\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  last (fin_make_untimed (inf_truncate z i)) = l i", "show ?case"], ["proof (prove)\nusing this:\n  0 < r\n  r \\<le> 10\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  last (fin_make_untimed (inf_truncate z i)) = l i\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "proof (cases \"hd (x i) = Zero\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume aaZero:\"hd (x i) = Zero\""], ["proof (state)\nthis:\n  hd (x i) = Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a1 and sg4 and this"], ["proof (chain)\npicking this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) = Zero", "have\n         sg7:\"(fin_make_untimed (inf_truncate z i)) ! \n             ((length (fin_make_untimed (inf_truncate z i))) - Suc 0)  = Zero\""], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) = Zero\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) !\n    (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n    Zero", "by (simp add: L1_Converter)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) =\n  Zero\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from aa2 and aaZero"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) = Zero", "have sg8:\"hd (s (Suc i)) = hd (s i) - r\""], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) = Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) = hd (s i) - r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) = hd (s i) - r\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) = Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800\n 2. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from this and Suc"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = hd (s i) - r\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s", "show ?thesis"], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = hd (s i) - r\n  \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n   y = s\\<rbrakk>\n  \\<Longrightarrow> hd (s i) \\<le> 800\n  Converter z x\n  SteamBoiler x s y\n  Controller y z\n  ts x\n  ts y\n  y = s\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "assume aaOne:\"hd (x i) \\<noteq> Zero\""], ["proof (state)\nthis:\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a1 and sg4 and this"], ["proof (chain)\npicking this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) \\<noteq> Zero", "have\n         sg7:\"(fin_make_untimed (inf_truncate z i)) ! \n             ((length (fin_make_untimed (inf_truncate z i))) - Suc 0) \\<noteq> Zero\""], ["proof (prove)\nusing this:\n  Converter z x\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. fin_make_untimed (inf_truncate z i) !\n    (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n    Zero", "by (simp add: L1_Converter)"], ["proof (state)\nthis:\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from aa2 and aaOne"], ["proof (chain)\npicking this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) \\<noteq> Zero", "have sg9:\"hd (s (Suc i)) = hd (s i) + r\""], ["proof (prove)\nusing this:\n  hd (s (Suc i)) = (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r)\n  hd (x i) \\<noteq> Zero\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) = hd (s i) + r", "by simp"], ["proof (state)\nthis:\n  hd (s (Suc i)) = hd (s i) + r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < r; r \\<le> 10;\n     hd (s (Suc i)) =\n     (if hd (x i) = Zero then hd (s i) - r else hd (s i) + r);\n     \\<lbrakk>Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y;\n      y = s\\<rbrakk>\n     \\<Longrightarrow> hd (s i) \\<le> 800;\n     Converter z x; SteamBoiler x s y; Controller y z; ts x; ts y; y = s;\n     Controller_L s (fin_inf_append [Zero] l) l z;\n     fin_make_untimed (inf_truncate z i) \\<noteq> [];\n     last (fin_make_untimed (inf_truncate z i)) = l i;\n     hd (x i) \\<noteq> Zero\\<rbrakk>\n    \\<Longrightarrow> hd (s (Suc i)) \\<le> 800", "from a4 and sg7 and sg5 and sg9 and sg4  and aa1"], ["proof (chain)\npicking this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n  hd (s (Suc i)) = hd (s i) + r\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  r \\<le> 10", "show ?thesis"], ["proof (prove)\nusing this:\n  Controller_L s (fin_inf_append [Zero] l) l z\n  fin_make_untimed (inf_truncate z i) !\n  (length (fin_make_untimed (inf_truncate z i)) - Suc 0) \\<noteq>\n  Zero\n  last (fin_make_untimed (inf_truncate z i)) = l i\n  hd (s (Suc i)) = hd (s i) + r\n  fin_make_untimed (inf_truncate z i) \\<noteq> []\n  r \\<le> 10\n\ngoal (1 subgoal):\n 1. hd (s (Suc i)) \\<le> 800", "by (rule L10_Controller)"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd (s (Suc i)) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  hd (s i) \\<le> 800\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of the Refinement Relation\\<close>"], ["", "lemma L0_ControlSystem:\n  assumes h1:\"ControlSystemArch s\"\n  shows   \"ControlSystem s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ControlSystem s", "using assms"], ["proof (prove)\nusing this:\n  ControlSystemArch s\n\ngoal (1 subgoal):\n 1. ControlSystem s", "by (metis ControlSystem_def L1_ControlSystem L2_ControlSystem L3_ControlSystem)"], ["", "end"]]}