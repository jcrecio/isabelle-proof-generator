{"file_name": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies/arith_hints.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FocusStreamsCaseStudies", "problem_names": ["lemma arith_mod_neq:\n  assumes \"a mod n \\<noteq> b mod n\"\n  shows \"a \\<noteq> b\"", "lemma arith_mod_nzero: \n  fixes i :: nat\n  assumes \"i < n\" and \"0 < i\"\n  shows \"0 < (n * t + i) mod n\"", "lemma arith_mult_neq_nzero1:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"i + n * t \\<noteq> n * q\"", "lemma arith_mult_neq_nzero2:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"n * t + i \\<noteq> n * q\"", "lemma arith_mult_neq_nzero3:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"n + n * t + i \\<noteq> n * qc\"", "lemma arith_modZero1:\n  \"(t + n * t) mod Suc n = 0\"", "lemma arith_modZero2:\n  \"Suc (n + (t + n * t)) mod Suc n = 0\"", "lemma arith1:\n  assumes h1:\"Suc n * t = Suc n * q\"\n  shows \"t = q\"", "lemma arith2:\n  fixes t n q :: \"nat\"\n  assumes h1:\"t + n * t = q + n * q\"\n  shows \"t = q\""], "translations": [["", "lemma arith_mod_neq:\n  assumes \"a mod n \\<noteq> b mod n\"\n  shows \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b", "using assms"], ["proof (prove)\nusing this:\n  a mod n \\<noteq> b mod n\n\ngoal (1 subgoal):\n 1. a \\<noteq> b", "by blast"], ["", "lemma arith_mod_nzero: \n  fixes i :: nat\n  assumes \"i < n\" and \"0 < i\"\n  shows \"0 < (n * t + i) mod n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (n * t + i) mod n", "using assms"], ["proof (prove)\nusing this:\n  i < n\n  0 < i\n\ngoal (1 subgoal):\n 1. 0 < (n * t + i) mod n", "by simp"], ["", "lemma arith_mult_neq_nzero1:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"i + n * t \\<noteq> n * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "from assms"], ["proof (chain)\npicking this:\n  i < n\n  0 < i", "have sg1:\"(i + n * t) mod n = i\""], ["proof (prove)\nusing this:\n  i < n\n  0 < i\n\ngoal (1 subgoal):\n 1. (i + n * t) mod n = i", "by auto"], ["proof (state)\nthis:\n  (i + n * t) mod n = i\n\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "also"], ["proof (state)\nthis:\n  (i + n * t) mod n = i\n\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "have sg2:\"(n * q) mod n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n * q mod n = 0", "by simp"], ["proof (state)\nthis:\n  n * q mod n = 0\n\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "from this and assms"], ["proof (chain)\npicking this:\n  n * q mod n = 0\n  i < n\n  0 < i", "have \"(i + n * t) mod n \\<noteq> (n * q) mod n\""], ["proof (prove)\nusing this:\n  n * q mod n = 0\n  i < n\n  0 < i\n\ngoal (1 subgoal):\n 1. (i + n * t) mod n \\<noteq> n * q mod n", "by simp"], ["proof (state)\nthis:\n  (i + n * t) mod n \\<noteq> n * q mod n\n\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "from this"], ["proof (chain)\npicking this:\n  (i + n * t) mod n \\<noteq> n * q mod n", "show ?thesis"], ["proof (prove)\nusing this:\n  (i + n * t) mod n \\<noteq> n * q mod n\n\ngoal (1 subgoal):\n 1. i + n * t \\<noteq> n * q", "by (rule arith_mod_neq)"], ["proof (state)\nthis:\n  i + n * t \\<noteq> n * q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arith_mult_neq_nzero2:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"n * t + i \\<noteq> n * q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n * t + i \\<noteq> n * q", "using assms"], ["proof (prove)\nusing this:\n  i < n\n  0 < i\n\ngoal (1 subgoal):\n 1. n * t + i \\<noteq> n * q", "by (metis arith_mult_neq_nzero1 add.commute)"], ["", "lemma arith_mult_neq_nzero3:\n  fixes i::nat\n  assumes \"i < n\"\n         and \"0 < i\"\n  shows \"n + n * t + i \\<noteq> n * qc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + n * t + i \\<noteq> n * qc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. n + n * t + i \\<noteq> n * qc", "from assms"], ["proof (chain)\npicking this:\n  i < n\n  0 < i", "have sg1: \"n *(Suc t) + i  \\<noteq> n * qc\""], ["proof (prove)\nusing this:\n  i < n\n  0 < i\n\ngoal (1 subgoal):\n 1. n * Suc t + i \\<noteq> n * qc", "by (rule arith_mult_neq_nzero2)"], ["proof (state)\nthis:\n  n * Suc t + i \\<noteq> n * qc\n\ngoal (1 subgoal):\n 1. n + n * t + i \\<noteq> n * qc", "have sg2: \"n + n * t + i = n *(Suc t) + i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n + n * t + i = n * Suc t + i", "by simp"], ["proof (state)\nthis:\n  n + n * t + i = n * Suc t + i\n\ngoal (1 subgoal):\n 1. n + n * t + i \\<noteq> n * qc", "from sg1 and sg2"], ["proof (chain)\npicking this:\n  n * Suc t + i \\<noteq> n * qc\n  n + n * t + i = n * Suc t + i", "show ?thesis"], ["proof (prove)\nusing this:\n  n * Suc t + i \\<noteq> n * qc\n  n + n * t + i = n * Suc t + i\n\ngoal (1 subgoal):\n 1. n + n * t + i \\<noteq> n * qc", "by arith"], ["proof (state)\nthis:\n  n + n * t + i \\<noteq> n * qc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma arith_modZero1:\n  \"(t + n * t) mod Suc n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t + n * t) mod Suc n = 0", "by (metis mod_mult_self1_is_0 mult_Suc)"], ["", "lemma arith_modZero2:\n  \"Suc (n + (t + n * t)) mod Suc n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (n + (t + n * t)) mod Suc n = 0", "by (metis add_Suc_right add_Suc_shift mod_mult_self1_is_0 mult_Suc mult.commute)"], ["", "lemma arith1:\n  assumes h1:\"Suc n * t = Suc n * q\"\n  shows \"t = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = q", "using assms"], ["proof (prove)\nusing this:\n  Suc n * t = Suc n * q\n\ngoal (1 subgoal):\n 1. t = q", "by (metis mult_cancel2 mult.commute neq0_conv zero_less_Suc)"], ["", "lemma arith2:\n  fixes t n q :: \"nat\"\n  assumes h1:\"t + n * t = q + n * q\"\n  shows \"t = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = q", "using assms"], ["proof (prove)\nusing this:\n  t + n * t = q + n * q\n\ngoal (1 subgoal):\n 1. t = q", "by (metis arith1 mult_Suc)"], ["", "end"]]}