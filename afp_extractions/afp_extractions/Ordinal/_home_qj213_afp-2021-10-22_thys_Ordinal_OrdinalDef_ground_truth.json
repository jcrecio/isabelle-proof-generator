{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordinal/OrdinalDef.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordinal", "problem_names": ["lemma wf_ord0_prec: \"wf ord0_prec\"", "lemmas ord0_prec_induct = wf_induct[OF wf_trancl[OF wf_ord0_prec]]", "lemma ord0_leqI:\n\"\\<lbrakk>\\<forall>a. (a,x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow> (a,y) \\<in> ord0_leq O ord0_prec\\<^sup>+\\<rbrakk>\n \\<Longrightarrow> (x,y) \\<in> ord0_leq\"", "lemma ord0_leqD:\n\"\\<lbrakk>(x,y) \\<in> ord0_leq; (a,x) \\<in> ord0_prec\\<^sup>+\\<rbrakk> \\<Longrightarrow> (a,y) \\<in> ord0_leq O ord0_prec\\<^sup>+\"", "lemma ord0_leq_refl: \"(x, x) \\<in> ord0_leq\"", "lemma ord0_leq_trans[rule_format]:\n\"\\<forall>y. (x,y) \\<in> ord0_leq \\<longrightarrow>\n   (\\<forall>z. (y,z) \\<in> ord0_leq \\<longrightarrow> (x,z) \\<in> ord0_leq)\"", "lemma wf_ord0_leq: \"wf (ord0_leq O ord0_prec\\<^sup>+)\"", "lemma ord0_order_refl[simp]: \"(x::ord0) \\<le> x\"", "lemma ord0_order_trans: \"\\<lbrakk>(x::ord0) \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\"", "lemma ord0_wf: \"wf {(x,y::ord0). x < y}\"", "lemmas ord0_less_induct = wf_induct[OF ord0_wf]", "lemma ord0_leI:\n\"\\<lbrakk>\\<forall>a::ord0. a < x \\<longrightarrow> a < y\\<rbrakk> \\<Longrightarrow> x \\<le> y\"", "lemma ord0_less_le_trans:\n\"\\<lbrakk>(x::ord0) < y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x < z\"", "lemma ord0_le_less_trans:\n\"\\<lbrakk>(x::ord0) \\<le> y; y < z\\<rbrakk> \\<Longrightarrow> x < z\"", "lemma rev_ord0_le_less_trans:\n\"\\<lbrakk>(y::ord0) < z; x \\<le> y\\<rbrakk> \\<Longrightarrow> x < z\"", "lemma ord0_less_trans:\n\"\\<lbrakk>(x::ord0) < y; y < z\\<rbrakk> \\<Longrightarrow> x < z\"", "lemma ord0_less_imp_le: \"(x::ord0) < y \\<Longrightarrow> x \\<le> y\"", "lemma ord0_linear_lemma:\nfixes m :: ord0 and n :: ord0\nshows \"m < n \\<or> n < m \\<or> (m \\<le> n \\<and> n \\<le> m)\"", "lemma ord0_linear: \"(x::ord0) \\<le> y \\<or> y \\<le> x\"", "lemma ord0_order_less_le: \"(x::ord0) < y = (x \\<le> y \\<and> \\<not> y \\<le> x)\"", "theorem Abs_ordinal_cases2 [case_names Abs_ordinal, cases type: ordinal]:\n\"(\\<And>z. x = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow> P) \\<Longrightarrow> P\"", "lemma Rep_Abs_ord0rel [simp]:\n\"Rep_ordinal (Abs_ordinal (ord0rel `` {x})) = (ord0rel `` {x})\"", "lemma mem_ord0rel_Image [simp, intro!]: \"x \\<in> ord0rel `` {x}\"", "lemma equiv_ord0rel: \"equiv UNIV ord0rel\"", "lemma Abs_ordinal_eq[simp]:\n\"(Abs_ordinal (ord0rel `` {x}) = Abs_ordinal (ord0rel `` {y}))\n  = (x \\<le> y \\<and> y \\<le> x)\"", "lemma Abs_ordinal_le[simp]:\n\"Abs_ordinal (ord0rel `` {x}) \\<le> Abs_ordinal (ord0rel `` {y}) = (x \\<le> y)\"", "lemma Abs_ordinal_less[simp]:\n\"Abs_ordinal (ord0rel `` {x}) < Abs_ordinal (ord0rel `` {y}) = (x < y)\"", "lemma ordinal_order_refl: \"(x::ordinal) \\<le> x\"", "lemma ordinal_order_trans: \"(x::ordinal) \\<le> y \\<Longrightarrow> y \\<le> z \\<Longrightarrow> x \\<le> z\"", "lemma ordinal_order_antisym: \"(x::ordinal) \\<le> y \\<Longrightarrow> y \\<le> x \\<Longrightarrow> x = y\"", "lemma ordinal_order_less_le_not_le: \"((x::ordinal) < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\"", "lemma ordinal_linear: \"(x::ordinal) \\<le> y \\<or> y \\<le> x\"", "lemma ordinal_wf: \"wf {(x,y::ordinal). x < y}\"", "lemma ord0relD: \"(x,y) \\<in> ord0rel \\<Longrightarrow> x \\<le> y \\<and> y \\<le> x\"", "lemma ord0_precD: \"(x,y) \\<in> ord0_prec \\<Longrightarrow> \\<exists>f n. x = f n \\<and> y = ord0_Lim f\"", "lemma less_ord0_LimI: \"f n < ord0_Lim f\"", "lemma less_ord0_LimD: \"x < ord0_Lim f \\<Longrightarrow> \\<exists>n. x \\<le> f n\"", "lemma some_ord0rel: \"(x, SOME y. (x,y) \\<in> ord0rel) \\<in> ord0rel\"", "lemma ord0_Lim_le:\n\"\\<forall>n. f n \\<le> g n \\<Longrightarrow> ord0_Lim f \\<le> ord0_Lim g\"", "lemma ord0_Lim_ord0rel:\n\"\\<forall>n. (f n, g n) \\<in> ord0rel \\<Longrightarrow> (ord0_Lim f, ord0_Lim g) \\<in> ord0rel\"", "lemma Abs_ordinal_oStrictLimit:\n\"Abs_ordinal (ord0rel `` {ord0_Lim f})\n  = oStrictLimit (\\<lambda>n. Abs_ordinal (ord0rel `` {f n}))\"", "lemma oStrictLimit_induct:\nassumes base: \"P oZero\"\nassumes step: \"\\<And>f. \\<forall>n. P (f n) \\<Longrightarrow> P (oStrictLimit f)\"\nshows \"P a\"", "lemma oZero_least: \"oZero \\<le> x\"", "lemma oStrictLimit_ub: \"f n < oStrictLimit f\"", "lemma oStrictLimit_lub: \"\\<forall>n. f n < x \\<Longrightarrow> oStrictLimit f \\<le> x\"", "lemma less_oStrictLimitD: \"x < oStrictLimit f \\<Longrightarrow> \\<exists>n. x \\<le> f n\""], "translations": [["", "lemma wf_ord0_prec: \"wf ord0_prec\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf ord0_prec", "apply (unfold ord0_prec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (\\<Union>f i. {(f i, ord0_Lim f)})", "apply (rule wfUNIVI, induct_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x)\n              \\<in> (\\<Union>f i. {(f i, ord0_Lim f)}) \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       P ord0_Zero\n 2. \\<And>P x xa.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x)\n                       \\<in> (\\<Union>f i.\n                                 {(f i, ord0_Lim f)}) \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        \\<And>xaa. xaa \\<in> range xa \\<Longrightarrow> P xaa\\<rbrakk>\n       \\<Longrightarrow> P (ord0_Lim xa)", "apply (drule spec, erule mp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x)\n                       \\<in> (\\<Union>f i.\n                                 {(f i, ord0_Lim f)}) \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        \\<And>xaa. xaa \\<in> range xa \\<Longrightarrow> P xaa\\<rbrakk>\n       \\<Longrightarrow> P (ord0_Lim xa)", "apply (drule spec, erule mp, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas ord0_prec_induct = wf_induct[OF wf_trancl[OF wf_ord0_prec]]"], ["", "text \\<open>less-than-or-equal ordering on ord0\\<close>"], ["", "inductive_set ord0_leq :: \"(ord0 \\<times> ord0) set\" where\n\"\\<lbrakk>\\<forall>a. (a,x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow> (\\<exists>b. (b,y) \\<in> ord0_prec\\<^sup>+ \\<and> (a,b) \\<in> ord0_leq)\\<rbrakk>\n  \\<Longrightarrow> (x,y) \\<in> ord0_leq\""], ["", "lemma ord0_leqI:\n\"\\<lbrakk>\\<forall>a. (a,x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow> (a,y) \\<in> ord0_leq O ord0_prec\\<^sup>+\\<rbrakk>\n \\<Longrightarrow> (x,y) \\<in> ord0_leq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       (a, x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n       (a, y) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<Longrightarrow>\n    (x, y) \\<in> ord0_leq", "by (rule ord0_leq.intros, auto)"], ["", "lemma ord0_leqD:\n\"\\<lbrakk>(x,y) \\<in> ord0_leq; (a,x) \\<in> ord0_prec\\<^sup>+\\<rbrakk> \\<Longrightarrow> (a,y) \\<in> ord0_leq O ord0_prec\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> ord0_leq; (a, x) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (a, y) \\<in> ord0_leq O ord0_prec\\<^sup>+", "by (ind_cases \"(x,y) \\<in> ord0_leq\", auto)"], ["", "lemma ord0_leq_refl: \"(x, x) \\<in> ord0_leq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, x) \\<in> ord0_leq", "by (rule ord0_prec_induct, rule ord0_leqI, auto)"], ["", "lemma ord0_leq_trans[rule_format]:\n\"\\<forall>y. (x,y) \\<in> ord0_leq \\<longrightarrow>\n   (\\<forall>z. (y,z) \\<in> ord0_leq \\<longrightarrow> (x,z) \\<in> ord0_leq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       (x, y) \\<in> ord0_leq \\<longrightarrow>\n       (\\<forall>z.\n           (y, z) \\<in> ord0_leq \\<longrightarrow> (x, z) \\<in> ord0_leq)", "apply (rule ord0_prec_induct, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>\\<forall>y.\n                   (y, x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n                   (\\<forall>ya.\n                       (y, ya) \\<in> ord0_leq \\<longrightarrow>\n                       (\\<forall>z.\n                           (ya, z) \\<in> ord0_leq \\<longrightarrow>\n                           (y, z) \\<in> ord0_leq));\n        (x, y) \\<in> ord0_leq; (y, z) \\<in> ord0_leq\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq", "apply (rule ord0_leqI, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a.\n       \\<lbrakk>\\<forall>y.\n                   (y, x) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n                   (\\<forall>ya.\n                       (y, ya) \\<in> ord0_leq \\<longrightarrow>\n                       (\\<forall>z.\n                           (ya, z) \\<in> ord0_leq \\<longrightarrow>\n                           (y, z) \\<in> ord0_leq));\n        (x, y) \\<in> ord0_leq; (y, z) \\<in> ord0_leq;\n        (a, x) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (a, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a.\n       \\<lbrakk>(x, y) \\<in> ord0_leq; (y, z) \\<in> ord0_leq;\n        (a, x) \\<in> ord0_prec\\<^sup>+;\n        \\<forall>y.\n           (a, y) \\<in> ord0_leq \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> ord0_leq \\<longrightarrow>\n               (a, z) \\<in> ord0_leq)\\<rbrakk>\n       \\<Longrightarrow> (a, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule ord0_leqD, assumption, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a xa ya za.\n       \\<lbrakk>(za, z) \\<in> ord0_leq; (xa, x) \\<in> ord0_prec\\<^sup>+;\n        \\<forall>y.\n           (xa, y) \\<in> ord0_leq \\<longrightarrow>\n           (\\<forall>z.\n               (y, z) \\<in> ord0_leq \\<longrightarrow>\n               (xa, z) \\<in> ord0_leq);\n        (xa, ya) \\<in> ord0_leq; (ya, za) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (xa, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a xa ya za.\n       \\<lbrakk>(za, z) \\<in> ord0_leq; (xa, x) \\<in> ord0_prec\\<^sup>+;\n        (xa, ya) \\<in> ord0_leq; (ya, za) \\<in> ord0_prec\\<^sup>+;\n        \\<forall>z.\n           (ya, z) \\<in> ord0_leq \\<longrightarrow>\n           (xa, z) \\<in> ord0_leq\\<rbrakk>\n       \\<Longrightarrow> (xa, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule ord0_leqD, assumption, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a xa ya za xb yb zb.\n       \\<lbrakk>(xa, x) \\<in> ord0_prec\\<^sup>+; (xa, xb) \\<in> ord0_leq;\n        (xb, za) \\<in> ord0_prec\\<^sup>+;\n        \\<forall>z.\n           (xb, z) \\<in> ord0_leq \\<longrightarrow> (xa, z) \\<in> ord0_leq;\n        (xb, yb) \\<in> ord0_leq; (yb, zb) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (xa, zb) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z a xa ya za xb yb zb.\n       \\<lbrakk>(xa, x) \\<in> ord0_prec\\<^sup>+; (xa, xb) \\<in> ord0_leq;\n        (xb, za) \\<in> ord0_prec\\<^sup>+; (xb, yb) \\<in> ord0_leq;\n        (yb, zb) \\<in> ord0_prec\\<^sup>+; (xa, yb) \\<in> ord0_leq\\<rbrakk>\n       \\<Longrightarrow> (xa, zb) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wf_ord0_leq: \"wf (ord0_leq O ord0_prec\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (ord0_leq O ord0_prec\\<^sup>+)", "apply (unfold wf_def, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       P x", "apply (subgoal_tac \"\\<forall>z. (z,x) \\<in> ord0_leq \\<longrightarrow> P z\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x)\n                       \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        \\<forall>z. (z, x) \\<in> ord0_leq \\<longrightarrow> P z\\<rbrakk>\n       \\<Longrightarrow> P x\n 2. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       \\<forall>z. (z, x) \\<in> ord0_leq \\<longrightarrow> P z", "apply (drule spec, erule mp, rule ord0_leq_refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       \\<forall>z. (z, x) \\<in> ord0_leq \\<longrightarrow> P z", "apply (rule ord0_prec_induct, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa z.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x)\n                       \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        \\<forall>y.\n           (y, xa) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n           (\\<forall>z. (z, y) \\<in> ord0_leq \\<longrightarrow> P z);\n        (z, xa) \\<in> ord0_leq\\<rbrakk>\n       \\<Longrightarrow> P z", "apply (drule spec, erule mp, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa z y xb ya za.\n       \\<lbrakk>\\<forall>y.\n                   (y, xa) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n                   (\\<forall>z.\n                       (z, y) \\<in> ord0_leq \\<longrightarrow> P z);\n        (za, xa) \\<in> ord0_leq; (xb, ya) \\<in> ord0_leq;\n        (ya, za) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> P xb", "apply (drule ord0_leqD, assumption, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa z y xb ya za xc yb zb.\n       \\<lbrakk>\\<forall>y.\n                   (y, zb) \\<in> ord0_prec\\<^sup>+ \\<longrightarrow>\n                   (\\<forall>z.\n                       (z, y) \\<in> ord0_leq \\<longrightarrow> P z);\n        (xb, xc) \\<in> ord0_leq; (xc, za) \\<in> ord0_prec\\<^sup>+;\n        (xc, yb) \\<in> ord0_leq; (yb, zb) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> P xb", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa z y xb ya za xc yb zb.\n       \\<lbrakk>(xb, xc) \\<in> ord0_leq; (xc, za) \\<in> ord0_prec\\<^sup>+;\n        (xc, yb) \\<in> ord0_leq; (yb, zb) \\<in> ord0_prec\\<^sup>+;\n        \\<forall>z. (z, yb) \\<in> ord0_leq \\<longrightarrow> P z\\<rbrakk>\n       \\<Longrightarrow> P xb", "apply (drule spec, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x xa z y xb ya za xc yb zb.\n       \\<lbrakk>(xb, xc) \\<in> ord0_leq; (xc, za) \\<in> ord0_prec\\<^sup>+;\n        (xc, yb) \\<in> ord0_leq; (yb, zb) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (xb, yb) \\<in> ord0_leq", "apply (erule ord0_leq_trans, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>ordering on ord0\\<close>"], ["", "instantiation ord0 :: ord\nbegin"], ["", "definition\n  ord0_less_def: \"x < y \\<longleftrightarrow> (x,y) \\<in> ord0_leq O ord0_prec\\<^sup>+\""], ["", "definition\n  ord0_le_def:   \"x \\<le> y \\<longleftrightarrow> (x,y) \\<in> ord0_leq\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(ord0, ord_class)", ".."], ["", "end"], ["", "lemma ord0_order_refl[simp]: \"(x::ord0) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (unfold ord0_le_def, rule ord0_leq_refl)"], ["", "lemma ord0_order_trans: \"\\<lbrakk>(x::ord0) \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z", "by (unfold ord0_le_def, rule ord0_leq_trans)"], ["", "lemma ord0_wf: \"wf {(x,y::ord0). x < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(x, y). x < y}", "apply (subgoal_tac \"{(x,y). x < y} = ord0_leq O ord0_prec\\<^sup>+\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. {(x, y). x < y} = ord0_leq O ord0_prec\\<^sup>+ \\<Longrightarrow>\n    wf {(x, y). x < y}\n 2. {(x, y). x < y} = ord0_leq O ord0_prec\\<^sup>+", "apply (simp add: wf_ord0_leq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(x, y). x < y} = ord0_leq O ord0_prec\\<^sup>+", "apply (auto simp add: ord0_less_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas ord0_less_induct = wf_induct[OF ord0_wf]"], ["", "lemma ord0_leI:\n\"\\<lbrakk>\\<forall>a::ord0. a < x \\<longrightarrow> a < y\\<rbrakk> \\<Longrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a<x. a < y \\<Longrightarrow> x \\<le> y", "apply (unfold ord0_less_def ord0_le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a.\n       (a, x) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n       (a, y) \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<Longrightarrow>\n    (x, y) \\<in> ord0_leq", "apply (rule ord0_leqI[rule_format])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>a.\n                   (a, x)\n                   \\<in> ord0_leq O ord0_prec\\<^sup>+ \\<longrightarrow>\n                   (a, y) \\<in> ord0_leq O ord0_prec\\<^sup>+;\n        (a, x) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (a, y) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule spec, erule mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, x) \\<in> ord0_prec\\<^sup>+ \\<Longrightarrow>\n       (a, x) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (erule relcompI[OF ord0_leq_refl])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ord0_less_le_trans:\n\"\\<lbrakk>(x::ord0) < y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x < z", "apply (unfold ord0_le_def ord0_less_def, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya za.\n       \\<lbrakk>(y, z) \\<in> ord0_leq; (x, ya) \\<in> ord0_leq;\n        (ya, y) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule ord0_leqD, assumption, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya za xaa yaa zaa.\n       \\<lbrakk>(x, xaa) \\<in> ord0_leq; (xaa, y) \\<in> ord0_prec\\<^sup>+;\n        (xaa, yaa) \\<in> ord0_leq; (yaa, z) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "by (rule relcompI[OF ord0_leq_trans])"], ["", "lemma ord0_le_less_trans:\n\"\\<lbrakk>(x::ord0) \\<le> y; y < z\\<rbrakk> \\<Longrightarrow> x < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y < z\\<rbrakk> \\<Longrightarrow> x < z", "apply (unfold ord0_le_def ord0_less_def, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya za.\n       \\<lbrakk>(x, y) \\<in> ord0_leq; (y, ya) \\<in> ord0_leq;\n        (ya, z) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "by (rule relcompI[OF ord0_leq_trans])"], ["", "lemma rev_ord0_le_less_trans:\n\"\\<lbrakk>(y::ord0) < z; x \\<le> y\\<rbrakk> \\<Longrightarrow> x < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y < z; x \\<le> y\\<rbrakk> \\<Longrightarrow> x < z", "by (rule ord0_le_less_trans)"], ["", "lemma ord0_less_trans:\n\"\\<lbrakk>(x::ord0) < y; y < z\\<rbrakk> \\<Longrightarrow> x < z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y; y < z\\<rbrakk> \\<Longrightarrow> x < z", "apply (unfold ord0_less_def, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya za xaa yaa zaa.\n       \\<lbrakk>(x, ya) \\<in> ord0_leq; (ya, y) \\<in> ord0_prec\\<^sup>+;\n        (y, yaa) \\<in> ord0_leq; (yaa, z) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (drule ord0_leqD, assumption, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya za xaa yaa zaa xb yb zb.\n       \\<lbrakk>(x, xb) \\<in> ord0_leq; (xb, y) \\<in> ord0_prec\\<^sup>+;\n        (zb, z) \\<in> ord0_prec\\<^sup>+; (xb, yb) \\<in> ord0_leq;\n        (yb, zb) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (x, z) \\<in> ord0_leq O ord0_prec\\<^sup>+", "by (rule relcompI[OF ord0_leq_trans trancl_trans])"], ["", "lemma ord0_less_imp_le: \"(x::ord0) < y \\<Longrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<Longrightarrow> x \\<le> y", "by (rule ord0_leI[rule_format], rule ord0_less_trans)"], ["", "lemma ord0_linear_lemma:\nfixes m :: ord0 and n :: ord0\nshows \"m < n \\<or> n < m \\<or> (m \\<le> n \\<and> n \\<le> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule_tac x=m in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x < n \\<or> n < x \\<or> x \\<le> n \\<and> n \\<le> x", "apply (rule_tac a=n in ord0_less_induct, rename_tac n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>y.\n          (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n          (\\<forall>x.\n              x < y \\<or>\n              y < x \\<or> x \\<le> y \\<and> y \\<le> x) \\<Longrightarrow>\n       \\<forall>x. x < n \\<or> n < x \\<or> x \\<le> n \\<and> n \\<le> x", "apply (rule allI, rename_tac m)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<forall>y.\n          (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n          (\\<forall>x.\n              x < y \\<or>\n              y < x \\<or> x \\<le> y \\<and> y \\<le> x) \\<Longrightarrow>\n       m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule_tac a=m in ord0_less_induct, rename_tac m)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (case_tac \"\\<forall>a. a < n \\<longrightarrow> a < m\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule disjI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m\\<rbrakk>\n       \\<Longrightarrow> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (case_tac \"\\<forall>a. a < m \\<longrightarrow> a < n\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; \\<forall>a<m. a < n\\<rbrakk>\n       \\<Longrightarrow> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; \\<not> (\\<forall>a<m. a < n)\\<rbrakk>\n       \\<Longrightarrow> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 3. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule disjI2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; \\<forall>a<m. a < n\\<rbrakk>\n       \\<Longrightarrow> m \\<le> n \\<and> n \\<le> m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; \\<not> (\\<forall>a<m. a < n)\\<rbrakk>\n       \\<Longrightarrow> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 3. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule conjI, erule ord0_leI, erule ord0_leI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; \\<not> (\\<forall>a<m. a < n)\\<rbrakk>\n       \\<Longrightarrow> n < m \\<or> m \\<le> n \\<and> n \\<le> m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule disjI1, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<n.\n                   \\<forall>x.\n                      x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x;\n        \\<forall>y<m. y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<forall>a<n. a < m; a < m; \\<not> a < n\\<rbrakk>\n       \\<Longrightarrow> n < m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<n.\n                   \\<forall>x.\n                      x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x;\n        \\<forall>a<n. a < m; a < m; \\<not> a < n;\n        a < n \\<or> n < a \\<or> a \\<le> n \\<and> n \\<le> a\\<rbrakk>\n       \\<Longrightarrow> n < m\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (erule rev_ord0_le_less_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<n.\n                   \\<forall>x.\n                      x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x;\n        \\<forall>a<n. a < m; \\<not> a < n;\n        a < n \\<or> n < a \\<or> a \\<le> n \\<and> n \\<le> a\\<rbrakk>\n       \\<Longrightarrow> n \\<le> a\n 2. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (force simp add: ord0_less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n ma m.\n       \\<lbrakk>\\<forall>y.\n                   (y, n) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   (\\<forall>x.\n                       x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x);\n        \\<forall>y.\n           (y, m) \\<in> {(x, y). x < y} \\<longrightarrow>\n           y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> (\\<forall>a<n. a < m)\\<rbrakk>\n       \\<Longrightarrow> m < n \\<or> n < m \\<or> m \\<le> n \\<and> n \\<le> m", "apply (rule disjI1, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<n.\n                   \\<forall>x.\n                      x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x;\n        \\<forall>y<m. y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        a < n; \\<not> a < m\\<rbrakk>\n       \\<Longrightarrow> m < n", "apply (drule spec, drule mp, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<m.\n                   y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        a < n; \\<not> a < m;\n        \\<forall>x.\n           x < a \\<or> a < x \\<or> x \\<le> a \\<and> a \\<le> x\\<rbrakk>\n       \\<Longrightarrow> m < n", "apply (drule_tac x=m in spec, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<m.\n                   y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        a < n; \\<not> a < m; m < a \\<or> m \\<le> a \\<and> a \\<le> m\\<rbrakk>\n       \\<Longrightarrow> m < n", "apply (erule rev_ord0_le_less_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n m a.\n       \\<lbrakk>\\<forall>y<m.\n                   y < n \\<or> n < y \\<or> y \\<le> n \\<and> n \\<le> y;\n        \\<not> a < m; m < a \\<or> m \\<le> a \\<and> a \\<le> m\\<rbrakk>\n       \\<Longrightarrow> m \\<le> a", "apply (force simp add: ord0_less_imp_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ord0_linear: \"(x::ord0) \\<le> y \\<or> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<or> y \\<le> x", "apply (cut_tac ord0_linear_lemma[of x y])"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < y \\<or> y < x \\<or> x \\<le> y \\<and> y \\<le> x \\<Longrightarrow>\n    x \\<le> y \\<or> y \\<le> x", "apply (auto dest: ord0_less_imp_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ord0_order_less_le: \"(x::ord0) < y = (x \\<le> y \\<and> \\<not> y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x < y \\<Longrightarrow> x \\<le> y \\<and> \\<not> y \\<le> x\n 2. x \\<le> y \\<and> \\<not> y \\<le> x \\<Longrightarrow> x < y", "apply (clarsimp simp add: ord0_less_imp_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x < y; y \\<le> x\\<rbrakk> \\<Longrightarrow> False\n 2. x \\<le> y \\<and> \\<not> y \\<le> x \\<Longrightarrow> x < y", "apply (drule ord0_less_le_trans, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>y \\<le> x; x < x\\<rbrakk> \\<Longrightarrow> False\n 2. x \\<le> y \\<and> \\<not> y \\<le> x \\<Longrightarrow> x < y", "apply (cut_tac a=x in wf_not_refl[OF ord0_wf], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<and> \\<not> y \\<le> x \\<Longrightarrow> x < y", "apply (cut_tac ord0_linear_lemma[of x y], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y \\<and> \\<not> y \\<le> x; x < y \\<or> y < x\\<rbrakk>\n    \\<Longrightarrow> x < y", "apply (auto dest: ord0_less_imp_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Ordinal type\\<close>"], ["", "definition\n  ord0rel :: \"(ord0 \\<times> ord0) set\" where\n  \"ord0rel = {(x,y). x \\<le> y \\<and> y \\<le> x}\""], ["", "typedef ordinal = \"(UNIV::ord0 set) // ord0rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> UNIV // ord0rel", "by (unfold quotient_def, auto)"], ["", "theorem Abs_ordinal_cases2 [case_names Abs_ordinal, cases type: ordinal]:\n\"(\\<And>z. x = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        x = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n        P) \\<Longrightarrow>\n    P", "by (cases x, auto simp add: quotient_def)"], ["", "instantiation ordinal :: ord\nbegin"], ["", "definition\n  ordinal_less_def: \"x < y \\<longleftrightarrow> (\\<forall>a\\<in>Rep_ordinal x. \\<forall>b\\<in>Rep_ordinal y. a < b)\""], ["", "definition\n  ordinal_le_def: \"x \\<le> y \\<longleftrightarrow> (\\<forall>a\\<in>Rep_ordinal x. \\<forall>b\\<in>Rep_ordinal y. a \\<le> b)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(ordinal, ord_class)", ".."], ["", "end"], ["", "lemma Rep_Abs_ord0rel [simp]:\n\"Rep_ordinal (Abs_ordinal (ord0rel `` {x})) = (ord0rel `` {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_ordinal (Abs_ordinal (ord0rel `` {x})) = ord0rel `` {x}", "by (simp add: Abs_ordinal_inverse quotientI)"], ["", "lemma mem_ord0rel_Image [simp, intro!]: \"x \\<in> ord0rel `` {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ord0rel `` {x}", "by (simp add: ord0rel_def)"], ["", "lemma equiv_ord0rel: \"equiv UNIV ord0rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv UNIV ord0rel", "apply (unfold equiv_def refl_on_def sym_def trans_def ord0rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({(x, y). x \\<le> y \\<and> y \\<le> x}\n     \\<subseteq> UNIV \\<times> UNIV \\<and>\n     (\\<forall>x\\<in>UNIV.\n         (x, x) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x})) \\<and>\n    (\\<forall>x y.\n        (x, y) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x} \\<longrightarrow>\n        (y, x) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x}) \\<and>\n    (\\<forall>x y z.\n        (x, y) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x} \\<longrightarrow>\n        (y, z) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x} \\<longrightarrow>\n        (x, z) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x})", "apply (auto elim: ord0_order_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_ordinal_eq[simp]:\n\"(Abs_ordinal (ord0rel `` {x}) = Abs_ordinal (ord0rel `` {y}))\n  = (x \\<le> y \\<and> y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Abs_ordinal (ord0rel `` {x}) = Abs_ordinal (ord0rel `` {y})) =\n    (x \\<le> y \\<and> y \\<le> x)", "apply (simp add: Abs_ordinal_inject quotientI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ord0rel `` {x} = ord0rel `` {y}) = (x \\<le> y \\<and> y \\<le> x)", "apply (simp add: eq_equiv_class_iff[OF equiv_ord0rel])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> ord0rel) = (x \\<le> y \\<and> y \\<le> x)", "apply (simp add: ord0rel_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_ordinal_le[simp]:\n\"Abs_ordinal (ord0rel `` {x}) \\<le> Abs_ordinal (ord0rel `` {y}) = (x \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Abs_ordinal (ord0rel `` {x}) \\<le> Abs_ordinal (ord0rel `` {y})) =\n    (x \\<le> y)", "apply (auto simp add: ordinal_le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> y; (x, a) \\<in> ord0rel;\n        (y, b) \\<in> ord0rel\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b", "apply (unfold ord0rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> y;\n        (x, a) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x};\n        (y, b) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x}\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b", "apply (auto elim: ord0_order_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Abs_ordinal_less[simp]:\n\"Abs_ordinal (ord0rel `` {x}) < Abs_ordinal (ord0rel `` {y}) = (x < y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Abs_ordinal (ord0rel `` {x}) < Abs_ordinal (ord0rel `` {y})) = (x < y)", "apply (auto simp add: ordinal_less_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x < y; (x, a) \\<in> ord0rel; (y, b) \\<in> ord0rel\\<rbrakk>\n       \\<Longrightarrow> a < b", "apply (unfold ord0rel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>x < y; (x, a) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x};\n        (y, b) \\<in> {(x, y). x \\<le> y \\<and> y \\<le> x}\\<rbrakk>\n       \\<Longrightarrow> a < b", "apply (auto elim: ord0_less_le_trans[OF rev_ord0_le_less_trans])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ordinal_order_refl: \"(x::ordinal) \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x", "by (cases x, simp)"], ["", "lemma ordinal_order_trans: \"(x::ordinal) \\<le> y \\<Longrightarrow> y \\<le> z \\<Longrightarrow> x \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z", "by (cases x, cases y, cases z, auto elim: ord0_order_trans)"], ["", "lemma ordinal_order_antisym: \"(x::ordinal) \\<le> y \\<Longrightarrow> y \\<le> x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y", "by (cases x, cases y, simp)"], ["", "lemma ordinal_order_less_le_not_le: \"((x::ordinal) < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)", "by (cases x, cases y, auto simp add: ord0_order_less_le)"], ["", "lemma ordinal_linear: \"(x::ordinal) \\<le> y \\<or> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<or> y \\<le> x", "by (cases x, cases y, simp add: ord0_linear)"], ["", "lemma ordinal_wf: \"wf {(x,y::ordinal). x < y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(x, y). x < y}", "apply (rule wfUNIVI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x) \\<in> {(x, y). x < y} \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       P x", "apply (rule_tac x=x in Abs_ordinal_cases2, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x z.\n       \\<forall>x.\n          (\\<forall>y.\n              (y, x) \\<in> {(x, y). x < y} \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       P (Abs_ordinal (ord0rel `` {z}))", "apply (rule ord0_less_induct, rename_tac a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x z a.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> {(x, y). x < y} \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        \\<forall>y.\n           (y, a) \\<in> {(x, y). x < y} \\<longrightarrow>\n           P (Abs_ordinal (ord0rel `` {y}))\\<rbrakk>\n       \\<Longrightarrow> P (Abs_ordinal (ord0rel `` {a}))", "apply (drule spec, erule mp, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x z a y.\n       \\<lbrakk>\\<forall>y.\n                   (y, a) \\<in> {(x, y). x < y} \\<longrightarrow>\n                   P (Abs_ordinal (ord0rel `` {y}));\n        y < Abs_ordinal (ord0rel `` {a})\\<rbrakk>\n       \\<Longrightarrow> P y", "apply (rule_tac x=y in Abs_ordinal_cases2, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "instance ordinal :: wellorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(ordinal, wellorder_class)", "apply (rule wf_wellorderI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf {(x, y). x < y}\n 2. OFCLASS(ordinal, linorder_class)", "apply (rule ordinal_wf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(ordinal, linorder_class)", "apply (intro_classes)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "apply (rule ordinal_order_less_le_not_le)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "apply (rule ordinal_order_refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "apply (rule ordinal_order_trans, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "apply (rule ordinal_order_antisym, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. x \\<le> y \\<or> y \\<le> x", "apply (rule ordinal_linear)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Induction over ordinals\\<close>"], ["", "text \"zero and strict limits\""], ["", "definition\n  oZero :: \"ordinal\" where\n    \"oZero = Abs_ordinal (ord0rel `` {ord0_Zero})\""], ["", "definition\n  oStrictLimit :: \"(nat \\<Rightarrow> ordinal) \\<Rightarrow> ordinal\" where\n    \"oStrictLimit f = Abs_ordinal\n      (ord0rel `` {ord0_Lim (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n))})\""], ["", "text \"induction over ordinals\""], ["", "lemma ord0relD: \"(x,y) \\<in> ord0rel \\<Longrightarrow> x \\<le> y \\<and> y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ord0rel \\<Longrightarrow> x \\<le> y \\<and> y \\<le> x", "by (simp add: ord0rel_def)"], ["", "lemma ord0_precD: \"(x,y) \\<in> ord0_prec \\<Longrightarrow> \\<exists>f n. x = f n \\<and> y = ord0_Lim f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ord0_prec \\<Longrightarrow>\n    \\<exists>f n. x = f n \\<and> y = ord0_Lim f", "by (simp add: ord0_prec_def)"], ["", "lemma less_ord0_LimI: \"f n < ord0_Lim f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n < ord0_Lim f", "apply (simp add: ord0_less_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f n, ord0_Lim f) \\<in> ord0_leq O ord0_prec\\<^sup>+", "apply (rule relcompI[OF ord0_leq_refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f n, ord0_Lim f) \\<in> ord0_prec\\<^sup>+", "apply (rule r_into_trancl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f n, ord0_Lim f) \\<in> ord0_prec", "apply (auto simp add: ord0_prec_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_ord0_LimD: \"x < ord0_Lim f \\<Longrightarrow> \\<exists>n. x \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < ord0_Lim f \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (simp add: ord0_less_def, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y z.\n       \\<lbrakk>(x, y) \\<in> ord0_leq;\n        (y, ord0_Lim f) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (erule tranclE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y z.\n       \\<lbrakk>(x, y) \\<in> ord0_leq;\n        (y, ord0_Lim f) \\<in> ord0_prec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n\n 2. \\<And>xa y z c.\n       \\<lbrakk>(x, y) \\<in> ord0_leq; (y, c) \\<in> ord0_prec\\<^sup>+;\n        (c, ord0_Lim f) \\<in> ord0_prec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (drule ord0_precD, clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa y z fa n.\n       (x, f n) \\<in> ord0_leq \\<Longrightarrow> \\<exists>n. x \\<le> f n\n 2. \\<And>xa y z c.\n       \\<lbrakk>(x, y) \\<in> ord0_leq; (y, c) \\<in> ord0_prec\\<^sup>+;\n        (c, ord0_Lim f) \\<in> ord0_prec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (force simp add: ord0_le_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y z c.\n       \\<lbrakk>(x, y) \\<in> ord0_leq; (y, c) \\<in> ord0_prec\\<^sup>+;\n        (c, ord0_Lim f) \\<in> ord0_prec\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (drule ord0_precD, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y z c fa n.\n       \\<lbrakk>(x, y) \\<in> ord0_leq;\n        (y, f n) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (rule_tac x=n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y z c fa n.\n       \\<lbrakk>(x, y) \\<in> ord0_leq;\n        (y, f n) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<le> f n", "apply (rule ord0_less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa y z c fa n.\n       \\<lbrakk>(x, y) \\<in> ord0_leq;\n        (y, f n) \\<in> ord0_prec\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x < f n", "apply (auto simp add: ord0_less_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma some_ord0rel: \"(x, SOME y. (x,y) \\<in> ord0rel) \\<in> ord0rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, SOME y. (x, y) \\<in> ord0rel) \\<in> ord0rel", "by (rule_tac x=x in someI, simp add: ord0rel_def)"], ["", "lemma ord0_Lim_le:\n\"\\<forall>n. f n \\<le> g n \\<Longrightarrow> ord0_Lim f \\<le> ord0_Lim g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. f n \\<le> g n \\<Longrightarrow> ord0_Lim f \\<le> ord0_Lim g", "apply (rule ord0_leI[rule_format])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>\\<forall>n. f n \\<le> g n; a < ord0_Lim f\\<rbrakk>\n       \\<Longrightarrow> a < ord0_Lim g", "apply (drule less_ord0_LimD, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a n.\n       \\<lbrakk>\\<forall>n. f n \\<le> g n; a \\<le> f n\\<rbrakk>\n       \\<Longrightarrow> a < ord0_Lim g", "apply (erule ord0_le_less_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a n. \\<forall>n. f n \\<le> g n \\<Longrightarrow> f n < ord0_Lim g", "apply (drule_tac x=n in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a n. f n \\<le> g n \\<Longrightarrow> f n < ord0_Lim g", "apply (erule ord0_le_less_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a n. g n < ord0_Lim g", "apply (rule less_ord0_LimI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ord0_Lim_ord0rel:\n\"\\<forall>n. (f n, g n) \\<in> ord0rel \\<Longrightarrow> (ord0_Lim f, ord0_Lim g) \\<in> ord0rel\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. (f n, g n) \\<in> ord0rel \\<Longrightarrow>\n    (ord0_Lim f, ord0_Lim g) \\<in> ord0rel", "by (simp add: ord0rel_def ord0_Lim_le)"], ["", "lemma Abs_ordinal_oStrictLimit:\n\"Abs_ordinal (ord0rel `` {ord0_Lim f})\n  = oStrictLimit (\\<lambda>n. Abs_ordinal (ord0rel `` {f n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Abs_ordinal (ord0rel `` {ord0_Lim f}) =\n    oStrictLimit (\\<lambda>n. Abs_ordinal (ord0rel `` {f n}))", "apply (simp add: oStrictLimit_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ord0_Lim f\n    \\<le> ord0_Lim (\\<lambda>n. SOME x. (f n, x) \\<in> ord0rel) \\<and>\n    ord0_Lim (\\<lambda>n. SOME x. (f n, x) \\<in> ord0rel) \\<le> ord0_Lim f", "apply (rule ord0relD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ord0_Lim f, ord0_Lim (\\<lambda>n. SOME x. (f n, x) \\<in> ord0rel))\n    \\<in> ord0rel", "apply (rule ord0_Lim_ord0rel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. (f n, SOME x. (f n, x) \\<in> ord0rel) \\<in> ord0rel", "apply (simp add: some_ord0rel)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma oStrictLimit_induct:\nassumes base: \"P oZero\"\nassumes step: \"\\<And>f. \\<forall>n. P (f n) \\<Longrightarrow> P (oStrictLimit f)\"\nshows \"P a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P a", "apply (cases a, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       a = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       P (Abs_ordinal (ord0rel `` {z}))", "apply (induct_tac z)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       a = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       P (Abs_ordinal (ord0rel `` {ord0_Zero}))\n 2. \\<And>z x.\n       \\<lbrakk>a = Abs_ordinal (ord0rel `` {z});\n        \\<And>xa.\n           xa \\<in> range x \\<Longrightarrow>\n           P (Abs_ordinal (ord0rel `` {xa}))\\<rbrakk>\n       \\<Longrightarrow> P (Abs_ordinal (ord0rel `` {ord0_Lim x}))", "apply (rule base[unfolded oZero_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z x.\n       \\<lbrakk>a = Abs_ordinal (ord0rel `` {z});\n        \\<And>xa.\n           xa \\<in> range x \\<Longrightarrow>\n           P (Abs_ordinal (ord0rel `` {xa}))\\<rbrakk>\n       \\<Longrightarrow> P (Abs_ordinal (ord0rel `` {ord0_Lim x}))", "apply (simp add: Abs_ordinal_oStrictLimit step)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \"order properties of 0 and strict limits\""], ["", "lemma oZero_least: \"oZero \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. oZero \\<le> x", "apply (unfold oZero_def, cases x, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       x = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow> ord0_Zero \\<le> z", "apply (induct_tac z, simp, atomize)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        \\<forall>xaa.\n           xaa \\<in> range xa \\<longrightarrow> ord0_Zero \\<le> xaa\\<rbrakk>\n       \\<Longrightarrow> ord0_Zero \\<le> ord0_Lim xa", "apply (rule ord0_less_imp_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z xa.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        \\<forall>xaa.\n           xaa \\<in> range xa \\<longrightarrow> ord0_Zero \\<le> xaa\\<rbrakk>\n       \\<Longrightarrow> ord0_Zero < ord0_Lim xa", "apply (rule ord0_le_less_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z xa.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        \\<forall>xaa.\n           xaa \\<in> range xa \\<longrightarrow> ord0_Zero \\<le> xaa\\<rbrakk>\n       \\<Longrightarrow> ord0_Zero \\<le> ?y4 z xa\n 2. \\<And>z xa.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        \\<forall>xaa.\n           xaa \\<in> range xa \\<longrightarrow> ord0_Zero \\<le> xaa\\<rbrakk>\n       \\<Longrightarrow> ?y4 z xa < ord0_Lim xa", "apply (auto simp: less_ord0_LimI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma oStrictLimit_ub: \"f n < oStrictLimit f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n < oStrictLimit f", "apply (cases \"f n\", simp add: oStrictLimit_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       z < ord0_Lim (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n))", "apply (rule_tac y=\"SOME x. x \\<in> Rep_ordinal (f n)\" in ord0_le_less_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       z \\<le> (SOME x. x \\<in> Rep_ordinal (f n))\n 2. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       (SOME x. x \\<in> Rep_ordinal (f n))\n       < ord0_Lim (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n))", "apply (simp, rule ord0relD[THEN conjunct1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       (z, SOME x. (z, x) \\<in> ord0rel) \\<in> ord0rel\n 2. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       (SOME x. x \\<in> Rep_ordinal (f n))\n       < ord0_Lim (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n))", "apply (rule some_ord0rel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       f n = Abs_ordinal (ord0rel `` {z}) \\<Longrightarrow>\n       (SOME x. x \\<in> Rep_ordinal (f n))\n       < ord0_Lim (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n))", "apply (rule less_ord0_LimI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma oStrictLimit_lub: \"\\<forall>n. f n < x \\<Longrightarrow> oStrictLimit f \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. f n < x \\<Longrightarrow> oStrictLimit f \\<le> x", "apply (erule contrapos_pp, simp add: linorder_not_less linorder_not_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x < oStrictLimit f \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (cases x, simp add: oStrictLimit_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z < ord0_Lim\n                     (\\<lambda>n. SOME x. x \\<in> Rep_ordinal (f n));\n        x = Abs_ordinal (ord0rel `` {z})\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. Abs_ordinal (ord0rel `` {z}) \\<le> f n", "apply (drule less_ord0_LimD, clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z n.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        z \\<le> (SOME x. x \\<in> Rep_ordinal (f n))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. Abs_ordinal (ord0rel `` {z}) \\<le> f n", "apply (rule_tac x=n in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z n.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        z \\<le> (SOME x. x \\<in> Rep_ordinal (f n))\\<rbrakk>\n       \\<Longrightarrow> Abs_ordinal (ord0rel `` {z}) \\<le> f n", "apply (rule_tac x=\"f n\" in Abs_ordinal_cases2, simp, rename_tac y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z n y.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        z \\<le> (SOME x. (y, x) \\<in> ord0rel);\n        f n = Abs_ordinal (ord0rel `` {y})\\<rbrakk>\n       \\<Longrightarrow> z \\<le> y", "apply (erule ord0_order_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z n y.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        f n = Abs_ordinal (ord0rel `` {y})\\<rbrakk>\n       \\<Longrightarrow> (SOME x. (y, x) \\<in> ord0rel) \\<le> y", "apply (rule ord0relD[THEN conjunct2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z n y.\n       \\<lbrakk>x = Abs_ordinal (ord0rel `` {z});\n        f n = Abs_ordinal (ord0rel `` {y})\\<rbrakk>\n       \\<Longrightarrow> (y, SOME x. (y, x) \\<in> ord0rel) \\<in> ord0rel", "apply (rule some_ord0rel)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma less_oStrictLimitD: \"x < oStrictLimit f \\<Longrightarrow> \\<exists>n. x \\<le> f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < oStrictLimit f \\<Longrightarrow> \\<exists>n. x \\<le> f n", "apply (erule contrapos_pp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>n. x \\<le> f n \\<Longrightarrow> \\<not> x < oStrictLimit f", "apply (simp add: linorder_not_less linorder_not_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. f n < x \\<Longrightarrow> oStrictLimit f \\<le> x", "apply (erule oStrictLimit_lub)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}