(*  Title:      Well-Quasi-Orders\n    Author:     Christian Sternagel <c.sternagel@gmail.com>\n    Maintainer: Christian Sternagel\n    License:    LGPL\n*)\n\nsection \\<open>Instances of Well-Quasi-Orders\\<close>\n\ntheory Wqo_Instances\nimports Kruskal\nbegin\n\n\nsubsection \\<open>The Option Type is Well-Quasi-Ordered\\<close>\n\ninstantiation option :: (wqo) wqo\nbegin\ndefinition \"x \\<le> y \\<longleftrightarrow> option_le (\\<le>) x y\"\ndefinition \"(x :: 'a option) < y \\<longleftrightarrow> x \\<le> y \\<and> \\<not> (y \\<le> x)\"\n\ninstance\n  by (rule class.wqo.of_class.intro)\n     (auto simp: less_eq_option_def [abs_def] less_option_def [abs_def])\nend\n\n\nsubsection \\<open>The Sum Type is Well-Quasi-Ordered\\<close>\n\ninstantiation sum :: (wqo, wqo) wqo\nbegin\ndefinition \"x \\<le> y \\<longleftrightarrow> sum_le (\\<le>) (\\<le>) x y\"\ndefinition \"(x :: 'a + 'b) < y \\<longleftrightarrow> x \\<le> y \\<and> \\<not> (y \\<le> x)\"\n\ninstance\n  by (rule class.wqo.of_class.intro)\n     (auto simp: less_eq_sum_def [abs_def] less_sum_def [abs_def])\nend\n\n\nsubsection \\<open>Pairs are Well-Quasi-Ordered\\<close>\n\ntext \\<open>If types @{typ \"'a\"} and @{typ \"'b\"} are well-quasi-ordered by \\<open>P\\<close>\nand \\<open>Q\\<close>, then pairs of type @{typ \"'a \\<times> 'b\"} are well-quasi-ordered by\nthe pointwise combination of \\<open>P\\<close> and \\<open>Q\\<close>.\\<close>\n\ninstantiation prod :: (wqo, wqo) wqo\nbegin\ndefinition \"p \\<le> q \\<longleftrightarrow> prod_le (\\<le>) (\\<le>) p q\"\ndefinition \"(p :: 'a \\<times> 'b) < q \\<longleftrightarrow> p \\<le> q \\<and> \\<not> (q \\<le> p)\"\n\ninstance\n  by (rule class.wqo.of_class.intro)\n     (auto simp: less_eq_prod_def [abs_def] less_prod_def [abs_def])\nend\n\n\nsubsection \\<open>Lists are Well-Quasi-Ordered\\<close>\n\ntext \\<open>If the type @{typ \"'a\"} is well-quasi-ordered by \\<open>P\\<close>, then\nlists of type @{typ \"'a list\"} are well-quasi-ordered by the homeomorphic\nembedding relation.\\<close>\n\ninstantiation list :: (wqo) wqo\nbegin\ndefinition \"xs \\<le> ys \\<longleftrightarrow> list_emb (\\<le>) xs ys\"\ndefinition \"(xs :: 'a list) < ys \\<longleftrightarrow> xs \\<le> ys \\<and> \\<not> (ys \\<le> xs)\"\n\ninstance\n  by (rule class.wqo.of_class.intro)\n     (auto simp: less_eq_list_def [abs_def] less_list_def [abs_def])\nend\n\nend\n\n", "meta": "{\"subset_name\": \"curated\", \"file\": \"formal/afp/Well_Quasi_Orders/Wqo_Instances.thy\"}